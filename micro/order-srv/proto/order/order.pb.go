// Code generated by protoc-gen-go. DO NOT EDIT.
// source: btdxcx.com/micro/order-srv/proto/order/order.proto

/*
Package com_btdxcx_micro_srv_order is a generated protocol buffer package.

It is generated from these files:
	btdxcx.com/micro/order-srv/proto/order/order.proto

It has these top-level messages:
	CreateCartRequest
	OrderResponse
	ReadOrdersRequest
	ReadOrdersResponse
	ReadCustomerOrdersRequest
	ReadCustomerOrdersResponse
	ReadOrderRequest
	DeleteOrderRequest
	Response
	CreateCartItemRequest
	CartItemResponse
	UpdateCartItemRequest
	DeleteCartItemRequest
	CheckoutNewRequest
	CheckoutAddressingRequest
	CheckoutSelectShippingRequest
	CheckoutSelectPaymentRequest
	CheckoutCompleteRequest
	CancelOrderRequest
	ShipmentShipRequest
	ShipmentCompleteRequest
	OrderRecord
	Address
	Customer
	ShipmentMethod
	PaymentMethod
	ReadShipmentMethodsResponse
	CreateShipmentMethodRequest
	CreateShipmentMethodResponse
	UpdateShipmentMethodRequest
	UpdateShipmentMethodResponse
	DeleteShipmentMethodRequest
	DeleteShipmentMethodResponse
	ReadMethodsRequest
	ReadPaymentMethodsResponse
	CreatePaymentMethodRequest
	CreatePaymentMethodResponse
	UpdatePaymentMethodRequest
	UpdatePaymentMethodResponse
	DeletePaymentMethodRequest
	DeletePaymentMethodResponse
*/
package com_btdxcx_micro_srv_order

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CreateCartRequest struct {
	ShopId   string `protobuf:"bytes,1,opt,name=shop_id,json=shopId" json:"shop_id,omitempty"`
	Customer string `protobuf:"bytes,2,opt,name=customer" json:"customer,omitempty"`
}

func (m *CreateCartRequest) Reset()                    { *m = CreateCartRequest{} }
func (m *CreateCartRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateCartRequest) ProtoMessage()               {}
func (*CreateCartRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *CreateCartRequest) GetShopId() string {
	if m != nil {
		return m.ShopId
	}
	return ""
}

func (m *CreateCartRequest) GetCustomer() string {
	if m != nil {
		return m.Customer
	}
	return ""
}

type OrderResponse struct {
	Record *OrderRecord `protobuf:"bytes,1,opt,name=record" json:"record,omitempty"`
}

func (m *OrderResponse) Reset()                    { *m = OrderResponse{} }
func (m *OrderResponse) String() string            { return proto.CompactTextString(m) }
func (*OrderResponse) ProtoMessage()               {}
func (*OrderResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *OrderResponse) GetRecord() *OrderRecord {
	if m != nil {
		return m.Record
	}
	return nil
}

type ReadOrdersRequest struct {
	ShopId        string `protobuf:"bytes,1,opt,name=shop_id,json=shopId" json:"shop_id,omitempty"`
	Offset        int32  `protobuf:"varint,2,opt,name=offset" json:"offset,omitempty"`
	Limit         int32  `protobuf:"varint,3,opt,name=limit" json:"limit,omitempty"`
	State         string `protobuf:"bytes,4,opt,name=state" json:"state,omitempty"`
	CheckoutState string `protobuf:"bytes,5,opt,name=checkoutState" json:"checkoutState,omitempty"`
}

func (m *ReadOrdersRequest) Reset()                    { *m = ReadOrdersRequest{} }
func (m *ReadOrdersRequest) String() string            { return proto.CompactTextString(m) }
func (*ReadOrdersRequest) ProtoMessage()               {}
func (*ReadOrdersRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ReadOrdersRequest) GetShopId() string {
	if m != nil {
		return m.ShopId
	}
	return ""
}

func (m *ReadOrdersRequest) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *ReadOrdersRequest) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ReadOrdersRequest) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *ReadOrdersRequest) GetCheckoutState() string {
	if m != nil {
		return m.CheckoutState
	}
	return ""
}

type ReadOrdersResponse struct {
	Offset  int32          `protobuf:"varint,1,opt,name=offset" json:"offset,omitempty"`
	Limit   int32          `protobuf:"varint,2,opt,name=limit" json:"limit,omitempty"`
	Total   int32          `protobuf:"varint,3,opt,name=total" json:"total,omitempty"`
	Records []*OrderRecord `protobuf:"bytes,4,rep,name=records" json:"records,omitempty"`
}

func (m *ReadOrdersResponse) Reset()                    { *m = ReadOrdersResponse{} }
func (m *ReadOrdersResponse) String() string            { return proto.CompactTextString(m) }
func (*ReadOrdersResponse) ProtoMessage()               {}
func (*ReadOrdersResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ReadOrdersResponse) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *ReadOrdersResponse) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ReadOrdersResponse) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *ReadOrdersResponse) GetRecords() []*OrderRecord {
	if m != nil {
		return m.Records
	}
	return nil
}

type ReadCustomerOrdersRequest struct {
	ShopId        string `protobuf:"bytes,1,opt,name=shop_id,json=shopId" json:"shop_id,omitempty"`
	Customer      string `protobuf:"bytes,2,opt,name=customer" json:"customer,omitempty"`
	State         string `protobuf:"bytes,3,opt,name=state" json:"state,omitempty"`
	CheckoutState string `protobuf:"bytes,4,opt,name=checkoutState" json:"checkoutState,omitempty"`
}

func (m *ReadCustomerOrdersRequest) Reset()                    { *m = ReadCustomerOrdersRequest{} }
func (m *ReadCustomerOrdersRequest) String() string            { return proto.CompactTextString(m) }
func (*ReadCustomerOrdersRequest) ProtoMessage()               {}
func (*ReadCustomerOrdersRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ReadCustomerOrdersRequest) GetShopId() string {
	if m != nil {
		return m.ShopId
	}
	return ""
}

func (m *ReadCustomerOrdersRequest) GetCustomer() string {
	if m != nil {
		return m.Customer
	}
	return ""
}

func (m *ReadCustomerOrdersRequest) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *ReadCustomerOrdersRequest) GetCheckoutState() string {
	if m != nil {
		return m.CheckoutState
	}
	return ""
}

type ReadCustomerOrdersResponse struct {
	Records []*OrderRecord `protobuf:"bytes,1,rep,name=records" json:"records,omitempty"`
}

func (m *ReadCustomerOrdersResponse) Reset()                    { *m = ReadCustomerOrdersResponse{} }
func (m *ReadCustomerOrdersResponse) String() string            { return proto.CompactTextString(m) }
func (*ReadCustomerOrdersResponse) ProtoMessage()               {}
func (*ReadCustomerOrdersResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *ReadCustomerOrdersResponse) GetRecords() []*OrderRecord {
	if m != nil {
		return m.Records
	}
	return nil
}

type ReadOrderRequest struct {
	ShopId string `protobuf:"bytes,1,opt,name=shop_id,json=shopId" json:"shop_id,omitempty"`
	Uuid   string `protobuf:"bytes,2,opt,name=uuid" json:"uuid,omitempty"`
}

func (m *ReadOrderRequest) Reset()                    { *m = ReadOrderRequest{} }
func (m *ReadOrderRequest) String() string            { return proto.CompactTextString(m) }
func (*ReadOrderRequest) ProtoMessage()               {}
func (*ReadOrderRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *ReadOrderRequest) GetShopId() string {
	if m != nil {
		return m.ShopId
	}
	return ""
}

func (m *ReadOrderRequest) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

type DeleteOrderRequest struct {
	ShopId string `protobuf:"bytes,1,opt,name=shop_id,json=shopId" json:"shop_id,omitempty"`
	Uuid   string `protobuf:"bytes,2,opt,name=uuid" json:"uuid,omitempty"`
}

func (m *DeleteOrderRequest) Reset()                    { *m = DeleteOrderRequest{} }
func (m *DeleteOrderRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteOrderRequest) ProtoMessage()               {}
func (*DeleteOrderRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *DeleteOrderRequest) GetShopId() string {
	if m != nil {
		return m.ShopId
	}
	return ""
}

func (m *DeleteOrderRequest) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

type Response struct {
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

type CreateCartItemRequest struct {
	ShopId   string `protobuf:"bytes,1,opt,name=shop_id,json=shopId" json:"shop_id,omitempty"`
	CartId   string `protobuf:"bytes,2,opt,name=cart_id,json=cartId" json:"cart_id,omitempty"`
	Variant  string `protobuf:"bytes,3,opt,name=variant" json:"variant,omitempty"`
	Quantity int64  `protobuf:"varint,4,opt,name=quantity" json:"quantity,omitempty"`
}

func (m *CreateCartItemRequest) Reset()                    { *m = CreateCartItemRequest{} }
func (m *CreateCartItemRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateCartItemRequest) ProtoMessage()               {}
func (*CreateCartItemRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *CreateCartItemRequest) GetShopId() string {
	if m != nil {
		return m.ShopId
	}
	return ""
}

func (m *CreateCartItemRequest) GetCartId() string {
	if m != nil {
		return m.CartId
	}
	return ""
}

func (m *CreateCartItemRequest) GetVariant() string {
	if m != nil {
		return m.Variant
	}
	return ""
}

func (m *CreateCartItemRequest) GetQuantity() int64 {
	if m != nil {
		return m.Quantity
	}
	return 0
}

type CartItemResponse struct {
	Item *OrderRecord_Item `protobuf:"bytes,1,opt,name=item" json:"item,omitempty"`
}

func (m *CartItemResponse) Reset()                    { *m = CartItemResponse{} }
func (m *CartItemResponse) String() string            { return proto.CompactTextString(m) }
func (*CartItemResponse) ProtoMessage()               {}
func (*CartItemResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *CartItemResponse) GetItem() *OrderRecord_Item {
	if m != nil {
		return m.Item
	}
	return nil
}

type UpdateCartItemRequest struct {
	ShopId     string `protobuf:"bytes,1,opt,name=shop_id,json=shopId" json:"shop_id,omitempty"`
	CartId     string `protobuf:"bytes,2,opt,name=cart_id,json=cartId" json:"cart_id,omitempty"`
	CartItemId string `protobuf:"bytes,3,opt,name=cart_item_id,json=cartItemId" json:"cart_item_id,omitempty"`
	Quantity   int64  `protobuf:"varint,4,opt,name=quantity" json:"quantity,omitempty"`
}

func (m *UpdateCartItemRequest) Reset()                    { *m = UpdateCartItemRequest{} }
func (m *UpdateCartItemRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateCartItemRequest) ProtoMessage()               {}
func (*UpdateCartItemRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *UpdateCartItemRequest) GetShopId() string {
	if m != nil {
		return m.ShopId
	}
	return ""
}

func (m *UpdateCartItemRequest) GetCartId() string {
	if m != nil {
		return m.CartId
	}
	return ""
}

func (m *UpdateCartItemRequest) GetCartItemId() string {
	if m != nil {
		return m.CartItemId
	}
	return ""
}

func (m *UpdateCartItemRequest) GetQuantity() int64 {
	if m != nil {
		return m.Quantity
	}
	return 0
}

type DeleteCartItemRequest struct {
	ShopId     string `protobuf:"bytes,1,opt,name=shop_id,json=shopId" json:"shop_id,omitempty"`
	CartId     string `protobuf:"bytes,2,opt,name=cart_id,json=cartId" json:"cart_id,omitempty"`
	CartItemId string `protobuf:"bytes,3,opt,name=cart_item_id,json=cartItemId" json:"cart_item_id,omitempty"`
}

func (m *DeleteCartItemRequest) Reset()                    { *m = DeleteCartItemRequest{} }
func (m *DeleteCartItemRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteCartItemRequest) ProtoMessage()               {}
func (*DeleteCartItemRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *DeleteCartItemRequest) GetShopId() string {
	if m != nil {
		return m.ShopId
	}
	return ""
}

func (m *DeleteCartItemRequest) GetCartId() string {
	if m != nil {
		return m.CartId
	}
	return ""
}

func (m *DeleteCartItemRequest) GetCartItemId() string {
	if m != nil {
		return m.CartItemId
	}
	return ""
}

type CheckoutNewRequest struct {
	ShopId string `protobuf:"bytes,1,opt,name=shop_id,json=shopId" json:"shop_id,omitempty"`
	CartId string `protobuf:"bytes,2,opt,name=cart_id,json=cartId" json:"cart_id,omitempty"`
}

func (m *CheckoutNewRequest) Reset()                    { *m = CheckoutNewRequest{} }
func (m *CheckoutNewRequest) String() string            { return proto.CompactTextString(m) }
func (*CheckoutNewRequest) ProtoMessage()               {}
func (*CheckoutNewRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *CheckoutNewRequest) GetShopId() string {
	if m != nil {
		return m.ShopId
	}
	return ""
}

func (m *CheckoutNewRequest) GetCartId() string {
	if m != nil {
		return m.CartId
	}
	return ""
}

type CheckoutAddressingRequest struct {
	ShopId                  string   `protobuf:"bytes,1,opt,name=shop_id,json=shopId" json:"shop_id,omitempty"`
	CartId                  string   `protobuf:"bytes,2,opt,name=cart_id,json=cartId" json:"cart_id,omitempty"`
	DifferentBillingAddress bool     `protobuf:"varint,3,opt,name=differentBillingAddress" json:"differentBillingAddress,omitempty"`
	ShippingAddress         *Address `protobuf:"bytes,4,opt,name=shippingAddress" json:"shippingAddress,omitempty"`
	BillingAddress          *Address `protobuf:"bytes,5,opt,name=billingAddress" json:"billingAddress,omitempty"`
}

func (m *CheckoutAddressingRequest) Reset()                    { *m = CheckoutAddressingRequest{} }
func (m *CheckoutAddressingRequest) String() string            { return proto.CompactTextString(m) }
func (*CheckoutAddressingRequest) ProtoMessage()               {}
func (*CheckoutAddressingRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *CheckoutAddressingRequest) GetShopId() string {
	if m != nil {
		return m.ShopId
	}
	return ""
}

func (m *CheckoutAddressingRequest) GetCartId() string {
	if m != nil {
		return m.CartId
	}
	return ""
}

func (m *CheckoutAddressingRequest) GetDifferentBillingAddress() bool {
	if m != nil {
		return m.DifferentBillingAddress
	}
	return false
}

func (m *CheckoutAddressingRequest) GetShippingAddress() *Address {
	if m != nil {
		return m.ShippingAddress
	}
	return nil
}

func (m *CheckoutAddressingRequest) GetBillingAddress() *Address {
	if m != nil {
		return m.BillingAddress
	}
	return nil
}

type CheckoutSelectShippingRequest struct {
	ShopId string `protobuf:"bytes,1,opt,name=shop_id,json=shopId" json:"shop_id,omitempty"`
	CartId string `protobuf:"bytes,2,opt,name=cart_id,json=cartId" json:"cart_id,omitempty"`
	Method string `protobuf:"bytes,3,opt,name=method" json:"method,omitempty"`
}

func (m *CheckoutSelectShippingRequest) Reset()                    { *m = CheckoutSelectShippingRequest{} }
func (m *CheckoutSelectShippingRequest) String() string            { return proto.CompactTextString(m) }
func (*CheckoutSelectShippingRequest) ProtoMessage()               {}
func (*CheckoutSelectShippingRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *CheckoutSelectShippingRequest) GetShopId() string {
	if m != nil {
		return m.ShopId
	}
	return ""
}

func (m *CheckoutSelectShippingRequest) GetCartId() string {
	if m != nil {
		return m.CartId
	}
	return ""
}

func (m *CheckoutSelectShippingRequest) GetMethod() string {
	if m != nil {
		return m.Method
	}
	return ""
}

type CheckoutSelectPaymentRequest struct {
	ShopId string `protobuf:"bytes,1,opt,name=shop_id,json=shopId" json:"shop_id,omitempty"`
	CartId string `protobuf:"bytes,2,opt,name=cart_id,json=cartId" json:"cart_id,omitempty"`
	Method string `protobuf:"bytes,3,opt,name=method" json:"method,omitempty"`
}

func (m *CheckoutSelectPaymentRequest) Reset()                    { *m = CheckoutSelectPaymentRequest{} }
func (m *CheckoutSelectPaymentRequest) String() string            { return proto.CompactTextString(m) }
func (*CheckoutSelectPaymentRequest) ProtoMessage()               {}
func (*CheckoutSelectPaymentRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *CheckoutSelectPaymentRequest) GetShopId() string {
	if m != nil {
		return m.ShopId
	}
	return ""
}

func (m *CheckoutSelectPaymentRequest) GetCartId() string {
	if m != nil {
		return m.CartId
	}
	return ""
}

func (m *CheckoutSelectPaymentRequest) GetMethod() string {
	if m != nil {
		return m.Method
	}
	return ""
}

type CheckoutCompleteRequest struct {
	ShopId string `protobuf:"bytes,1,opt,name=shop_id,json=shopId" json:"shop_id,omitempty"`
	CartId string `protobuf:"bytes,2,opt,name=cart_id,json=cartId" json:"cart_id,omitempty"`
	Notes  string `protobuf:"bytes,3,opt,name=notes" json:"notes,omitempty"`
}

func (m *CheckoutCompleteRequest) Reset()                    { *m = CheckoutCompleteRequest{} }
func (m *CheckoutCompleteRequest) String() string            { return proto.CompactTextString(m) }
func (*CheckoutCompleteRequest) ProtoMessage()               {}
func (*CheckoutCompleteRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *CheckoutCompleteRequest) GetShopId() string {
	if m != nil {
		return m.ShopId
	}
	return ""
}

func (m *CheckoutCompleteRequest) GetCartId() string {
	if m != nil {
		return m.CartId
	}
	return ""
}

func (m *CheckoutCompleteRequest) GetNotes() string {
	if m != nil {
		return m.Notes
	}
	return ""
}

type CancelOrderRequest struct {
	ShopId string `protobuf:"bytes,1,opt,name=shop_id,json=shopId" json:"shop_id,omitempty"`
	CartId string `protobuf:"bytes,2,opt,name=cart_id,json=cartId" json:"cart_id,omitempty"`
}

func (m *CancelOrderRequest) Reset()                    { *m = CancelOrderRequest{} }
func (m *CancelOrderRequest) String() string            { return proto.CompactTextString(m) }
func (*CancelOrderRequest) ProtoMessage()               {}
func (*CancelOrderRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *CancelOrderRequest) GetShopId() string {
	if m != nil {
		return m.ShopId
	}
	return ""
}

func (m *CancelOrderRequest) GetCartId() string {
	if m != nil {
		return m.CartId
	}
	return ""
}

type ShipmentShipRequest struct {
	ShopId  string `protobuf:"bytes,1,opt,name=shop_id,json=shopId" json:"shop_id,omitempty"`
	OrderId string `protobuf:"bytes,2,opt,name=order_id,json=orderId" json:"order_id,omitempty"`
}

func (m *ShipmentShipRequest) Reset()                    { *m = ShipmentShipRequest{} }
func (m *ShipmentShipRequest) String() string            { return proto.CompactTextString(m) }
func (*ShipmentShipRequest) ProtoMessage()               {}
func (*ShipmentShipRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *ShipmentShipRequest) GetShopId() string {
	if m != nil {
		return m.ShopId
	}
	return ""
}

func (m *ShipmentShipRequest) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

type ShipmentCompleteRequest struct {
	ShopId  string `protobuf:"bytes,1,opt,name=shop_id,json=shopId" json:"shop_id,omitempty"`
	OrderId string `protobuf:"bytes,2,opt,name=order_id,json=orderId" json:"order_id,omitempty"`
}

func (m *ShipmentCompleteRequest) Reset()                    { *m = ShipmentCompleteRequest{} }
func (m *ShipmentCompleteRequest) String() string            { return proto.CompactTextString(m) }
func (*ShipmentCompleteRequest) ProtoMessage()               {}
func (*ShipmentCompleteRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *ShipmentCompleteRequest) GetShopId() string {
	if m != nil {
		return m.ShopId
	}
	return ""
}

func (m *ShipmentCompleteRequest) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

type OrderRecord struct {
	Uuid               string                    `protobuf:"bytes,1,opt,name=uuid" json:"uuid,omitempty"`
	Items              []*OrderRecord_Item       `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
	ItemsTotal         int64                     `protobuf:"varint,3,opt,name=itemsTotal" json:"itemsTotal,omitempty"`
	Adjustments        []*OrderRecord_Adjustment `protobuf:"bytes,4,rep,name=adjustments" json:"adjustments,omitempty"`
	AdjustmentsTotal   int64                     `protobuf:"varint,5,opt,name=adjustmentsTotal" json:"adjustmentsTotal,omitempty"`
	Total              int64                     `protobuf:"varint,6,opt,name=total" json:"total,omitempty"`
	ShippingAddress    *Address                  `protobuf:"bytes,7,opt,name=shippingAddress" json:"shippingAddress,omitempty"`
	BillingAddress     *Address                  `protobuf:"bytes,8,opt,name=billingAddress" json:"billingAddress,omitempty"`
	Shipment           *OrderRecord_Shipment     `protobuf:"bytes,9,opt,name=shipment" json:"shipment,omitempty"`
	Payment            *OrderRecord_Payment      `protobuf:"bytes,10,opt,name=payment" json:"payment,omitempty"`
	Customer           *Customer                 `protobuf:"bytes,11,opt,name=customer" json:"customer,omitempty"`
	State              string                    `protobuf:"bytes,12,opt,name=state" json:"state,omitempty"`
	CheckoutState      string                    `protobuf:"bytes,13,opt,name=checkoutState" json:"checkoutState,omitempty"`
	CheckoutCompleteAt int64                     `protobuf:"varint,14,opt,name=checkoutCompleteAt" json:"checkoutCompleteAt,omitempty"`
	CreatedAt          int64                     `protobuf:"varint,15,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	UpdatedAt          int64                     `protobuf:"varint,16,opt,name=updated_at,json=updatedAt" json:"updated_at,omitempty"`
}

func (m *OrderRecord) Reset()                    { *m = OrderRecord{} }
func (m *OrderRecord) String() string            { return proto.CompactTextString(m) }
func (*OrderRecord) ProtoMessage()               {}
func (*OrderRecord) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *OrderRecord) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *OrderRecord) GetItems() []*OrderRecord_Item {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *OrderRecord) GetItemsTotal() int64 {
	if m != nil {
		return m.ItemsTotal
	}
	return 0
}

func (m *OrderRecord) GetAdjustments() []*OrderRecord_Adjustment {
	if m != nil {
		return m.Adjustments
	}
	return nil
}

func (m *OrderRecord) GetAdjustmentsTotal() int64 {
	if m != nil {
		return m.AdjustmentsTotal
	}
	return 0
}

func (m *OrderRecord) GetTotal() int64 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *OrderRecord) GetShippingAddress() *Address {
	if m != nil {
		return m.ShippingAddress
	}
	return nil
}

func (m *OrderRecord) GetBillingAddress() *Address {
	if m != nil {
		return m.BillingAddress
	}
	return nil
}

func (m *OrderRecord) GetShipment() *OrderRecord_Shipment {
	if m != nil {
		return m.Shipment
	}
	return nil
}

func (m *OrderRecord) GetPayment() *OrderRecord_Payment {
	if m != nil {
		return m.Payment
	}
	return nil
}

func (m *OrderRecord) GetCustomer() *Customer {
	if m != nil {
		return m.Customer
	}
	return nil
}

func (m *OrderRecord) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *OrderRecord) GetCheckoutState() string {
	if m != nil {
		return m.CheckoutState
	}
	return ""
}

func (m *OrderRecord) GetCheckoutCompleteAt() int64 {
	if m != nil {
		return m.CheckoutCompleteAt
	}
	return 0
}

func (m *OrderRecord) GetCreatedAt() int64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *OrderRecord) GetUpdatedAt() int64 {
	if m != nil {
		return m.UpdatedAt
	}
	return 0
}

type OrderRecord_Payment struct {
	State  string         `protobuf:"bytes,1,opt,name=state" json:"state,omitempty"`
	Amount int64          `protobuf:"varint,2,opt,name=amount" json:"amount,omitempty"`
	Method *PaymentMethod `protobuf:"bytes,3,opt,name=method" json:"method,omitempty"`
}

func (m *OrderRecord_Payment) Reset()                    { *m = OrderRecord_Payment{} }
func (m *OrderRecord_Payment) String() string            { return proto.CompactTextString(m) }
func (*OrderRecord_Payment) ProtoMessage()               {}
func (*OrderRecord_Payment) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21, 0} }

func (m *OrderRecord_Payment) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *OrderRecord_Payment) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *OrderRecord_Payment) GetMethod() *PaymentMethod {
	if m != nil {
		return m.Method
	}
	return nil
}

type OrderRecord_Shipment struct {
	State  string          `protobuf:"bytes,1,opt,name=state" json:"state,omitempty"`
	Method *ShipmentMethod `protobuf:"bytes,2,opt,name=method" json:"method,omitempty"`
}

func (m *OrderRecord_Shipment) Reset()                    { *m = OrderRecord_Shipment{} }
func (m *OrderRecord_Shipment) String() string            { return proto.CompactTextString(m) }
func (*OrderRecord_Shipment) ProtoMessage()               {}
func (*OrderRecord_Shipment) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21, 1} }

func (m *OrderRecord_Shipment) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *OrderRecord_Shipment) GetMethod() *ShipmentMethod {
	if m != nil {
		return m.Method
	}
	return nil
}

type OrderRecord_Item struct {
	Uuid             string                    `protobuf:"bytes,1,opt,name=uuid" json:"uuid,omitempty"`
	Quantity         int64                     `protobuf:"varint,2,opt,name=quantity" json:"quantity,omitempty"`
	UnitPrice        int64                     `protobuf:"varint,3,opt,name=unitPrice" json:"unitPrice,omitempty"`
	Total            int64                     `protobuf:"varint,4,opt,name=total" json:"total,omitempty"`
	Adjustments      []*OrderRecord_Adjustment `protobuf:"bytes,5,rep,name=adjustments" json:"adjustments,omitempty"`
	AdjustmentsTotal int64                     `protobuf:"varint,6,opt,name=adjustmentsTotal" json:"adjustmentsTotal,omitempty"`
	Variant          string                    `protobuf:"bytes,7,opt,name=variant" json:"variant,omitempty"`
	CreatedAt        int64                     `protobuf:"varint,8,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	UpdatedAt        int64                     `protobuf:"varint,9,opt,name=updated_at,json=updatedAt" json:"updated_at,omitempty"`
}

func (m *OrderRecord_Item) Reset()                    { *m = OrderRecord_Item{} }
func (m *OrderRecord_Item) String() string            { return proto.CompactTextString(m) }
func (*OrderRecord_Item) ProtoMessage()               {}
func (*OrderRecord_Item) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21, 2} }

func (m *OrderRecord_Item) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *OrderRecord_Item) GetQuantity() int64 {
	if m != nil {
		return m.Quantity
	}
	return 0
}

func (m *OrderRecord_Item) GetUnitPrice() int64 {
	if m != nil {
		return m.UnitPrice
	}
	return 0
}

func (m *OrderRecord_Item) GetTotal() int64 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *OrderRecord_Item) GetAdjustments() []*OrderRecord_Adjustment {
	if m != nil {
		return m.Adjustments
	}
	return nil
}

func (m *OrderRecord_Item) GetAdjustmentsTotal() int64 {
	if m != nil {
		return m.AdjustmentsTotal
	}
	return 0
}

func (m *OrderRecord_Item) GetVariant() string {
	if m != nil {
		return m.Variant
	}
	return ""
}

func (m *OrderRecord_Item) GetCreatedAt() int64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *OrderRecord_Item) GetUpdatedAt() int64 {
	if m != nil {
		return m.UpdatedAt
	}
	return 0
}

type OrderRecord_Adjustment struct {
	Uuid   string `protobuf:"bytes,1,opt,name=uuid" json:"uuid,omitempty"`
	Type   string `protobuf:"bytes,2,opt,name=type" json:"type,omitempty"`
	Label  string `protobuf:"bytes,3,opt,name=label" json:"label,omitempty"`
	Amount int64  `protobuf:"varint,4,opt,name=amount" json:"amount,omitempty"`
}

func (m *OrderRecord_Adjustment) Reset()                    { *m = OrderRecord_Adjustment{} }
func (m *OrderRecord_Adjustment) String() string            { return proto.CompactTextString(m) }
func (*OrderRecord_Adjustment) ProtoMessage()               {}
func (*OrderRecord_Adjustment) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21, 3} }

func (m *OrderRecord_Adjustment) GetUuid() string {
	if m != nil {
		return m.Uuid
	}
	return ""
}

func (m *OrderRecord_Adjustment) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *OrderRecord_Adjustment) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

func (m *OrderRecord_Adjustment) GetAmount() int64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

type Address struct {
	Id        string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	FirstName string `protobuf:"bytes,2,opt,name=firstName" json:"firstName,omitempty"`
	LastName  string `protobuf:"bytes,3,opt,name=lastName" json:"lastName,omitempty"`
	City      string `protobuf:"bytes,4,opt,name=city" json:"city,omitempty"`
	Postcode  string `protobuf:"bytes,5,opt,name=postcode" json:"postcode,omitempty"`
	Street    string `protobuf:"bytes,6,opt,name=street" json:"street,omitempty"`
	Country   string `protobuf:"bytes,7,opt,name=country" json:"country,omitempty"`
}

func (m *Address) Reset()                    { *m = Address{} }
func (m *Address) String() string            { return proto.CompactTextString(m) }
func (*Address) ProtoMessage()               {}
func (*Address) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *Address) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Address) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *Address) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *Address) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *Address) GetPostcode() string {
	if m != nil {
		return m.Postcode
	}
	return ""
}

func (m *Address) GetStreet() string {
	if m != nil {
		return m.Street
	}
	return ""
}

func (m *Address) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

type Customer struct {
	Username  string `protobuf:"bytes,1,opt,name=username" json:"username,omitempty"`
	FirstName string `protobuf:"bytes,2,opt,name=firstName" json:"firstName,omitempty"`
	LastName  string `protobuf:"bytes,3,opt,name=lastName" json:"lastName,omitempty"`
	Phone     string `protobuf:"bytes,4,opt,name=phone" json:"phone,omitempty"`
	Email     string `protobuf:"bytes,5,opt,name=email" json:"email,omitempty"`
	Portrait  string `protobuf:"bytes,6,opt,name=portrait" json:"portrait,omitempty"`
	Role      string `protobuf:"bytes,7,opt,name=role" json:"role,omitempty"`
}

func (m *Customer) Reset()                    { *m = Customer{} }
func (m *Customer) String() string            { return proto.CompactTextString(m) }
func (*Customer) ProtoMessage()               {}
func (*Customer) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

func (m *Customer) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *Customer) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *Customer) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *Customer) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *Customer) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Customer) GetPortrait() string {
	if m != nil {
		return m.Portrait
	}
	return ""
}

func (m *Customer) GetRole() string {
	if m != nil {
		return m.Role
	}
	return ""
}

type ShipmentMethod struct {
	Code        string `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	Price       int64  `protobuf:"varint,4,opt,name=price" json:"price,omitempty"`
}

func (m *ShipmentMethod) Reset()                    { *m = ShipmentMethod{} }
func (m *ShipmentMethod) String() string            { return proto.CompactTextString(m) }
func (*ShipmentMethod) ProtoMessage()               {}
func (*ShipmentMethod) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

func (m *ShipmentMethod) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *ShipmentMethod) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ShipmentMethod) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *ShipmentMethod) GetPrice() int64 {
	if m != nil {
		return m.Price
	}
	return 0
}

type PaymentMethod struct {
	Code        string `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
}

func (m *PaymentMethod) Reset()                    { *m = PaymentMethod{} }
func (m *PaymentMethod) String() string            { return proto.CompactTextString(m) }
func (*PaymentMethod) ProtoMessage()               {}
func (*PaymentMethod) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{25} }

func (m *PaymentMethod) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *PaymentMethod) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PaymentMethod) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type ReadShipmentMethodsResponse struct {
	Methods []*ShipmentMethod `protobuf:"bytes,1,rep,name=methods" json:"methods,omitempty"`
}

func (m *ReadShipmentMethodsResponse) Reset()                    { *m = ReadShipmentMethodsResponse{} }
func (m *ReadShipmentMethodsResponse) String() string            { return proto.CompactTextString(m) }
func (*ReadShipmentMethodsResponse) ProtoMessage()               {}
func (*ReadShipmentMethodsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{26} }

func (m *ReadShipmentMethodsResponse) GetMethods() []*ShipmentMethod {
	if m != nil {
		return m.Methods
	}
	return nil
}

type CreateShipmentMethodRequest struct {
	ShopId string          `protobuf:"bytes,1,opt,name=shop_id,json=shopId" json:"shop_id,omitempty"`
	Method *ShipmentMethod `protobuf:"bytes,2,opt,name=method" json:"method,omitempty"`
}

func (m *CreateShipmentMethodRequest) Reset()                    { *m = CreateShipmentMethodRequest{} }
func (m *CreateShipmentMethodRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateShipmentMethodRequest) ProtoMessage()               {}
func (*CreateShipmentMethodRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{27} }

func (m *CreateShipmentMethodRequest) GetShopId() string {
	if m != nil {
		return m.ShopId
	}
	return ""
}

func (m *CreateShipmentMethodRequest) GetMethod() *ShipmentMethod {
	if m != nil {
		return m.Method
	}
	return nil
}

type CreateShipmentMethodResponse struct {
	Method *ShipmentMethod `protobuf:"bytes,1,opt,name=method" json:"method,omitempty"`
}

func (m *CreateShipmentMethodResponse) Reset()                    { *m = CreateShipmentMethodResponse{} }
func (m *CreateShipmentMethodResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateShipmentMethodResponse) ProtoMessage()               {}
func (*CreateShipmentMethodResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{28} }

func (m *CreateShipmentMethodResponse) GetMethod() *ShipmentMethod {
	if m != nil {
		return m.Method
	}
	return nil
}

type UpdateShipmentMethodRequest struct {
	ShopId string          `protobuf:"bytes,1,opt,name=shop_id,json=shopId" json:"shop_id,omitempty"`
	Code   string          `protobuf:"bytes,2,opt,name=code" json:"code,omitempty"`
	Method *ShipmentMethod `protobuf:"bytes,3,opt,name=method" json:"method,omitempty"`
}

func (m *UpdateShipmentMethodRequest) Reset()                    { *m = UpdateShipmentMethodRequest{} }
func (m *UpdateShipmentMethodRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateShipmentMethodRequest) ProtoMessage()               {}
func (*UpdateShipmentMethodRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{29} }

func (m *UpdateShipmentMethodRequest) GetShopId() string {
	if m != nil {
		return m.ShopId
	}
	return ""
}

func (m *UpdateShipmentMethodRequest) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *UpdateShipmentMethodRequest) GetMethod() *ShipmentMethod {
	if m != nil {
		return m.Method
	}
	return nil
}

type UpdateShipmentMethodResponse struct {
	Method *ShipmentMethod `protobuf:"bytes,1,opt,name=method" json:"method,omitempty"`
}

func (m *UpdateShipmentMethodResponse) Reset()                    { *m = UpdateShipmentMethodResponse{} }
func (m *UpdateShipmentMethodResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateShipmentMethodResponse) ProtoMessage()               {}
func (*UpdateShipmentMethodResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{30} }

func (m *UpdateShipmentMethodResponse) GetMethod() *ShipmentMethod {
	if m != nil {
		return m.Method
	}
	return nil
}

type DeleteShipmentMethodRequest struct {
	ShopId string `protobuf:"bytes,1,opt,name=shop_id,json=shopId" json:"shop_id,omitempty"`
	Code   string `protobuf:"bytes,2,opt,name=code" json:"code,omitempty"`
}

func (m *DeleteShipmentMethodRequest) Reset()                    { *m = DeleteShipmentMethodRequest{} }
func (m *DeleteShipmentMethodRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteShipmentMethodRequest) ProtoMessage()               {}
func (*DeleteShipmentMethodRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{31} }

func (m *DeleteShipmentMethodRequest) GetShopId() string {
	if m != nil {
		return m.ShopId
	}
	return ""
}

func (m *DeleteShipmentMethodRequest) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

type DeleteShipmentMethodResponse struct {
}

func (m *DeleteShipmentMethodResponse) Reset()                    { *m = DeleteShipmentMethodResponse{} }
func (m *DeleteShipmentMethodResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteShipmentMethodResponse) ProtoMessage()               {}
func (*DeleteShipmentMethodResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{32} }

type ReadMethodsRequest struct {
	ShopId string `protobuf:"bytes,1,opt,name=shop_id,json=shopId" json:"shop_id,omitempty"`
}

func (m *ReadMethodsRequest) Reset()                    { *m = ReadMethodsRequest{} }
func (m *ReadMethodsRequest) String() string            { return proto.CompactTextString(m) }
func (*ReadMethodsRequest) ProtoMessage()               {}
func (*ReadMethodsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{33} }

func (m *ReadMethodsRequest) GetShopId() string {
	if m != nil {
		return m.ShopId
	}
	return ""
}

type ReadPaymentMethodsResponse struct {
	Methods []*PaymentMethod `protobuf:"bytes,1,rep,name=methods" json:"methods,omitempty"`
}

func (m *ReadPaymentMethodsResponse) Reset()                    { *m = ReadPaymentMethodsResponse{} }
func (m *ReadPaymentMethodsResponse) String() string            { return proto.CompactTextString(m) }
func (*ReadPaymentMethodsResponse) ProtoMessage()               {}
func (*ReadPaymentMethodsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{34} }

func (m *ReadPaymentMethodsResponse) GetMethods() []*PaymentMethod {
	if m != nil {
		return m.Methods
	}
	return nil
}

type CreatePaymentMethodRequest struct {
	ShopId string         `protobuf:"bytes,1,opt,name=shop_id,json=shopId" json:"shop_id,omitempty"`
	Method *PaymentMethod `protobuf:"bytes,2,opt,name=method" json:"method,omitempty"`
}

func (m *CreatePaymentMethodRequest) Reset()                    { *m = CreatePaymentMethodRequest{} }
func (m *CreatePaymentMethodRequest) String() string            { return proto.CompactTextString(m) }
func (*CreatePaymentMethodRequest) ProtoMessage()               {}
func (*CreatePaymentMethodRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{35} }

func (m *CreatePaymentMethodRequest) GetShopId() string {
	if m != nil {
		return m.ShopId
	}
	return ""
}

func (m *CreatePaymentMethodRequest) GetMethod() *PaymentMethod {
	if m != nil {
		return m.Method
	}
	return nil
}

type CreatePaymentMethodResponse struct {
	Method *PaymentMethod `protobuf:"bytes,1,opt,name=method" json:"method,omitempty"`
}

func (m *CreatePaymentMethodResponse) Reset()                    { *m = CreatePaymentMethodResponse{} }
func (m *CreatePaymentMethodResponse) String() string            { return proto.CompactTextString(m) }
func (*CreatePaymentMethodResponse) ProtoMessage()               {}
func (*CreatePaymentMethodResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{36} }

func (m *CreatePaymentMethodResponse) GetMethod() *PaymentMethod {
	if m != nil {
		return m.Method
	}
	return nil
}

type UpdatePaymentMethodRequest struct {
	ShopId string         `protobuf:"bytes,1,opt,name=shop_id,json=shopId" json:"shop_id,omitempty"`
	Code   string         `protobuf:"bytes,2,opt,name=code" json:"code,omitempty"`
	Method *PaymentMethod `protobuf:"bytes,3,opt,name=method" json:"method,omitempty"`
}

func (m *UpdatePaymentMethodRequest) Reset()                    { *m = UpdatePaymentMethodRequest{} }
func (m *UpdatePaymentMethodRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdatePaymentMethodRequest) ProtoMessage()               {}
func (*UpdatePaymentMethodRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{37} }

func (m *UpdatePaymentMethodRequest) GetShopId() string {
	if m != nil {
		return m.ShopId
	}
	return ""
}

func (m *UpdatePaymentMethodRequest) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *UpdatePaymentMethodRequest) GetMethod() *PaymentMethod {
	if m != nil {
		return m.Method
	}
	return nil
}

type UpdatePaymentMethodResponse struct {
	Method *PaymentMethod `protobuf:"bytes,1,opt,name=method" json:"method,omitempty"`
}

func (m *UpdatePaymentMethodResponse) Reset()                    { *m = UpdatePaymentMethodResponse{} }
func (m *UpdatePaymentMethodResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdatePaymentMethodResponse) ProtoMessage()               {}
func (*UpdatePaymentMethodResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{38} }

func (m *UpdatePaymentMethodResponse) GetMethod() *PaymentMethod {
	if m != nil {
		return m.Method
	}
	return nil
}

type DeletePaymentMethodRequest struct {
	ShopId string `protobuf:"bytes,1,opt,name=shop_id,json=shopId" json:"shop_id,omitempty"`
	Code   string `protobuf:"bytes,2,opt,name=code" json:"code,omitempty"`
}

func (m *DeletePaymentMethodRequest) Reset()                    { *m = DeletePaymentMethodRequest{} }
func (m *DeletePaymentMethodRequest) String() string            { return proto.CompactTextString(m) }
func (*DeletePaymentMethodRequest) ProtoMessage()               {}
func (*DeletePaymentMethodRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{39} }

func (m *DeletePaymentMethodRequest) GetShopId() string {
	if m != nil {
		return m.ShopId
	}
	return ""
}

func (m *DeletePaymentMethodRequest) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

type DeletePaymentMethodResponse struct {
}

func (m *DeletePaymentMethodResponse) Reset()                    { *m = DeletePaymentMethodResponse{} }
func (m *DeletePaymentMethodResponse) String() string            { return proto.CompactTextString(m) }
func (*DeletePaymentMethodResponse) ProtoMessage()               {}
func (*DeletePaymentMethodResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{40} }

func init() {
	proto.RegisterType((*CreateCartRequest)(nil), "com.btdxcx.micro.srv.order.CreateCartRequest")
	proto.RegisterType((*OrderResponse)(nil), "com.btdxcx.micro.srv.order.OrderResponse")
	proto.RegisterType((*ReadOrdersRequest)(nil), "com.btdxcx.micro.srv.order.ReadOrdersRequest")
	proto.RegisterType((*ReadOrdersResponse)(nil), "com.btdxcx.micro.srv.order.ReadOrdersResponse")
	proto.RegisterType((*ReadCustomerOrdersRequest)(nil), "com.btdxcx.micro.srv.order.ReadCustomerOrdersRequest")
	proto.RegisterType((*ReadCustomerOrdersResponse)(nil), "com.btdxcx.micro.srv.order.ReadCustomerOrdersResponse")
	proto.RegisterType((*ReadOrderRequest)(nil), "com.btdxcx.micro.srv.order.ReadOrderRequest")
	proto.RegisterType((*DeleteOrderRequest)(nil), "com.btdxcx.micro.srv.order.DeleteOrderRequest")
	proto.RegisterType((*Response)(nil), "com.btdxcx.micro.srv.order.Response")
	proto.RegisterType((*CreateCartItemRequest)(nil), "com.btdxcx.micro.srv.order.CreateCartItemRequest")
	proto.RegisterType((*CartItemResponse)(nil), "com.btdxcx.micro.srv.order.CartItemResponse")
	proto.RegisterType((*UpdateCartItemRequest)(nil), "com.btdxcx.micro.srv.order.UpdateCartItemRequest")
	proto.RegisterType((*DeleteCartItemRequest)(nil), "com.btdxcx.micro.srv.order.DeleteCartItemRequest")
	proto.RegisterType((*CheckoutNewRequest)(nil), "com.btdxcx.micro.srv.order.CheckoutNewRequest")
	proto.RegisterType((*CheckoutAddressingRequest)(nil), "com.btdxcx.micro.srv.order.CheckoutAddressingRequest")
	proto.RegisterType((*CheckoutSelectShippingRequest)(nil), "com.btdxcx.micro.srv.order.CheckoutSelectShippingRequest")
	proto.RegisterType((*CheckoutSelectPaymentRequest)(nil), "com.btdxcx.micro.srv.order.CheckoutSelectPaymentRequest")
	proto.RegisterType((*CheckoutCompleteRequest)(nil), "com.btdxcx.micro.srv.order.CheckoutCompleteRequest")
	proto.RegisterType((*CancelOrderRequest)(nil), "com.btdxcx.micro.srv.order.CancelOrderRequest")
	proto.RegisterType((*ShipmentShipRequest)(nil), "com.btdxcx.micro.srv.order.ShipmentShipRequest")
	proto.RegisterType((*ShipmentCompleteRequest)(nil), "com.btdxcx.micro.srv.order.ShipmentCompleteRequest")
	proto.RegisterType((*OrderRecord)(nil), "com.btdxcx.micro.srv.order.OrderRecord")
	proto.RegisterType((*OrderRecord_Payment)(nil), "com.btdxcx.micro.srv.order.OrderRecord.Payment")
	proto.RegisterType((*OrderRecord_Shipment)(nil), "com.btdxcx.micro.srv.order.OrderRecord.Shipment")
	proto.RegisterType((*OrderRecord_Item)(nil), "com.btdxcx.micro.srv.order.OrderRecord.Item")
	proto.RegisterType((*OrderRecord_Adjustment)(nil), "com.btdxcx.micro.srv.order.OrderRecord.Adjustment")
	proto.RegisterType((*Address)(nil), "com.btdxcx.micro.srv.order.Address")
	proto.RegisterType((*Customer)(nil), "com.btdxcx.micro.srv.order.Customer")
	proto.RegisterType((*ShipmentMethod)(nil), "com.btdxcx.micro.srv.order.ShipmentMethod")
	proto.RegisterType((*PaymentMethod)(nil), "com.btdxcx.micro.srv.order.PaymentMethod")
	proto.RegisterType((*ReadShipmentMethodsResponse)(nil), "com.btdxcx.micro.srv.order.ReadShipmentMethodsResponse")
	proto.RegisterType((*CreateShipmentMethodRequest)(nil), "com.btdxcx.micro.srv.order.CreateShipmentMethodRequest")
	proto.RegisterType((*CreateShipmentMethodResponse)(nil), "com.btdxcx.micro.srv.order.CreateShipmentMethodResponse")
	proto.RegisterType((*UpdateShipmentMethodRequest)(nil), "com.btdxcx.micro.srv.order.UpdateShipmentMethodRequest")
	proto.RegisterType((*UpdateShipmentMethodResponse)(nil), "com.btdxcx.micro.srv.order.UpdateShipmentMethodResponse")
	proto.RegisterType((*DeleteShipmentMethodRequest)(nil), "com.btdxcx.micro.srv.order.DeleteShipmentMethodRequest")
	proto.RegisterType((*DeleteShipmentMethodResponse)(nil), "com.btdxcx.micro.srv.order.DeleteShipmentMethodResponse")
	proto.RegisterType((*ReadMethodsRequest)(nil), "com.btdxcx.micro.srv.order.ReadMethodsRequest")
	proto.RegisterType((*ReadPaymentMethodsResponse)(nil), "com.btdxcx.micro.srv.order.ReadPaymentMethodsResponse")
	proto.RegisterType((*CreatePaymentMethodRequest)(nil), "com.btdxcx.micro.srv.order.CreatePaymentMethodRequest")
	proto.RegisterType((*CreatePaymentMethodResponse)(nil), "com.btdxcx.micro.srv.order.CreatePaymentMethodResponse")
	proto.RegisterType((*UpdatePaymentMethodRequest)(nil), "com.btdxcx.micro.srv.order.UpdatePaymentMethodRequest")
	proto.RegisterType((*UpdatePaymentMethodResponse)(nil), "com.btdxcx.micro.srv.order.UpdatePaymentMethodResponse")
	proto.RegisterType((*DeletePaymentMethodRequest)(nil), "com.btdxcx.micro.srv.order.DeletePaymentMethodRequest")
	proto.RegisterType((*DeletePaymentMethodResponse)(nil), "com.btdxcx.micro.srv.order.DeletePaymentMethodResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for Order service

type OrderClient interface {
	CreateCart(ctx context.Context, in *CreateCartRequest, opts ...client.CallOption) (*OrderResponse, error)
	ReadOrders(ctx context.Context, in *ReadOrdersRequest, opts ...client.CallOption) (*ReadOrdersResponse, error)
	ReadOrder(ctx context.Context, in *ReadOrderRequest, opts ...client.CallOption) (*OrderResponse, error)
	DeleteOrder(ctx context.Context, in *DeleteOrderRequest, opts ...client.CallOption) (*Response, error)
	ReadCustomerOrders(ctx context.Context, in *ReadCustomerOrdersRequest, opts ...client.CallOption) (*ReadCustomerOrdersResponse, error)
	CreateCartItem(ctx context.Context, in *CreateCartItemRequest, opts ...client.CallOption) (*CartItemResponse, error)
	UpdateCartItem(ctx context.Context, in *UpdateCartItemRequest, opts ...client.CallOption) (*CartItemResponse, error)
	DeleteCartItem(ctx context.Context, in *DeleteCartItemRequest, opts ...client.CallOption) (*Response, error)
	CheckoutNew(ctx context.Context, in *CheckoutNewRequest, opts ...client.CallOption) (*Response, error)
	CheckoutAddressing(ctx context.Context, in *CheckoutAddressingRequest, opts ...client.CallOption) (*Response, error)
	CheckoutSelectShipping(ctx context.Context, in *CheckoutSelectShippingRequest, opts ...client.CallOption) (*Response, error)
	CheckoutSelectPayment(ctx context.Context, in *CheckoutSelectPaymentRequest, opts ...client.CallOption) (*Response, error)
	CheckoutComplete(ctx context.Context, in *CheckoutCompleteRequest, opts ...client.CallOption) (*Response, error)
	CancelOrder(ctx context.Context, in *CancelOrderRequest, opts ...client.CallOption) (*Response, error)
	ShipmentShip(ctx context.Context, in *ShipmentShipRequest, opts ...client.CallOption) (*Response, error)
	ShipmentComplete(ctx context.Context, in *ShipmentCompleteRequest, opts ...client.CallOption) (*Response, error)
}

type orderClient struct {
	c           client.Client
	serviceName string
}

func NewOrderClient(serviceName string, c client.Client) OrderClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "com.btdxcx.micro.srv.order"
	}
	return &orderClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *orderClient) CreateCart(ctx context.Context, in *CreateCartRequest, opts ...client.CallOption) (*OrderResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Order.CreateCart", in)
	out := new(OrderResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderClient) ReadOrders(ctx context.Context, in *ReadOrdersRequest, opts ...client.CallOption) (*ReadOrdersResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Order.ReadOrders", in)
	out := new(ReadOrdersResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderClient) ReadOrder(ctx context.Context, in *ReadOrderRequest, opts ...client.CallOption) (*OrderResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Order.ReadOrder", in)
	out := new(OrderResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderClient) DeleteOrder(ctx context.Context, in *DeleteOrderRequest, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "Order.DeleteOrder", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderClient) ReadCustomerOrders(ctx context.Context, in *ReadCustomerOrdersRequest, opts ...client.CallOption) (*ReadCustomerOrdersResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Order.ReadCustomerOrders", in)
	out := new(ReadCustomerOrdersResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderClient) CreateCartItem(ctx context.Context, in *CreateCartItemRequest, opts ...client.CallOption) (*CartItemResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Order.CreateCartItem", in)
	out := new(CartItemResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderClient) UpdateCartItem(ctx context.Context, in *UpdateCartItemRequest, opts ...client.CallOption) (*CartItemResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Order.UpdateCartItem", in)
	out := new(CartItemResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderClient) DeleteCartItem(ctx context.Context, in *DeleteCartItemRequest, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "Order.DeleteCartItem", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderClient) CheckoutNew(ctx context.Context, in *CheckoutNewRequest, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "Order.CheckoutNew", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderClient) CheckoutAddressing(ctx context.Context, in *CheckoutAddressingRequest, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "Order.CheckoutAddressing", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderClient) CheckoutSelectShipping(ctx context.Context, in *CheckoutSelectShippingRequest, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "Order.CheckoutSelectShipping", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderClient) CheckoutSelectPayment(ctx context.Context, in *CheckoutSelectPaymentRequest, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "Order.CheckoutSelectPayment", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderClient) CheckoutComplete(ctx context.Context, in *CheckoutCompleteRequest, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "Order.CheckoutComplete", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderClient) CancelOrder(ctx context.Context, in *CancelOrderRequest, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "Order.CancelOrder", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderClient) ShipmentShip(ctx context.Context, in *ShipmentShipRequest, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "Order.ShipmentShip", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *orderClient) ShipmentComplete(ctx context.Context, in *ShipmentCompleteRequest, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "Order.ShipmentComplete", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Order service

type OrderHandler interface {
	CreateCart(context.Context, *CreateCartRequest, *OrderResponse) error
	ReadOrders(context.Context, *ReadOrdersRequest, *ReadOrdersResponse) error
	ReadOrder(context.Context, *ReadOrderRequest, *OrderResponse) error
	DeleteOrder(context.Context, *DeleteOrderRequest, *Response) error
	ReadCustomerOrders(context.Context, *ReadCustomerOrdersRequest, *ReadCustomerOrdersResponse) error
	CreateCartItem(context.Context, *CreateCartItemRequest, *CartItemResponse) error
	UpdateCartItem(context.Context, *UpdateCartItemRequest, *CartItemResponse) error
	DeleteCartItem(context.Context, *DeleteCartItemRequest, *Response) error
	CheckoutNew(context.Context, *CheckoutNewRequest, *Response) error
	CheckoutAddressing(context.Context, *CheckoutAddressingRequest, *Response) error
	CheckoutSelectShipping(context.Context, *CheckoutSelectShippingRequest, *Response) error
	CheckoutSelectPayment(context.Context, *CheckoutSelectPaymentRequest, *Response) error
	CheckoutComplete(context.Context, *CheckoutCompleteRequest, *Response) error
	CancelOrder(context.Context, *CancelOrderRequest, *Response) error
	ShipmentShip(context.Context, *ShipmentShipRequest, *Response) error
	ShipmentComplete(context.Context, *ShipmentCompleteRequest, *Response) error
}

func RegisterOrderHandler(s server.Server, hdlr OrderHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&Order{hdlr}, opts...))
}

type Order struct {
	OrderHandler
}

func (h *Order) CreateCart(ctx context.Context, in *CreateCartRequest, out *OrderResponse) error {
	return h.OrderHandler.CreateCart(ctx, in, out)
}

func (h *Order) ReadOrders(ctx context.Context, in *ReadOrdersRequest, out *ReadOrdersResponse) error {
	return h.OrderHandler.ReadOrders(ctx, in, out)
}

func (h *Order) ReadOrder(ctx context.Context, in *ReadOrderRequest, out *OrderResponse) error {
	return h.OrderHandler.ReadOrder(ctx, in, out)
}

func (h *Order) DeleteOrder(ctx context.Context, in *DeleteOrderRequest, out *Response) error {
	return h.OrderHandler.DeleteOrder(ctx, in, out)
}

func (h *Order) ReadCustomerOrders(ctx context.Context, in *ReadCustomerOrdersRequest, out *ReadCustomerOrdersResponse) error {
	return h.OrderHandler.ReadCustomerOrders(ctx, in, out)
}

func (h *Order) CreateCartItem(ctx context.Context, in *CreateCartItemRequest, out *CartItemResponse) error {
	return h.OrderHandler.CreateCartItem(ctx, in, out)
}

func (h *Order) UpdateCartItem(ctx context.Context, in *UpdateCartItemRequest, out *CartItemResponse) error {
	return h.OrderHandler.UpdateCartItem(ctx, in, out)
}

func (h *Order) DeleteCartItem(ctx context.Context, in *DeleteCartItemRequest, out *Response) error {
	return h.OrderHandler.DeleteCartItem(ctx, in, out)
}

func (h *Order) CheckoutNew(ctx context.Context, in *CheckoutNewRequest, out *Response) error {
	return h.OrderHandler.CheckoutNew(ctx, in, out)
}

func (h *Order) CheckoutAddressing(ctx context.Context, in *CheckoutAddressingRequest, out *Response) error {
	return h.OrderHandler.CheckoutAddressing(ctx, in, out)
}

func (h *Order) CheckoutSelectShipping(ctx context.Context, in *CheckoutSelectShippingRequest, out *Response) error {
	return h.OrderHandler.CheckoutSelectShipping(ctx, in, out)
}

func (h *Order) CheckoutSelectPayment(ctx context.Context, in *CheckoutSelectPaymentRequest, out *Response) error {
	return h.OrderHandler.CheckoutSelectPayment(ctx, in, out)
}

func (h *Order) CheckoutComplete(ctx context.Context, in *CheckoutCompleteRequest, out *Response) error {
	return h.OrderHandler.CheckoutComplete(ctx, in, out)
}

func (h *Order) CancelOrder(ctx context.Context, in *CancelOrderRequest, out *Response) error {
	return h.OrderHandler.CancelOrder(ctx, in, out)
}

func (h *Order) ShipmentShip(ctx context.Context, in *ShipmentShipRequest, out *Response) error {
	return h.OrderHandler.ShipmentShip(ctx, in, out)
}

func (h *Order) ShipmentComplete(ctx context.Context, in *ShipmentCompleteRequest, out *Response) error {
	return h.OrderHandler.ShipmentComplete(ctx, in, out)
}

// Client API for ShipmentService service

type ShipmentServiceClient interface {
	CreateShipmentMethod(ctx context.Context, in *CreateShipmentMethodRequest, opts ...client.CallOption) (*CreateShipmentMethodResponse, error)
	ReadShipmentMethods(ctx context.Context, in *ReadMethodsRequest, opts ...client.CallOption) (*ReadShipmentMethodsResponse, error)
	UpdateShipmentMethod(ctx context.Context, in *UpdateShipmentMethodRequest, opts ...client.CallOption) (*UpdateShipmentMethodResponse, error)
	DeleteShipmentMethod(ctx context.Context, in *DeleteShipmentMethodRequest, opts ...client.CallOption) (*DeleteShipmentMethodResponse, error)
}

type shipmentServiceClient struct {
	c           client.Client
	serviceName string
}

func NewShipmentServiceClient(serviceName string, c client.Client) ShipmentServiceClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "com.btdxcx.micro.srv.order"
	}
	return &shipmentServiceClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *shipmentServiceClient) CreateShipmentMethod(ctx context.Context, in *CreateShipmentMethodRequest, opts ...client.CallOption) (*CreateShipmentMethodResponse, error) {
	req := c.c.NewRequest(c.serviceName, "ShipmentService.CreateShipmentMethod", in)
	out := new(CreateShipmentMethodResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shipmentServiceClient) ReadShipmentMethods(ctx context.Context, in *ReadMethodsRequest, opts ...client.CallOption) (*ReadShipmentMethodsResponse, error) {
	req := c.c.NewRequest(c.serviceName, "ShipmentService.ReadShipmentMethods", in)
	out := new(ReadShipmentMethodsResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shipmentServiceClient) UpdateShipmentMethod(ctx context.Context, in *UpdateShipmentMethodRequest, opts ...client.CallOption) (*UpdateShipmentMethodResponse, error) {
	req := c.c.NewRequest(c.serviceName, "ShipmentService.UpdateShipmentMethod", in)
	out := new(UpdateShipmentMethodResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *shipmentServiceClient) DeleteShipmentMethod(ctx context.Context, in *DeleteShipmentMethodRequest, opts ...client.CallOption) (*DeleteShipmentMethodResponse, error) {
	req := c.c.NewRequest(c.serviceName, "ShipmentService.DeleteShipmentMethod", in)
	out := new(DeleteShipmentMethodResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ShipmentService service

type ShipmentServiceHandler interface {
	CreateShipmentMethod(context.Context, *CreateShipmentMethodRequest, *CreateShipmentMethodResponse) error
	ReadShipmentMethods(context.Context, *ReadMethodsRequest, *ReadShipmentMethodsResponse) error
	UpdateShipmentMethod(context.Context, *UpdateShipmentMethodRequest, *UpdateShipmentMethodResponse) error
	DeleteShipmentMethod(context.Context, *DeleteShipmentMethodRequest, *DeleteShipmentMethodResponse) error
}

func RegisterShipmentServiceHandler(s server.Server, hdlr ShipmentServiceHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&ShipmentService{hdlr}, opts...))
}

type ShipmentService struct {
	ShipmentServiceHandler
}

func (h *ShipmentService) CreateShipmentMethod(ctx context.Context, in *CreateShipmentMethodRequest, out *CreateShipmentMethodResponse) error {
	return h.ShipmentServiceHandler.CreateShipmentMethod(ctx, in, out)
}

func (h *ShipmentService) ReadShipmentMethods(ctx context.Context, in *ReadMethodsRequest, out *ReadShipmentMethodsResponse) error {
	return h.ShipmentServiceHandler.ReadShipmentMethods(ctx, in, out)
}

func (h *ShipmentService) UpdateShipmentMethod(ctx context.Context, in *UpdateShipmentMethodRequest, out *UpdateShipmentMethodResponse) error {
	return h.ShipmentServiceHandler.UpdateShipmentMethod(ctx, in, out)
}

func (h *ShipmentService) DeleteShipmentMethod(ctx context.Context, in *DeleteShipmentMethodRequest, out *DeleteShipmentMethodResponse) error {
	return h.ShipmentServiceHandler.DeleteShipmentMethod(ctx, in, out)
}

// Client API for PaymentService service

type PaymentServiceClient interface {
	CreatePaymentMethod(ctx context.Context, in *CreatePaymentMethodRequest, opts ...client.CallOption) (*CreatePaymentMethodResponse, error)
	ReadPaymentMethods(ctx context.Context, in *ReadMethodsRequest, opts ...client.CallOption) (*ReadPaymentMethodsResponse, error)
	UpdatePaymentMethod(ctx context.Context, in *UpdatePaymentMethodRequest, opts ...client.CallOption) (*UpdatePaymentMethodResponse, error)
	DeletePaymentMethod(ctx context.Context, in *DeletePaymentMethodRequest, opts ...client.CallOption) (*DeletePaymentMethodResponse, error)
}

type paymentServiceClient struct {
	c           client.Client
	serviceName string
}

func NewPaymentServiceClient(serviceName string, c client.Client) PaymentServiceClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "com.btdxcx.micro.srv.order"
	}
	return &paymentServiceClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *paymentServiceClient) CreatePaymentMethod(ctx context.Context, in *CreatePaymentMethodRequest, opts ...client.CallOption) (*CreatePaymentMethodResponse, error) {
	req := c.c.NewRequest(c.serviceName, "PaymentService.CreatePaymentMethod", in)
	out := new(CreatePaymentMethodResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *paymentServiceClient) ReadPaymentMethods(ctx context.Context, in *ReadMethodsRequest, opts ...client.CallOption) (*ReadPaymentMethodsResponse, error) {
	req := c.c.NewRequest(c.serviceName, "PaymentService.ReadPaymentMethods", in)
	out := new(ReadPaymentMethodsResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *paymentServiceClient) UpdatePaymentMethod(ctx context.Context, in *UpdatePaymentMethodRequest, opts ...client.CallOption) (*UpdatePaymentMethodResponse, error) {
	req := c.c.NewRequest(c.serviceName, "PaymentService.UpdatePaymentMethod", in)
	out := new(UpdatePaymentMethodResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *paymentServiceClient) DeletePaymentMethod(ctx context.Context, in *DeletePaymentMethodRequest, opts ...client.CallOption) (*DeletePaymentMethodResponse, error) {
	req := c.c.NewRequest(c.serviceName, "PaymentService.DeletePaymentMethod", in)
	out := new(DeletePaymentMethodResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for PaymentService service

type PaymentServiceHandler interface {
	CreatePaymentMethod(context.Context, *CreatePaymentMethodRequest, *CreatePaymentMethodResponse) error
	ReadPaymentMethods(context.Context, *ReadMethodsRequest, *ReadPaymentMethodsResponse) error
	UpdatePaymentMethod(context.Context, *UpdatePaymentMethodRequest, *UpdatePaymentMethodResponse) error
	DeletePaymentMethod(context.Context, *DeletePaymentMethodRequest, *DeletePaymentMethodResponse) error
}

func RegisterPaymentServiceHandler(s server.Server, hdlr PaymentServiceHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&PaymentService{hdlr}, opts...))
}

type PaymentService struct {
	PaymentServiceHandler
}

func (h *PaymentService) CreatePaymentMethod(ctx context.Context, in *CreatePaymentMethodRequest, out *CreatePaymentMethodResponse) error {
	return h.PaymentServiceHandler.CreatePaymentMethod(ctx, in, out)
}

func (h *PaymentService) ReadPaymentMethods(ctx context.Context, in *ReadMethodsRequest, out *ReadPaymentMethodsResponse) error {
	return h.PaymentServiceHandler.ReadPaymentMethods(ctx, in, out)
}

func (h *PaymentService) UpdatePaymentMethod(ctx context.Context, in *UpdatePaymentMethodRequest, out *UpdatePaymentMethodResponse) error {
	return h.PaymentServiceHandler.UpdatePaymentMethod(ctx, in, out)
}

func (h *PaymentService) DeletePaymentMethod(ctx context.Context, in *DeletePaymentMethodRequest, out *DeletePaymentMethodResponse) error {
	return h.PaymentServiceHandler.DeletePaymentMethod(ctx, in, out)
}

func init() { proto.RegisterFile("btdxcx.com/micro/order-srv/proto/order/order.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1785 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x5a, 0x4b, 0x6f, 0x1b, 0x47,
	0x12, 0xde, 0xa1, 0xf8, 0x52, 0xd1, 0xa2, 0xe5, 0xb6, 0x1e, 0xf4, 0x48, 0x36, 0x84, 0x59, 0x03,
	0xbb, 0x36, 0x6c, 0x6a, 0x57, 0xc6, 0x5a, 0xde, 0x93, 0x4d, 0xc9, 0x58, 0xac, 0x92, 0xd8, 0x31,
	0x68, 0xe7, 0x90, 0x93, 0x32, 0x9a, 0x69, 0x59, 0x13, 0x93, 0x33, 0xd4, 0x4c, 0x53, 0xb6, 0x8c,
	0x20, 0x39, 0x04, 0x48, 0x10, 0xc0, 0xc8, 0x31, 0x97, 0x1c, 0x73, 0xca, 0x0f, 0xf0, 0x2d, 0xc7,
	0xdc, 0xf2, 0x7f, 0x72, 0x0e, 0xfa, 0x35, 0x2f, 0x35, 0x9b, 0x33, 0x94, 0x92, 0x8b, 0xcd, 0xea,
	0x9e, 0xaa, 0xaf, 0xaa, 0xba, 0xaa, 0xba, 0xba, 0x20, 0xd8, 0x3a, 0x20, 0xee, 0x1b, 0xe7, 0x4d,
	0xd7, 0x09, 0x86, 0x9b, 0x43, 0xcf, 0x09, 0x83, 0xcd, 0x20, 0x74, 0x71, 0x78, 0x37, 0x0a, 0x4f,
	0x36, 0x47, 0x61, 0x40, 0x04, 0xcd, 0xff, 0xed, 0xb2, 0x15, 0x64, 0x3a, 0xc1, 0xb0, 0x2b, 0xf8,
	0x18, 0x4f, 0x37, 0x0a, 0x4f, 0xba, 0xec, 0x0b, 0xeb, 0xff, 0x70, 0x65, 0x37, 0xc4, 0x36, 0xc1,
	0xbb, 0x76, 0x48, 0xfa, 0xf8, 0x78, 0x8c, 0x23, 0x82, 0x56, 0xa1, 0x11, 0x1d, 0x05, 0xa3, 0x7d,
	0xcf, 0xed, 0x18, 0x1b, 0xc6, 0x3f, 0xe7, 0xfb, 0x75, 0x4a, 0xee, 0xb9, 0xc8, 0x84, 0xa6, 0x33,
	0x8e, 0x48, 0x30, 0xc4, 0x61, 0xa7, 0xc2, 0x76, 0x62, 0xda, 0x7a, 0x06, 0x0b, 0x1f, 0x53, 0x91,
	0x7d, 0x1c, 0x8d, 0x02, 0x3f, 0xc2, 0xe8, 0x21, 0xd4, 0x43, 0xec, 0x04, 0x21, 0x17, 0xd2, 0xda,
	0xfa, 0x47, 0x77, 0xb2, 0x1e, 0x5d, 0xc1, 0x4a, 0x3f, 0xef, 0x0b, 0x36, 0xeb, 0x07, 0x03, 0xae,
	0xf4, 0xb1, 0xed, 0xb2, 0xbd, 0x68, 0xaa, 0x72, 0x2b, 0x50, 0x0f, 0x0e, 0x0f, 0x23, 0x4c, 0x98,
	0x6a, 0xb5, 0xbe, 0xa0, 0xd0, 0x12, 0xd4, 0x06, 0xde, 0xd0, 0x23, 0x9d, 0x39, 0xb6, 0xcc, 0x09,
	0xba, 0x1a, 0x11, 0x9b, 0xe0, 0x4e, 0x95, 0x09, 0xe1, 0x04, 0xba, 0x09, 0x0b, 0xce, 0x11, 0x76,
	0x5e, 0x05, 0x63, 0xf2, 0x9c, 0xed, 0xd6, 0xd8, 0x6e, 0x76, 0xd1, 0xfa, 0xd1, 0x00, 0x94, 0x56,
	0x4c, 0x18, 0x9c, 0x28, 0x60, 0xa8, 0x15, 0xa8, 0xe4, 0x14, 0x20, 0x01, 0xb1, 0x07, 0x52, 0x2d,
	0x46, 0xa0, 0x1e, 0x34, 0xb8, 0xf5, 0x51, 0xa7, 0xba, 0x31, 0x57, 0xc6, 0x6b, 0x92, 0xcf, 0x7a,
	0x67, 0xc0, 0x35, 0xaa, 0xdd, 0xae, 0x38, 0x99, 0x82, 0xee, 0xd3, 0x9c, 0x6d, 0xe2, 0xac, 0x39,
	0xad, 0xb3, 0xaa, 0x2a, 0x67, 0xed, 0x83, 0xa9, 0xd2, 0x46, 0xf8, 0x2c, 0x65, 0xaf, 0x31, 0xa3,
	0xbd, 0x0f, 0x61, 0x31, 0x3e, 0x8c, 0xa9, 0x56, 0x22, 0xa8, 0x8e, 0xc7, 0x9e, 0x2b, 0x2c, 0x64,
	0xbf, 0xad, 0x1e, 0xa0, 0xc7, 0x78, 0x80, 0x09, 0x9e, 0x5d, 0x04, 0x40, 0x53, 0x9a, 0x64, 0x7d,
	0x05, 0xcb, 0x49, 0x4a, 0xed, 0x11, 0x3c, 0x9c, 0x2a, 0x71, 0x15, 0x1a, 0x8e, 0x1d, 0x92, 0xfd,
	0x58, 0x68, 0x9d, 0x92, 0x7b, 0x2e, 0xea, 0x40, 0xe3, 0xc4, 0x0e, 0x3d, 0xdb, 0x27, 0xc2, 0xf3,
	0x92, 0xa4, 0xa7, 0x75, 0x3c, 0xb6, 0x7d, 0xe2, 0x91, 0x53, 0xe6, 0xf6, 0xb9, 0x7e, 0x4c, 0x5b,
	0x2f, 0x60, 0x31, 0x81, 0x16, 0x7e, 0x7e, 0x04, 0x55, 0x8f, 0xe0, 0xa1, 0x48, 0xc5, 0x3b, 0x05,
	0x9d, 0xdc, 0x65, 0x32, 0x18, 0xa7, 0xf5, 0xad, 0x01, 0xcb, 0x9f, 0x8c, 0xdc, 0x0b, 0xb1, 0x6b,
	0x03, 0x2e, 0xf1, 0x0d, 0x82, 0x87, 0x74, 0x97, 0x1b, 0x07, 0x8e, 0x10, 0xcc, 0xa3, 0x71, 0xa2,
	0x7d, 0xaf, 0x60, 0x99, 0x9f, 0xd7, 0x5f, 0xa0, 0x88, 0xf5, 0x3f, 0x40, 0xbb, 0x22, 0x9e, 0x9f,
	0xe2, 0xd7, 0x33, 0x23, 0x59, 0x3f, 0x55, 0xe0, 0x9a, 0x14, 0xd4, 0x73, 0xdd, 0x10, 0x47, 0x91,
	0xe7, 0xbf, 0x9c, 0x5d, 0xf3, 0x07, 0xb0, 0xea, 0x7a, 0x87, 0x87, 0x38, 0xc4, 0x3e, 0xd9, 0xf1,
	0x06, 0x03, 0xcf, 0x7f, 0x29, 0xc4, 0x32, 0x23, 0x9a, 0xfd, 0x49, 0xdb, 0xe8, 0x09, 0x5c, 0x8e,
	0x8e, 0xbc, 0xd1, 0x28, 0xc5, 0x51, 0x65, 0x51, 0xf1, 0x77, 0x5d, 0x54, 0x88, 0x4f, 0xfb, 0x79,
	0x5e, 0xf4, 0x21, 0xb4, 0x0f, 0xb2, 0xf8, 0xb5, 0xe2, 0xd2, 0x72, 0xac, 0x96, 0x07, 0xd7, 0xa5,
	0x93, 0x9e, 0xe3, 0x01, 0x76, 0xc8, 0x73, 0x81, 0x36, 0xbb, 0xa3, 0x56, 0xa0, 0x3e, 0xc4, 0xe4,
	0x28, 0x90, 0x87, 0x2b, 0x28, 0xeb, 0x08, 0xd6, 0xb3, 0x50, 0xcf, 0xec, 0xd3, 0x21, 0xf6, 0xc9,
	0xc5, 0x23, 0xd9, 0xb0, 0x2a, 0x91, 0x76, 0x83, 0xe1, 0x88, 0x46, 0xee, 0xec, 0x20, 0x4b, 0x50,
	0xf3, 0x03, 0x82, 0x23, 0x59, 0x8a, 0x19, 0xc1, 0xa2, 0xd4, 0xf6, 0x1d, 0x3c, 0x28, 0x56, 0xc2,
	0x26, 0x46, 0xe9, 0x1e, 0x5c, 0xa5, 0x1e, 0xa7, 0x7e, 0xa0, 0xff, 0x4f, 0x15, 0x74, 0x0d, 0x9a,
	0xec, 0x40, 0x13, 0x49, 0x0d, 0x46, 0xef, 0xb9, 0xd6, 0x13, 0x58, 0x95, 0xa2, 0x0a, 0x5b, 0xad,
	0x11, 0xf7, 0x5b, 0x0b, 0x5a, 0xa9, 0xca, 0x14, 0x57, 0x61, 0x23, 0xa9, 0xc2, 0x68, 0x07, 0x6a,
	0x34, 0x91, 0xa3, 0x4e, 0x85, 0x5d, 0x25, 0xe5, 0xaa, 0x1c, 0x67, 0x45, 0x37, 0x00, 0xd8, 0x8f,
	0x17, 0xf1, 0xdd, 0x3c, 0xd7, 0x4f, 0xad, 0xa0, 0x17, 0xd0, 0xb2, 0xdd, 0xcf, 0xc7, 0x11, 0xa1,
	0x86, 0xc9, 0x4b, 0x7a, 0xab, 0x28, 0x52, 0x2f, 0x66, 0xed, 0xa7, 0xc5, 0xa0, 0xdb, 0xb0, 0x98,
	0x22, 0x39, 0x76, 0x8d, 0x61, 0x9f, 0x59, 0x4f, 0x1a, 0x87, 0x3a, 0xfb, 0x40, 0x34, 0x0e, 0x8a,
	0xac, 0x6e, 0x5c, 0x68, 0x56, 0x37, 0x67, 0xce, 0x6a, 0xf4, 0x11, 0x34, 0x23, 0x11, 0x0a, 0x9d,
	0x79, 0x26, 0xe6, 0x5f, 0x45, 0x1d, 0x26, 0x43, 0xa8, 0x1f, 0x4b, 0x40, 0x7b, 0xd0, 0x18, 0xf1,
	0x54, 0xed, 0x00, 0x13, 0xb6, 0x59, 0x54, 0x98, 0xcc, 0x70, 0xc9, 0x8f, 0x1e, 0xa5, 0x7a, 0x9e,
	0x16, 0x93, 0x75, 0x53, 0x27, 0x4b, 0xf6, 0x30, 0xaa, 0xce, 0xe8, 0x92, 0xb6, 0x33, 0x5a, 0x50,
	0x74, 0x46, 0xa8, 0x0b, 0xc8, 0xc9, 0xd5, 0x85, 0x1e, 0xe9, 0xb4, 0xd9, 0xa9, 0x2a, 0x76, 0xd0,
	0x75, 0x00, 0x87, 0x35, 0x16, 0xee, 0xbe, 0x4d, 0x3a, 0x97, 0xd9, 0x77, 0xf3, 0x62, 0x85, 0x6f,
	0x8f, 0xd9, 0xfd, 0xcc, 0xb6, 0x17, 0xf9, 0xb6, 0x58, 0xe9, 0x11, 0xf3, 0x2d, 0x34, 0x84, 0xfd,
	0x89, 0xd2, 0x46, 0x5a, 0xe9, 0x15, 0xa8, 0xdb, 0xc3, 0x60, 0xec, 0xf3, 0x3e, 0x75, 0xae, 0x2f,
	0x28, 0xd4, 0xcb, 0x94, 0xb5, 0xd6, 0xd6, 0x2d, 0x9d, 0x8b, 0x04, 0xc4, 0x13, 0xc6, 0x20, 0x2b,
	0xa0, 0xe9, 0x42, 0x53, 0x1e, 0xe4, 0x04, 0xf0, 0x9d, 0x18, 0xa4, 0xc2, 0x40, 0x6e, 0xeb, 0x40,
	0xa4, 0xac, 0x1c, 0xca, 0xaf, 0x15, 0xa8, 0xd2, 0x54, 0x56, 0xd6, 0x86, 0x74, 0x43, 0x51, 0xc9,
	0x36, 0x14, 0x68, 0x1d, 0xe6, 0xc7, 0xbe, 0x47, 0x9e, 0x85, 0x9e, 0x83, 0x45, 0xca, 0x27, 0x0b,
	0x49, 0xbe, 0x55, 0xd3, 0xf9, 0x96, 0xab, 0x03, 0xb5, 0x3f, 0xaf, 0x0e, 0xd4, 0x27, 0xd4, 0x81,
	0x54, 0x73, 0xd8, 0xc8, 0x36, 0x87, 0xd9, 0x40, 0x69, 0xea, 0x03, 0x65, 0x3e, 0x1f, 0x28, 0x07,
	0x00, 0x89, 0x7a, 0x4a, 0x5f, 0x22, 0xa8, 0x92, 0xd3, 0x11, 0x96, 0x1d, 0x30, 0xfd, 0xcd, 0x1e,
	0x39, 0xf6, 0x01, 0x1e, 0xc8, 0x7b, 0x89, 0x11, 0xa9, 0x98, 0xaa, 0xa6, 0x63, 0xca, 0x7a, 0x6f,
	0x40, 0x43, 0x56, 0x87, 0x36, 0x54, 0x62, 0xf9, 0x15, 0xcf, 0xa5, 0xa7, 0x71, 0xe8, 0x85, 0x11,
	0x79, 0x6a, 0x0f, 0x25, 0x44, 0xb2, 0x40, 0xcf, 0x71, 0x60, 0x8b, 0x4d, 0x0e, 0x15, 0xd3, 0x54,
	0x2f, 0x47, 0x36, 0x8c, 0xf3, 0x7d, 0xf6, 0x9b, 0x7e, 0x3f, 0x0a, 0x22, 0xe2, 0x04, 0xae, 0x7c,
	0xcc, 0xc5, 0x34, 0xd5, 0x2e, 0x22, 0x21, 0xc6, 0x84, 0xf9, 0x98, 0x5e, 0x43, 0x8c, 0xa2, 0x9e,
	0x75, 0xa8, 0x9a, 0xe1, 0xa9, 0xf4, 0xac, 0x20, 0xad, 0x5f, 0x0c, 0x68, 0xca, 0x2a, 0x40, 0x45,
	0x8f, 0x23, 0x1c, 0xfa, 0x54, 0x15, 0xae, 0x7e, 0x4c, 0x9f, 0xc3, 0x88, 0x25, 0xa8, 0x8d, 0x8e,
	0x02, 0x3f, 0x7e, 0x98, 0x32, 0x82, 0xae, 0xe2, 0xa1, 0xed, 0x0d, 0x84, 0x0d, 0x9c, 0xe0, 0xc6,
	0x85, 0x24, 0xb4, 0x3d, 0x69, 0x42, 0x4c, 0x53, 0x67, 0x84, 0xc1, 0x00, 0x0b, 0x0b, 0xd8, 0x6f,
	0x6b, 0x04, 0xed, 0x6c, 0xee, 0x30, 0x97, 0x51, 0xd7, 0x88, 0xe3, 0x65, 0x6e, 0x41, 0x50, 0xf5,
	0x13, 0xb5, 0xd9, 0x6f, 0xb4, 0x01, 0x2d, 0x17, 0x47, 0x4e, 0xe8, 0x8d, 0x88, 0x17, 0xf8, 0x42,
	0xe9, 0xf4, 0x12, 0xd3, 0x9b, 0x25, 0x90, 0x48, 0x13, 0x46, 0x58, 0x9f, 0xc2, 0x42, 0xa6, 0x24,
	0x5c, 0x1c, 0xa0, 0xe5, 0xc0, 0x1a, 0x7d, 0xf7, 0x65, 0x0d, 0x4a, 0x5e, 0x96, 0x8f, 0xa1, 0xc1,
	0xeb, 0x82, 0x7c, 0x59, 0x96, 0x29, 0x29, 0x92, 0xd5, 0x7a, 0x0b, 0x6b, 0xfc, 0x31, 0x97, 0xfb,
	0x60, 0x5a, 0x27, 0x73, 0x01, 0xf5, 0xcc, 0x3a, 0x80, 0x75, 0x35, 0xb6, 0xb0, 0x30, 0xc1, 0x30,
	0x66, 0xc6, 0xf8, 0xde, 0x80, 0x35, 0xfe, 0xaa, 0x2b, 0x69, 0xa0, 0x3c, 0xc7, 0x4a, 0xea, 0x1c,
	0x77, 0x72, 0x37, 0xc5, 0x8c, 0x46, 0xab, 0xf5, 0xb9, 0x40, 0xa3, 0x3f, 0x80, 0x35, 0xfe, 0x80,
	0x3c, 0xbf, 0xcd, 0xd6, 0x0d, 0x58, 0x57, 0xcb, 0x12, 0xd3, 0x80, 0xbb, 0x7c, 0x54, 0x14, 0x47,
	0xa7, 0x1e, 0xc2, 0xb2, 0xf9, 0xb4, 0x24, 0x93, 0x33, 0x49, 0x4c, 0xef, 0xe6, 0x63, 0xba, 0xc4,
	0x5d, 0x1c, 0x87, 0xf4, 0x1b, 0x30, 0x79, 0x58, 0x65, 0xf7, 0xa7, 0x19, 0xdf, 0xcb, 0x45, 0x74,
	0xf9, 0x36, 0xc0, 0xfa, 0x4c, 0x26, 0x53, 0x0e, 0x39, 0x9e, 0x05, 0x65, 0x8f, 0x76, 0x06, 0x84,
	0x77, 0x06, 0x98, 0x3c, 0x7c, 0xca, 0x19, 0xa7, 0x8a, 0xe6, 0xf3, 0xf7, 0x3d, 0xd4, 0x60, 0xa5,
	0x36, 0x17, 0x67, 0xf0, 0x1e, 0x98, 0x3c, 0xfc, 0xce, 0x6d, 0xaf, 0x75, 0x5d, 0x66, 0x85, 0x52,
	0xd9, 0xad, 0xdf, 0x17, 0xa0, 0xc6, 0x5a, 0x18, 0x74, 0x04, 0x90, 0x0c, 0xb8, 0xd0, 0x5d, 0x6d,
	0xc7, 0x9c, 0x9f, 0x2d, 0x9b, 0xb7, 0x0a, 0xb4, 0x48, 0x22, 0x75, 0xfe, 0x86, 0x5e, 0x01, 0x24,
	0x73, 0x56, 0x3d, 0xd2, 0x99, 0x41, 0xb1, 0xd9, 0x2d, 0xfa, 0xb9, 0x38, 0x0d, 0x17, 0xe6, 0xe3,
	0x55, 0x74, 0xa7, 0x10, 0x73, 0x79, 0xa3, 0x90, 0x03, 0xad, 0xd4, 0xb0, 0x11, 0x69, 0x95, 0x3c,
	0x3b, 0x95, 0x34, 0x6f, 0xea, 0xf5, 0x12, 0x20, 0x5f, 0x8b, 0x01, 0x75, 0x76, 0xe8, 0x8a, 0xfe,
	0x33, 0xcd, 0x28, 0xe5, 0xc8, 0xd8, 0xbc, 0x5f, 0x96, 0x4d, 0x68, 0x71, 0x0c, 0xed, 0xec, 0x20,
	0x14, 0xfd, 0xbb, 0x58, 0xac, 0xa4, 0x66, 0x7a, 0xa6, 0xf6, 0x20, 0xce, 0x8c, 0x39, 0x8f, 0xa1,
	0x9d, 0x9d, 0x51, 0xea, 0x21, 0x95, 0xf3, 0xcc, 0x92, 0x90, 0x1e, 0xb4, 0xb3, 0xd3, 0x48, 0x3d,
	0xa4, 0x72, 0x72, 0x59, 0xf0, 0x58, 0x1d, 0x68, 0xa5, 0x66, 0x91, 0xfa, 0xd8, 0x39, 0x3b, 0xb4,
	0x2c, 0x08, 0x72, 0x9c, 0x0c, 0x3c, 0x93, 0x39, 0xa5, 0x3e, 0x74, 0x26, 0xce, 0x35, 0x0b, 0x42,
	0x9e, 0xc2, 0x8a, 0x7a, 0xea, 0x87, 0xfe, 0x5b, 0x04, 0x56, 0x39, 0x29, 0x2c, 0x08, 0xfd, 0x1a,
	0x96, 0x95, 0x53, 0x40, 0xf4, 0xa0, 0x38, 0x72, 0x76, 0x70, 0x58, 0x10, 0x78, 0x08, 0x8b, 0xf9,
	0xa1, 0x20, 0xba, 0x57, 0x04, 0x33, 0x37, 0x4c, 0x2b, 0x11, 0x3a, 0xc9, 0x80, 0x70, 0x4a, 0xe8,
	0x9c, 0x99, 0x24, 0x16, 0x04, 0xc1, 0x70, 0x29, 0x3d, 0x3d, 0x44, 0x9b, 0x45, 0x7a, 0xb3, 0xd4,
	0x9c, 0xb1, 0xb8, 0xeb, 0xf2, 0x93, 0x45, 0xbd, 0xeb, 0x26, 0xcc, 0x21, 0x8b, 0xc1, 0x6d, 0xbd,
	0xaf, 0xc2, 0xe5, 0x58, 0x59, 0x1c, 0x9e, 0x78, 0x0e, 0x46, 0xdf, 0x19, 0xb0, 0xa4, 0xea, 0xcd,
	0xd1, 0xf6, 0xf4, 0x0a, 0xa7, 0x6c, 0x3a, 0xcd, 0x07, 0xe5, 0x19, 0x85, 0x3b, 0xbe, 0x84, 0xab,
	0x8a, 0x77, 0x10, 0x9a, 0x7a, 0xfd, 0x65, 0x5b, 0x52, 0x73, 0x7b, 0xda, 0xf7, 0x93, 0x1e, 0x5a,
	0xd4, 0x17, 0xaa, 0x96, 0x5d, 0xef, 0x0b, 0xcd, 0xa3, 0x43, 0xef, 0x0b, 0xed, 0xeb, 0x80, 0xea,
	0xa2, 0x6a, 0xc7, 0xf5, 0xba, 0x68, 0x1e, 0x03, 0x7a, 0x5d, 0x74, 0x9d, 0xff, 0xd6, 0xcf, 0x55,
	0x68, 0x8b, 0xd2, 0x20, 0xc3, 0xe6, 0x1b, 0x03, 0xae, 0x2a, 0x3a, 0x60, 0x74, 0x7f, 0xfa, 0xe1,
	0xab, 0xfa, 0x3b, 0x73, 0xbb, 0x34, 0x9f, 0xf0, 0xd3, 0x17, 0xbc, 0x3f, 0xc8, 0x3e, 0x33, 0x4a,
	0x87, 0xcc, 0xd4, 0xc6, 0x60, 0xc2, 0x33, 0x86, 0xba, 0x41, 0xd1, 0x17, 0xeb, 0xdd, 0x30, 0xb9,
	0xad, 0x37, 0xb7, 0x4b, 0xf3, 0xa5, 0x14, 0x51, 0xf4, 0xbc, 0x7a, 0x45, 0x26, 0xf7, 0xdb, 0xe6,
	0x76, 0x69, 0x3e, 0xae, 0xc8, 0x41, 0x9d, 0xfd, 0xa5, 0xc6, 0xbd, 0x3f, 0x02, 0x00, 0x00, 0xff,
	0xff, 0x08, 0x6f, 0x8c, 0xe3, 0xdf, 0x21, 0x00, 0x00,
}
