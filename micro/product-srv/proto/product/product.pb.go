// Code generated by protoc-gen-go. DO NOT EDIT.
// source: btdxcx.com/micro/product-srv/proto/product/product.proto

/*
Package com_btdxcx_micro_srv_product is a generated protocol buffer package.

It is generated from these files:
	btdxcx.com/micro/product-srv/proto/product/product.proto

It has these top-level messages:
	CreateAttributeRequest
	CreateAttributeResponse
	ReadAttributesRequest
	ReadAttributesResponse
	ReadAttributeRequest
	ReadAttributeResponse
	UpdateAttributeRequest
	UpdateAttributeResponse
	DeleteAttributeRequest
	DeleteAttributeResponse
	AttributesRecord
	CreateOptionRequest
	CreateOptionResponse
	ReadOptionsRequest
	ReadOptionsResponse
	ReadOptionequest
	ReadOptionResponse
	UpdateOptionRequest
	UpdateOptionResponse
	DeleteOptionRequest
	DeleteOptionResponse
	OptionRecord
	CreateProductRequest
	CreateProductResponse
	ReadProductsRequest
	ReadProductsResponse
	ReadProductRequest
	ReadProductResponse
	UpdateProductRequest
	UpdateProductResponse
	DeleteProductRequest
	DeleteProductResponse
	ProductRecord
	Image
	ReviewsRecord
	VariantRecord
	ModifyTaxonsRequest
	ProductTaxon
	ModifyTaxonsResponse
	CreateProductAttributeRequest
	CreateProductAttributeResponse
	ReadProductAttributesRequest
	ReadProductAttributesResponse
	UpdateProductAttributeRequest
	UpdateProductAttributeResponse
	DeleteProductAttributeRequest
	DeleteProductAttributeResponse
	ProductAttribute
	CreateProductAssociationRequest
	CreateProductAssociationResponse
	ReadProductAssociationsRequest
	ReadProductAssociationsResponse
	UpdateProductAssociationRequest
	UpdateProductAssociationResponse
	DeleteProductAssociationRequest
	DeleteProductAssociationResponse
	ProductAssociation
	CreateProductImageRequest
	CreateProductImageResponse
	ReadProductImagesRequest
	ReadProductImagesResponse
	UpdateProductImageRequest
	UpdateProductImageResponse
	DeleteProductImageRequest
	DeleteProductImageResponse
	CreateProductReviewRequest
	CreateProductReviewResponse
	ReadProductReviewsRequest
	ReadProductReviewsResponse
	ReadProductReviewRequest
	ReadProductReviewResponse
	UpdateProductReviewRequest
	UpdateProductReviewResponse
	DeleteProductReviewRequest
	DeleteProductReviewResponse
	AcceptProductReviewRequest
	AcceptProductReviewResponse
	RejectProductReviewRequest
	RejectProductReviewResponse
	CreateProductOptionRequest
	ProductOption
	CreateProductOptionesponse
	ReadProductOptionsRequest
	ReadProductOptionsResponse
	UpdateProductOptionRequest
	UpdateProductOptionResponse
	DeleteProductOptionRequest
	DeleteProductOptionResponse
	CreateProductVariantRequest
	CreateProductVariantReponse
	ReadProductVariantsRequest
	ReadProductVariantsResponse
	ReadProductVariantRequest
	ReadProductVariantResponse
	UpdateProductVariantRequest
	UpdateProductVariantResponse
	DeleteProductVariantRequest
	DeleteProductVariantResponse
*/
package com_btdxcx_micro_srv_product

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CreateAttributeRequest struct {
	ShopId string            `protobuf:"bytes,1,opt,name=shop_id,json=shopId" json:"shop_id,omitempty"`
	Record *AttributesRecord `protobuf:"bytes,2,opt,name=record" json:"record,omitempty"`
}

func (m *CreateAttributeRequest) Reset()                    { *m = CreateAttributeRequest{} }
func (m *CreateAttributeRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateAttributeRequest) ProtoMessage()               {}
func (*CreateAttributeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *CreateAttributeRequest) GetShopId() string {
	if m != nil {
		return m.ShopId
	}
	return ""
}

func (m *CreateAttributeRequest) GetRecord() *AttributesRecord {
	if m != nil {
		return m.Record
	}
	return nil
}

type CreateAttributeResponse struct {
	Record *AttributesRecord `protobuf:"bytes,1,opt,name=record" json:"record,omitempty"`
}

func (m *CreateAttributeResponse) Reset()                    { *m = CreateAttributeResponse{} }
func (m *CreateAttributeResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateAttributeResponse) ProtoMessage()               {}
func (*CreateAttributeResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *CreateAttributeResponse) GetRecord() *AttributesRecord {
	if m != nil {
		return m.Record
	}
	return nil
}

type ReadAttributesRequest struct {
	ShopId string `protobuf:"bytes,1,opt,name=shop_id,json=shopId" json:"shop_id,omitempty"`
	Offset int32  `protobuf:"varint,2,opt,name=offset" json:"offset,omitempty"`
	Limit  int32  `protobuf:"varint,3,opt,name=limit" json:"limit,omitempty"`
}

func (m *ReadAttributesRequest) Reset()                    { *m = ReadAttributesRequest{} }
func (m *ReadAttributesRequest) String() string            { return proto.CompactTextString(m) }
func (*ReadAttributesRequest) ProtoMessage()               {}
func (*ReadAttributesRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ReadAttributesRequest) GetShopId() string {
	if m != nil {
		return m.ShopId
	}
	return ""
}

func (m *ReadAttributesRequest) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *ReadAttributesRequest) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type ReadAttributesResponse struct {
	Offset  int32               `protobuf:"varint,1,opt,name=offset" json:"offset,omitempty"`
	Limit   int32               `protobuf:"varint,2,opt,name=limit" json:"limit,omitempty"`
	Total   int32               `protobuf:"varint,3,opt,name=total" json:"total,omitempty"`
	Records []*AttributesRecord `protobuf:"bytes,4,rep,name=records" json:"records,omitempty"`
}

func (m *ReadAttributesResponse) Reset()                    { *m = ReadAttributesResponse{} }
func (m *ReadAttributesResponse) String() string            { return proto.CompactTextString(m) }
func (*ReadAttributesResponse) ProtoMessage()               {}
func (*ReadAttributesResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ReadAttributesResponse) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *ReadAttributesResponse) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ReadAttributesResponse) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *ReadAttributesResponse) GetRecords() []*AttributesRecord {
	if m != nil {
		return m.Records
	}
	return nil
}

type ReadAttributeRequest struct {
	ShopId string `protobuf:"bytes,1,opt,name=shop_id,json=shopId" json:"shop_id,omitempty"`
	Code   string `protobuf:"bytes,2,opt,name=code" json:"code,omitempty"`
}

func (m *ReadAttributeRequest) Reset()                    { *m = ReadAttributeRequest{} }
func (m *ReadAttributeRequest) String() string            { return proto.CompactTextString(m) }
func (*ReadAttributeRequest) ProtoMessage()               {}
func (*ReadAttributeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ReadAttributeRequest) GetShopId() string {
	if m != nil {
		return m.ShopId
	}
	return ""
}

func (m *ReadAttributeRequest) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

type ReadAttributeResponse struct {
	Record *AttributesRecord `protobuf:"bytes,1,opt,name=record" json:"record,omitempty"`
}

func (m *ReadAttributeResponse) Reset()                    { *m = ReadAttributeResponse{} }
func (m *ReadAttributeResponse) String() string            { return proto.CompactTextString(m) }
func (*ReadAttributeResponse) ProtoMessage()               {}
func (*ReadAttributeResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *ReadAttributeResponse) GetRecord() *AttributesRecord {
	if m != nil {
		return m.Record
	}
	return nil
}

type UpdateAttributeRequest struct {
	ShopId string            `protobuf:"bytes,1,opt,name=shop_id,json=shopId" json:"shop_id,omitempty"`
	Record *AttributesRecord `protobuf:"bytes,2,opt,name=record" json:"record,omitempty"`
}

func (m *UpdateAttributeRequest) Reset()                    { *m = UpdateAttributeRequest{} }
func (m *UpdateAttributeRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateAttributeRequest) ProtoMessage()               {}
func (*UpdateAttributeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *UpdateAttributeRequest) GetShopId() string {
	if m != nil {
		return m.ShopId
	}
	return ""
}

func (m *UpdateAttributeRequest) GetRecord() *AttributesRecord {
	if m != nil {
		return m.Record
	}
	return nil
}

type UpdateAttributeResponse struct {
	Record *AttributesRecord `protobuf:"bytes,1,opt,name=record" json:"record,omitempty"`
}

func (m *UpdateAttributeResponse) Reset()                    { *m = UpdateAttributeResponse{} }
func (m *UpdateAttributeResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateAttributeResponse) ProtoMessage()               {}
func (*UpdateAttributeResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *UpdateAttributeResponse) GetRecord() *AttributesRecord {
	if m != nil {
		return m.Record
	}
	return nil
}

type DeleteAttributeRequest struct {
	ShopId string `protobuf:"bytes,1,opt,name=shop_id,json=shopId" json:"shop_id,omitempty"`
	Code   string `protobuf:"bytes,2,opt,name=code" json:"code,omitempty"`
}

func (m *DeleteAttributeRequest) Reset()                    { *m = DeleteAttributeRequest{} }
func (m *DeleteAttributeRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteAttributeRequest) ProtoMessage()               {}
func (*DeleteAttributeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *DeleteAttributeRequest) GetShopId() string {
	if m != nil {
		return m.ShopId
	}
	return ""
}

func (m *DeleteAttributeRequest) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

type DeleteAttributeResponse struct {
}

func (m *DeleteAttributeResponse) Reset()                    { *m = DeleteAttributeResponse{} }
func (m *DeleteAttributeResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteAttributeResponse) ProtoMessage()               {}
func (*DeleteAttributeResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

type AttributesRecord struct {
	Code          string   `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Type          string   `protobuf:"bytes,2,opt,name=type" json:"type,omitempty"`
	Configuration []string `protobuf:"bytes,3,rep,name=configuration" json:"configuration,omitempty"`
	UpdatedAt     int64    `protobuf:"varint,4,opt,name=updated_at,json=updatedAt" json:"updated_at,omitempty"`
	CreatedAt     int64    `protobuf:"varint,5,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
}

func (m *AttributesRecord) Reset()                    { *m = AttributesRecord{} }
func (m *AttributesRecord) String() string            { return proto.CompactTextString(m) }
func (*AttributesRecord) ProtoMessage()               {}
func (*AttributesRecord) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *AttributesRecord) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *AttributesRecord) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *AttributesRecord) GetConfiguration() []string {
	if m != nil {
		return m.Configuration
	}
	return nil
}

func (m *AttributesRecord) GetUpdatedAt() int64 {
	if m != nil {
		return m.UpdatedAt
	}
	return 0
}

func (m *AttributesRecord) GetCreatedAt() int64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

type CreateOptionRequest struct {
	ShopId string        `protobuf:"bytes,1,opt,name=shop_id,json=shopId" json:"shop_id,omitempty"`
	Record *OptionRecord `protobuf:"bytes,2,opt,name=record" json:"record,omitempty"`
}

func (m *CreateOptionRequest) Reset()                    { *m = CreateOptionRequest{} }
func (m *CreateOptionRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateOptionRequest) ProtoMessage()               {}
func (*CreateOptionRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *CreateOptionRequest) GetShopId() string {
	if m != nil {
		return m.ShopId
	}
	return ""
}

func (m *CreateOptionRequest) GetRecord() *OptionRecord {
	if m != nil {
		return m.Record
	}
	return nil
}

type CreateOptionResponse struct {
	Record *OptionRecord `protobuf:"bytes,1,opt,name=record" json:"record,omitempty"`
}

func (m *CreateOptionResponse) Reset()                    { *m = CreateOptionResponse{} }
func (m *CreateOptionResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateOptionResponse) ProtoMessage()               {}
func (*CreateOptionResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *CreateOptionResponse) GetRecord() *OptionRecord {
	if m != nil {
		return m.Record
	}
	return nil
}

type ReadOptionsRequest struct {
	ShopId string `protobuf:"bytes,1,opt,name=shop_id,json=shopId" json:"shop_id,omitempty"`
	Offset int32  `protobuf:"varint,2,opt,name=offset" json:"offset,omitempty"`
	Limit  int32  `protobuf:"varint,3,opt,name=limit" json:"limit,omitempty"`
}

func (m *ReadOptionsRequest) Reset()                    { *m = ReadOptionsRequest{} }
func (m *ReadOptionsRequest) String() string            { return proto.CompactTextString(m) }
func (*ReadOptionsRequest) ProtoMessage()               {}
func (*ReadOptionsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *ReadOptionsRequest) GetShopId() string {
	if m != nil {
		return m.ShopId
	}
	return ""
}

func (m *ReadOptionsRequest) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *ReadOptionsRequest) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type ReadOptionsResponse struct {
	Offset  int32           `protobuf:"varint,1,opt,name=offset" json:"offset,omitempty"`
	Limit   int32           `protobuf:"varint,2,opt,name=limit" json:"limit,omitempty"`
	Total   int32           `protobuf:"varint,3,opt,name=total" json:"total,omitempty"`
	Records []*OptionRecord `protobuf:"bytes,4,rep,name=records" json:"records,omitempty"`
}

func (m *ReadOptionsResponse) Reset()                    { *m = ReadOptionsResponse{} }
func (m *ReadOptionsResponse) String() string            { return proto.CompactTextString(m) }
func (*ReadOptionsResponse) ProtoMessage()               {}
func (*ReadOptionsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *ReadOptionsResponse) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *ReadOptionsResponse) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ReadOptionsResponse) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *ReadOptionsResponse) GetRecords() []*OptionRecord {
	if m != nil {
		return m.Records
	}
	return nil
}

type ReadOptionequest struct {
	ShopId string `protobuf:"bytes,1,opt,name=shop_id,json=shopId" json:"shop_id,omitempty"`
	Code   string `protobuf:"bytes,2,opt,name=code" json:"code,omitempty"`
}

func (m *ReadOptionequest) Reset()                    { *m = ReadOptionequest{} }
func (m *ReadOptionequest) String() string            { return proto.CompactTextString(m) }
func (*ReadOptionequest) ProtoMessage()               {}
func (*ReadOptionequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *ReadOptionequest) GetShopId() string {
	if m != nil {
		return m.ShopId
	}
	return ""
}

func (m *ReadOptionequest) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

type ReadOptionResponse struct {
	Record *OptionRecord `protobuf:"bytes,1,opt,name=record" json:"record,omitempty"`
}

func (m *ReadOptionResponse) Reset()                    { *m = ReadOptionResponse{} }
func (m *ReadOptionResponse) String() string            { return proto.CompactTextString(m) }
func (*ReadOptionResponse) ProtoMessage()               {}
func (*ReadOptionResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *ReadOptionResponse) GetRecord() *OptionRecord {
	if m != nil {
		return m.Record
	}
	return nil
}

type UpdateOptionRequest struct {
	ShopId string        `protobuf:"bytes,1,opt,name=shop_id,json=shopId" json:"shop_id,omitempty"`
	Code   string        `protobuf:"bytes,2,opt,name=code" json:"code,omitempty"`
	Record *OptionRecord `protobuf:"bytes,3,opt,name=record" json:"record,omitempty"`
}

func (m *UpdateOptionRequest) Reset()                    { *m = UpdateOptionRequest{} }
func (m *UpdateOptionRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateOptionRequest) ProtoMessage()               {}
func (*UpdateOptionRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *UpdateOptionRequest) GetShopId() string {
	if m != nil {
		return m.ShopId
	}
	return ""
}

func (m *UpdateOptionRequest) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *UpdateOptionRequest) GetRecord() *OptionRecord {
	if m != nil {
		return m.Record
	}
	return nil
}

type UpdateOptionResponse struct {
	Record *OptionRecord `protobuf:"bytes,1,opt,name=record" json:"record,omitempty"`
}

func (m *UpdateOptionResponse) Reset()                    { *m = UpdateOptionResponse{} }
func (m *UpdateOptionResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateOptionResponse) ProtoMessage()               {}
func (*UpdateOptionResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *UpdateOptionResponse) GetRecord() *OptionRecord {
	if m != nil {
		return m.Record
	}
	return nil
}

type DeleteOptionRequest struct {
	ShopId string `protobuf:"bytes,1,opt,name=shop_id,json=shopId" json:"shop_id,omitempty"`
	Code   string `protobuf:"bytes,2,opt,name=code" json:"code,omitempty"`
}

func (m *DeleteOptionRequest) Reset()                    { *m = DeleteOptionRequest{} }
func (m *DeleteOptionRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteOptionRequest) ProtoMessage()               {}
func (*DeleteOptionRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *DeleteOptionRequest) GetShopId() string {
	if m != nil {
		return m.ShopId
	}
	return ""
}

func (m *DeleteOptionRequest) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

type DeleteOptionResponse struct {
}

func (m *DeleteOptionResponse) Reset()                    { *m = DeleteOptionResponse{} }
func (m *DeleteOptionResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteOptionResponse) ProtoMessage()               {}
func (*DeleteOptionResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

type OptionRecord struct {
	Code      string                      `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Options   []*OptionRecord_OptionValue `protobuf:"bytes,2,rep,name=options" json:"options,omitempty"`
	UpdatedAt int64                       `protobuf:"varint,3,opt,name=updated_at,json=updatedAt" json:"updated_at,omitempty"`
	CreatedAt int64                       `protobuf:"varint,4,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
}

func (m *OptionRecord) Reset()                    { *m = OptionRecord{} }
func (m *OptionRecord) String() string            { return proto.CompactTextString(m) }
func (*OptionRecord) ProtoMessage()               {}
func (*OptionRecord) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *OptionRecord) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *OptionRecord) GetOptions() []*OptionRecord_OptionValue {
	if m != nil {
		return m.Options
	}
	return nil
}

func (m *OptionRecord) GetUpdatedAt() int64 {
	if m != nil {
		return m.UpdatedAt
	}
	return 0
}

func (m *OptionRecord) GetCreatedAt() int64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

type OptionRecord_OptionValue struct {
	Value       string `protobuf:"bytes,1,opt,name=value" json:"value,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
}

func (m *OptionRecord_OptionValue) Reset()                    { *m = OptionRecord_OptionValue{} }
func (m *OptionRecord_OptionValue) String() string            { return proto.CompactTextString(m) }
func (*OptionRecord_OptionValue) ProtoMessage()               {}
func (*OptionRecord_OptionValue) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21, 0} }

func (m *OptionRecord_OptionValue) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *OptionRecord_OptionValue) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type CreateProductRequest struct {
	ShopId string         `protobuf:"bytes,1,opt,name=shop_id,json=shopId" json:"shop_id,omitempty"`
	Record *ProductRecord `protobuf:"bytes,2,opt,name=record" json:"record,omitempty"`
}

func (m *CreateProductRequest) Reset()                    { *m = CreateProductRequest{} }
func (m *CreateProductRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateProductRequest) ProtoMessage()               {}
func (*CreateProductRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *CreateProductRequest) GetShopId() string {
	if m != nil {
		return m.ShopId
	}
	return ""
}

func (m *CreateProductRequest) GetRecord() *ProductRecord {
	if m != nil {
		return m.Record
	}
	return nil
}

type CreateProductResponse struct {
	Record *ProductRecord `protobuf:"bytes,1,opt,name=record" json:"record,omitempty"`
}

func (m *CreateProductResponse) Reset()                    { *m = CreateProductResponse{} }
func (m *CreateProductResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateProductResponse) ProtoMessage()               {}
func (*CreateProductResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

func (m *CreateProductResponse) GetRecord() *ProductRecord {
	if m != nil {
		return m.Record
	}
	return nil
}

type ReadProductsRequest struct {
	ShopId string `protobuf:"bytes,1,opt,name=shop_id,json=shopId" json:"shop_id,omitempty"`
	Offset int32  `protobuf:"varint,2,opt,name=offset" json:"offset,omitempty"`
	Limit  int32  `protobuf:"varint,3,opt,name=limit" json:"limit,omitempty"`
}

func (m *ReadProductsRequest) Reset()                    { *m = ReadProductsRequest{} }
func (m *ReadProductsRequest) String() string            { return proto.CompactTextString(m) }
func (*ReadProductsRequest) ProtoMessage()               {}
func (*ReadProductsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

func (m *ReadProductsRequest) GetShopId() string {
	if m != nil {
		return m.ShopId
	}
	return ""
}

func (m *ReadProductsRequest) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *ReadProductsRequest) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type ReadProductsResponse struct {
	Offset  int32            `protobuf:"varint,1,opt,name=offset" json:"offset,omitempty"`
	Limit   int32            `protobuf:"varint,2,opt,name=limit" json:"limit,omitempty"`
	Total   int32            `protobuf:"varint,3,opt,name=total" json:"total,omitempty"`
	Records []*ProductRecord `protobuf:"bytes,4,rep,name=records" json:"records,omitempty"`
}

func (m *ReadProductsResponse) Reset()                    { *m = ReadProductsResponse{} }
func (m *ReadProductsResponse) String() string            { return proto.CompactTextString(m) }
func (*ReadProductsResponse) ProtoMessage()               {}
func (*ReadProductsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{25} }

func (m *ReadProductsResponse) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *ReadProductsResponse) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ReadProductsResponse) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *ReadProductsResponse) GetRecords() []*ProductRecord {
	if m != nil {
		return m.Records
	}
	return nil
}

type ReadProductRequest struct {
	ShopId string `protobuf:"bytes,1,opt,name=shop_id,json=shopId" json:"shop_id,omitempty"`
	Spu    string `protobuf:"bytes,2,opt,name=spu" json:"spu,omitempty"`
}

func (m *ReadProductRequest) Reset()                    { *m = ReadProductRequest{} }
func (m *ReadProductRequest) String() string            { return proto.CompactTextString(m) }
func (*ReadProductRequest) ProtoMessage()               {}
func (*ReadProductRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{26} }

func (m *ReadProductRequest) GetShopId() string {
	if m != nil {
		return m.ShopId
	}
	return ""
}

func (m *ReadProductRequest) GetSpu() string {
	if m != nil {
		return m.Spu
	}
	return ""
}

type ReadProductResponse struct {
	Record *ProductRecord `protobuf:"bytes,1,opt,name=record" json:"record,omitempty"`
}

func (m *ReadProductResponse) Reset()                    { *m = ReadProductResponse{} }
func (m *ReadProductResponse) String() string            { return proto.CompactTextString(m) }
func (*ReadProductResponse) ProtoMessage()               {}
func (*ReadProductResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{27} }

func (m *ReadProductResponse) GetRecord() *ProductRecord {
	if m != nil {
		return m.Record
	}
	return nil
}

type UpdateProductRequest struct {
	ShopId string         `protobuf:"bytes,1,opt,name=shop_id,json=shopId" json:"shop_id,omitempty"`
	Spu    string         `protobuf:"bytes,2,opt,name=spu" json:"spu,omitempty"`
	Record *ProductRecord `protobuf:"bytes,3,opt,name=record" json:"record,omitempty"`
}

func (m *UpdateProductRequest) Reset()                    { *m = UpdateProductRequest{} }
func (m *UpdateProductRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateProductRequest) ProtoMessage()               {}
func (*UpdateProductRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{28} }

func (m *UpdateProductRequest) GetShopId() string {
	if m != nil {
		return m.ShopId
	}
	return ""
}

func (m *UpdateProductRequest) GetSpu() string {
	if m != nil {
		return m.Spu
	}
	return ""
}

func (m *UpdateProductRequest) GetRecord() *ProductRecord {
	if m != nil {
		return m.Record
	}
	return nil
}

type UpdateProductResponse struct {
	Record *ProductRecord `protobuf:"bytes,1,opt,name=record" json:"record,omitempty"`
}

func (m *UpdateProductResponse) Reset()                    { *m = UpdateProductResponse{} }
func (m *UpdateProductResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateProductResponse) ProtoMessage()               {}
func (*UpdateProductResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{29} }

func (m *UpdateProductResponse) GetRecord() *ProductRecord {
	if m != nil {
		return m.Record
	}
	return nil
}

type DeleteProductRequest struct {
	ShopId string `protobuf:"bytes,1,opt,name=shop_id,json=shopId" json:"shop_id,omitempty"`
	Spu    string `protobuf:"bytes,2,opt,name=spu" json:"spu,omitempty"`
}

func (m *DeleteProductRequest) Reset()                    { *m = DeleteProductRequest{} }
func (m *DeleteProductRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteProductRequest) ProtoMessage()               {}
func (*DeleteProductRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{30} }

func (m *DeleteProductRequest) GetShopId() string {
	if m != nil {
		return m.ShopId
	}
	return ""
}

func (m *DeleteProductRequest) GetSpu() string {
	if m != nil {
		return m.Spu
	}
	return ""
}

type DeleteProductResponse struct {
}

func (m *DeleteProductResponse) Reset()                    { *m = DeleteProductResponse{} }
func (m *DeleteProductResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteProductResponse) ProtoMessage()               {}
func (*DeleteProductResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{31} }

type ProductRecord struct {
	Spu           string                            `protobuf:"bytes,1,opt,name=spu" json:"spu,omitempty"`
	Name          string                            `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Description   string                            `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	MainTaxon     string                            `protobuf:"bytes,4,opt,name=mainTaxon" json:"mainTaxon,omitempty"`
	ProductTaxons []string                          `protobuf:"bytes,5,rep,name=productTaxons" json:"productTaxons,omitempty"`
	UpdatedAt     int64                             `protobuf:"varint,6,opt,name=updated_at,json=updatedAt" json:"updated_at,omitempty"`
	CreatedAt     int64                             `protobuf:"varint,7,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	Associations  []*ProductRecord_Association      `protobuf:"bytes,9,rep,name=associations" json:"associations,omitempty"`
	Images        []*Image                          `protobuf:"bytes,10,rep,name=images" json:"images,omitempty"`
	Attributes    []*ProductRecord_AttributesRecord `protobuf:"bytes,11,rep,name=attributes" json:"attributes,omitempty"`
	Options       []*ProductRecord_OptionRecord     `protobuf:"bytes,12,rep,name=options" json:"options,omitempty"`
	Variants      []*VariantRecord                  `protobuf:"bytes,13,rep,name=variants" json:"variants,omitempty"`
	Reviews       []*ReviewsRecord                  `protobuf:"bytes,14,rep,name=reviews" json:"reviews,omitempty"`
}

func (m *ProductRecord) Reset()                    { *m = ProductRecord{} }
func (m *ProductRecord) String() string            { return proto.CompactTextString(m) }
func (*ProductRecord) ProtoMessage()               {}
func (*ProductRecord) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{32} }

func (m *ProductRecord) GetSpu() string {
	if m != nil {
		return m.Spu
	}
	return ""
}

func (m *ProductRecord) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ProductRecord) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *ProductRecord) GetMainTaxon() string {
	if m != nil {
		return m.MainTaxon
	}
	return ""
}

func (m *ProductRecord) GetProductTaxons() []string {
	if m != nil {
		return m.ProductTaxons
	}
	return nil
}

func (m *ProductRecord) GetUpdatedAt() int64 {
	if m != nil {
		return m.UpdatedAt
	}
	return 0
}

func (m *ProductRecord) GetCreatedAt() int64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *ProductRecord) GetAssociations() []*ProductRecord_Association {
	if m != nil {
		return m.Associations
	}
	return nil
}

func (m *ProductRecord) GetImages() []*Image {
	if m != nil {
		return m.Images
	}
	return nil
}

func (m *ProductRecord) GetAttributes() []*ProductRecord_AttributesRecord {
	if m != nil {
		return m.Attributes
	}
	return nil
}

func (m *ProductRecord) GetOptions() []*ProductRecord_OptionRecord {
	if m != nil {
		return m.Options
	}
	return nil
}

func (m *ProductRecord) GetVariants() []*VariantRecord {
	if m != nil {
		return m.Variants
	}
	return nil
}

func (m *ProductRecord) GetReviews() []*ReviewsRecord {
	if m != nil {
		return m.Reviews
	}
	return nil
}

type ProductRecord_AttributesRecord struct {
	Code          string   `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Type          string   `protobuf:"bytes,2,opt,name=type" json:"type,omitempty"`
	Configuration []string `protobuf:"bytes,3,rep,name=configuration" json:"configuration,omitempty"`
	Value         string   `protobuf:"bytes,4,opt,name=value" json:"value,omitempty"`
}

func (m *ProductRecord_AttributesRecord) Reset()         { *m = ProductRecord_AttributesRecord{} }
func (m *ProductRecord_AttributesRecord) String() string { return proto.CompactTextString(m) }
func (*ProductRecord_AttributesRecord) ProtoMessage()    {}
func (*ProductRecord_AttributesRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{32, 0}
}

func (m *ProductRecord_AttributesRecord) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *ProductRecord_AttributesRecord) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *ProductRecord_AttributesRecord) GetConfiguration() []string {
	if m != nil {
		return m.Configuration
	}
	return nil
}

func (m *ProductRecord_AttributesRecord) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type ProductRecord_Association struct {
	Code string   `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Spus []string `protobuf:"bytes,2,rep,name=spus" json:"spus,omitempty"`
}

func (m *ProductRecord_Association) Reset()                    { *m = ProductRecord_Association{} }
func (m *ProductRecord_Association) String() string            { return proto.CompactTextString(m) }
func (*ProductRecord_Association) ProtoMessage()               {}
func (*ProductRecord_Association) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{32, 1} }

func (m *ProductRecord_Association) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *ProductRecord_Association) GetSpus() []string {
	if m != nil {
		return m.Spus
	}
	return nil
}

type ProductRecord_OptionRecord struct {
	Code    string                                    `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Options []*ProductRecord_OptionRecord_OptionValue `protobuf:"bytes,2,rep,name=options" json:"options,omitempty"`
	Value   string                                    `protobuf:"bytes,3,opt,name=value" json:"value,omitempty"`
}

func (m *ProductRecord_OptionRecord) Reset()                    { *m = ProductRecord_OptionRecord{} }
func (m *ProductRecord_OptionRecord) String() string            { return proto.CompactTextString(m) }
func (*ProductRecord_OptionRecord) ProtoMessage()               {}
func (*ProductRecord_OptionRecord) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{32, 2} }

func (m *ProductRecord_OptionRecord) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *ProductRecord_OptionRecord) GetOptions() []*ProductRecord_OptionRecord_OptionValue {
	if m != nil {
		return m.Options
	}
	return nil
}

func (m *ProductRecord_OptionRecord) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type ProductRecord_OptionRecord_OptionValue struct {
	Value       string `protobuf:"bytes,1,opt,name=value" json:"value,omitempty"`
	Description string `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
}

func (m *ProductRecord_OptionRecord_OptionValue) Reset() {
	*m = ProductRecord_OptionRecord_OptionValue{}
}
func (m *ProductRecord_OptionRecord_OptionValue) String() string { return proto.CompactTextString(m) }
func (*ProductRecord_OptionRecord_OptionValue) ProtoMessage()    {}
func (*ProductRecord_OptionRecord_OptionValue) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{32, 2, 0}
}

func (m *ProductRecord_OptionRecord_OptionValue) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *ProductRecord_OptionRecord_OptionValue) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type Image struct {
	Type  string   `protobuf:"bytes,2,opt,name=type" json:"type,omitempty"`
	Paths []string `protobuf:"bytes,3,rep,name=paths" json:"paths,omitempty"`
}

func (m *Image) Reset()                    { *m = Image{} }
func (m *Image) String() string            { return proto.CompactTextString(m) }
func (*Image) ProtoMessage()               {}
func (*Image) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{33} }

func (m *Image) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Image) GetPaths() []string {
	if m != nil {
		return m.Paths
	}
	return nil
}

type ReviewsRecord struct {
	Id        string                `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Title     string                `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	Comment   string                `protobuf:"bytes,3,opt,name=comment" json:"comment,omitempty"`
	Rating    int32                 `protobuf:"varint,4,opt,name=rating" json:"rating,omitempty"`
	Author    *ReviewsRecord_Author `protobuf:"bytes,5,opt,name=author" json:"author,omitempty"`
	Status    string                `protobuf:"bytes,6,opt,name=status" json:"status,omitempty"`
	UpdatedAt int64                 `protobuf:"varint,7,opt,name=updated_at,json=updatedAt" json:"updated_at,omitempty"`
	CreatedAt int64                 `protobuf:"varint,8,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
}

func (m *ReviewsRecord) Reset()                    { *m = ReviewsRecord{} }
func (m *ReviewsRecord) String() string            { return proto.CompactTextString(m) }
func (*ReviewsRecord) ProtoMessage()               {}
func (*ReviewsRecord) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{34} }

func (m *ReviewsRecord) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ReviewsRecord) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *ReviewsRecord) GetComment() string {
	if m != nil {
		return m.Comment
	}
	return ""
}

func (m *ReviewsRecord) GetRating() int32 {
	if m != nil {
		return m.Rating
	}
	return 0
}

func (m *ReviewsRecord) GetAuthor() *ReviewsRecord_Author {
	if m != nil {
		return m.Author
	}
	return nil
}

func (m *ReviewsRecord) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *ReviewsRecord) GetUpdatedAt() int64 {
	if m != nil {
		return m.UpdatedAt
	}
	return 0
}

func (m *ReviewsRecord) GetCreatedAt() int64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

type ReviewsRecord_Author struct {
	Username string `protobuf:"bytes,1,opt,name=username" json:"username,omitempty"`
	Nick     string `protobuf:"bytes,2,opt,name=nick" json:"nick,omitempty"`
}

func (m *ReviewsRecord_Author) Reset()                    { *m = ReviewsRecord_Author{} }
func (m *ReviewsRecord_Author) String() string            { return proto.CompactTextString(m) }
func (*ReviewsRecord_Author) ProtoMessage()               {}
func (*ReviewsRecord_Author) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{34, 0} }

func (m *ReviewsRecord_Author) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *ReviewsRecord_Author) GetNick() string {
	if m != nil {
		return m.Nick
	}
	return ""
}

type VariantRecord struct {
	Sku              string                 `protobuf:"bytes,1,opt,name=sku" json:"sku,omitempty"`
	Name             string                 `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Pricings         *VariantRecord_Pricing `protobuf:"bytes,3,opt,name=pricings" json:"pricings,omitempty"`
	Tracked          bool                   `protobuf:"varint,4,opt,name=tracked" json:"tracked,omitempty"`
	ShippingCategory string                 `protobuf:"bytes,5,opt,name=shippingCategory" json:"shippingCategory,omitempty"`
	OptionValues     []string               `protobuf:"bytes,6,rep,name=optionValues" json:"optionValues,omitempty"`
	Stock            int32                  `protobuf:"varint,7,opt,name=stock" json:"stock,omitempty"`
	Images           []*Image               `protobuf:"bytes,8,rep,name=images" json:"images,omitempty"`
	UpdatedAt        int64                  `protobuf:"varint,9,opt,name=updated_at,json=updatedAt" json:"updated_at,omitempty"`
	CreatedAt        int64                  `protobuf:"varint,10,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
}

func (m *VariantRecord) Reset()                    { *m = VariantRecord{} }
func (m *VariantRecord) String() string            { return proto.CompactTextString(m) }
func (*VariantRecord) ProtoMessage()               {}
func (*VariantRecord) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{35} }

func (m *VariantRecord) GetSku() string {
	if m != nil {
		return m.Sku
	}
	return ""
}

func (m *VariantRecord) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *VariantRecord) GetPricings() *VariantRecord_Pricing {
	if m != nil {
		return m.Pricings
	}
	return nil
}

func (m *VariantRecord) GetTracked() bool {
	if m != nil {
		return m.Tracked
	}
	return false
}

func (m *VariantRecord) GetShippingCategory() string {
	if m != nil {
		return m.ShippingCategory
	}
	return ""
}

func (m *VariantRecord) GetOptionValues() []string {
	if m != nil {
		return m.OptionValues
	}
	return nil
}

func (m *VariantRecord) GetStock() int32 {
	if m != nil {
		return m.Stock
	}
	return 0
}

func (m *VariantRecord) GetImages() []*Image {
	if m != nil {
		return m.Images
	}
	return nil
}

func (m *VariantRecord) GetUpdatedAt() int64 {
	if m != nil {
		return m.UpdatedAt
	}
	return 0
}

func (m *VariantRecord) GetCreatedAt() int64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

type VariantRecord_Pricing struct {
	Current int32 `protobuf:"varint,1,opt,name=current" json:"current,omitempty"`
}

func (m *VariantRecord_Pricing) Reset()                    { *m = VariantRecord_Pricing{} }
func (m *VariantRecord_Pricing) String() string            { return proto.CompactTextString(m) }
func (*VariantRecord_Pricing) ProtoMessage()               {}
func (*VariantRecord_Pricing) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{35, 0} }

func (m *VariantRecord_Pricing) GetCurrent() int32 {
	if m != nil {
		return m.Current
	}
	return 0
}

type ModifyTaxonsRequest struct {
	ShopId string        `protobuf:"bytes,1,opt,name=shop_id,json=shopId" json:"shop_id,omitempty"`
	Spu    string        `protobuf:"bytes,2,opt,name=spu" json:"spu,omitempty"`
	Taxons *ProductTaxon `protobuf:"bytes,3,opt,name=taxons" json:"taxons,omitempty"`
}

func (m *ModifyTaxonsRequest) Reset()                    { *m = ModifyTaxonsRequest{} }
func (m *ModifyTaxonsRequest) String() string            { return proto.CompactTextString(m) }
func (*ModifyTaxonsRequest) ProtoMessage()               {}
func (*ModifyTaxonsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{36} }

func (m *ModifyTaxonsRequest) GetShopId() string {
	if m != nil {
		return m.ShopId
	}
	return ""
}

func (m *ModifyTaxonsRequest) GetSpu() string {
	if m != nil {
		return m.Spu
	}
	return ""
}

func (m *ModifyTaxonsRequest) GetTaxons() *ProductTaxon {
	if m != nil {
		return m.Taxons
	}
	return nil
}

type ProductTaxon struct {
	Main   string   `protobuf:"bytes,1,opt,name=main" json:"main,omitempty"`
	Others []string `protobuf:"bytes,2,rep,name=others" json:"others,omitempty"`
}

func (m *ProductTaxon) Reset()                    { *m = ProductTaxon{} }
func (m *ProductTaxon) String() string            { return proto.CompactTextString(m) }
func (*ProductTaxon) ProtoMessage()               {}
func (*ProductTaxon) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{37} }

func (m *ProductTaxon) GetMain() string {
	if m != nil {
		return m.Main
	}
	return ""
}

func (m *ProductTaxon) GetOthers() []string {
	if m != nil {
		return m.Others
	}
	return nil
}

type ModifyTaxonsResponse struct {
	Taxons *ProductTaxon `protobuf:"bytes,1,opt,name=taxons" json:"taxons,omitempty"`
}

func (m *ModifyTaxonsResponse) Reset()                    { *m = ModifyTaxonsResponse{} }
func (m *ModifyTaxonsResponse) String() string            { return proto.CompactTextString(m) }
func (*ModifyTaxonsResponse) ProtoMessage()               {}
func (*ModifyTaxonsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{38} }

func (m *ModifyTaxonsResponse) GetTaxons() *ProductTaxon {
	if m != nil {
		return m.Taxons
	}
	return nil
}

type CreateProductAttributeRequest struct {
	ShopId    string            `protobuf:"bytes,1,opt,name=shop_id,json=shopId" json:"shop_id,omitempty"`
	Spu       string            `protobuf:"bytes,2,opt,name=spu" json:"spu,omitempty"`
	Attribute *ProductAttribute `protobuf:"bytes,3,opt,name=attribute" json:"attribute,omitempty"`
}

func (m *CreateProductAttributeRequest) Reset()                    { *m = CreateProductAttributeRequest{} }
func (m *CreateProductAttributeRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateProductAttributeRequest) ProtoMessage()               {}
func (*CreateProductAttributeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{39} }

func (m *CreateProductAttributeRequest) GetShopId() string {
	if m != nil {
		return m.ShopId
	}
	return ""
}

func (m *CreateProductAttributeRequest) GetSpu() string {
	if m != nil {
		return m.Spu
	}
	return ""
}

func (m *CreateProductAttributeRequest) GetAttribute() *ProductAttribute {
	if m != nil {
		return m.Attribute
	}
	return nil
}

type CreateProductAttributeResponse struct {
	Attribute *ProductAttribute `protobuf:"bytes,1,opt,name=attribute" json:"attribute,omitempty"`
}

func (m *CreateProductAttributeResponse) Reset()                    { *m = CreateProductAttributeResponse{} }
func (m *CreateProductAttributeResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateProductAttributeResponse) ProtoMessage()               {}
func (*CreateProductAttributeResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{40} }

func (m *CreateProductAttributeResponse) GetAttribute() *ProductAttribute {
	if m != nil {
		return m.Attribute
	}
	return nil
}

type ReadProductAttributesRequest struct {
	ShopId string `protobuf:"bytes,1,opt,name=shop_id,json=shopId" json:"shop_id,omitempty"`
	Spu    string `protobuf:"bytes,2,opt,name=spu" json:"spu,omitempty"`
}

func (m *ReadProductAttributesRequest) Reset()                    { *m = ReadProductAttributesRequest{} }
func (m *ReadProductAttributesRequest) String() string            { return proto.CompactTextString(m) }
func (*ReadProductAttributesRequest) ProtoMessage()               {}
func (*ReadProductAttributesRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{41} }

func (m *ReadProductAttributesRequest) GetShopId() string {
	if m != nil {
		return m.ShopId
	}
	return ""
}

func (m *ReadProductAttributesRequest) GetSpu() string {
	if m != nil {
		return m.Spu
	}
	return ""
}

type ReadProductAttributesResponse struct {
	Attributes []*ProductRecord_AttributesRecord `protobuf:"bytes,1,rep,name=attributes" json:"attributes,omitempty"`
}

func (m *ReadProductAttributesResponse) Reset()                    { *m = ReadProductAttributesResponse{} }
func (m *ReadProductAttributesResponse) String() string            { return proto.CompactTextString(m) }
func (*ReadProductAttributesResponse) ProtoMessage()               {}
func (*ReadProductAttributesResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{42} }

func (m *ReadProductAttributesResponse) GetAttributes() []*ProductRecord_AttributesRecord {
	if m != nil {
		return m.Attributes
	}
	return nil
}

type UpdateProductAttributeRequest struct {
	ShopId string `protobuf:"bytes,1,opt,name=shop_id,json=shopId" json:"shop_id,omitempty"`
	Spu    string `protobuf:"bytes,2,opt,name=spu" json:"spu,omitempty"`
	Code   string `protobuf:"bytes,3,opt,name=code" json:"code,omitempty"`
	Value  string `protobuf:"bytes,4,opt,name=value" json:"value,omitempty"`
}

func (m *UpdateProductAttributeRequest) Reset()                    { *m = UpdateProductAttributeRequest{} }
func (m *UpdateProductAttributeRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateProductAttributeRequest) ProtoMessage()               {}
func (*UpdateProductAttributeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{43} }

func (m *UpdateProductAttributeRequest) GetShopId() string {
	if m != nil {
		return m.ShopId
	}
	return ""
}

func (m *UpdateProductAttributeRequest) GetSpu() string {
	if m != nil {
		return m.Spu
	}
	return ""
}

func (m *UpdateProductAttributeRequest) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *UpdateProductAttributeRequest) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type UpdateProductAttributeResponse struct {
	Attribute *ProductAttribute `protobuf:"bytes,1,opt,name=attribute" json:"attribute,omitempty"`
}

func (m *UpdateProductAttributeResponse) Reset()                    { *m = UpdateProductAttributeResponse{} }
func (m *UpdateProductAttributeResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateProductAttributeResponse) ProtoMessage()               {}
func (*UpdateProductAttributeResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{44} }

func (m *UpdateProductAttributeResponse) GetAttribute() *ProductAttribute {
	if m != nil {
		return m.Attribute
	}
	return nil
}

type DeleteProductAttributeRequest struct {
	ShopId string `protobuf:"bytes,1,opt,name=shop_id,json=shopId" json:"shop_id,omitempty"`
	Spu    string `protobuf:"bytes,2,opt,name=spu" json:"spu,omitempty"`
	Code   string `protobuf:"bytes,3,opt,name=code" json:"code,omitempty"`
}

func (m *DeleteProductAttributeRequest) Reset()                    { *m = DeleteProductAttributeRequest{} }
func (m *DeleteProductAttributeRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteProductAttributeRequest) ProtoMessage()               {}
func (*DeleteProductAttributeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{45} }

func (m *DeleteProductAttributeRequest) GetShopId() string {
	if m != nil {
		return m.ShopId
	}
	return ""
}

func (m *DeleteProductAttributeRequest) GetSpu() string {
	if m != nil {
		return m.Spu
	}
	return ""
}

func (m *DeleteProductAttributeRequest) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

type DeleteProductAttributeResponse struct {
}

func (m *DeleteProductAttributeResponse) Reset()                    { *m = DeleteProductAttributeResponse{} }
func (m *DeleteProductAttributeResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteProductAttributeResponse) ProtoMessage()               {}
func (*DeleteProductAttributeResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{46} }

type ProductAttribute struct {
	Code  string `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *ProductAttribute) Reset()                    { *m = ProductAttribute{} }
func (m *ProductAttribute) String() string            { return proto.CompactTextString(m) }
func (*ProductAttribute) ProtoMessage()               {}
func (*ProductAttribute) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{47} }

func (m *ProductAttribute) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *ProductAttribute) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type CreateProductAssociationRequest struct {
	ShopId      string              `protobuf:"bytes,1,opt,name=shop_id,json=shopId" json:"shop_id,omitempty"`
	Spu         string              `protobuf:"bytes,2,opt,name=spu" json:"spu,omitempty"`
	Association *ProductAssociation `protobuf:"bytes,3,opt,name=association" json:"association,omitempty"`
}

func (m *CreateProductAssociationRequest) Reset()         { *m = CreateProductAssociationRequest{} }
func (m *CreateProductAssociationRequest) String() string { return proto.CompactTextString(m) }
func (*CreateProductAssociationRequest) ProtoMessage()    {}
func (*CreateProductAssociationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{48}
}

func (m *CreateProductAssociationRequest) GetShopId() string {
	if m != nil {
		return m.ShopId
	}
	return ""
}

func (m *CreateProductAssociationRequest) GetSpu() string {
	if m != nil {
		return m.Spu
	}
	return ""
}

func (m *CreateProductAssociationRequest) GetAssociation() *ProductAssociation {
	if m != nil {
		return m.Association
	}
	return nil
}

type CreateProductAssociationResponse struct {
	Association *ProductAssociation `protobuf:"bytes,1,opt,name=association" json:"association,omitempty"`
}

func (m *CreateProductAssociationResponse) Reset()         { *m = CreateProductAssociationResponse{} }
func (m *CreateProductAssociationResponse) String() string { return proto.CompactTextString(m) }
func (*CreateProductAssociationResponse) ProtoMessage()    {}
func (*CreateProductAssociationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{49}
}

func (m *CreateProductAssociationResponse) GetAssociation() *ProductAssociation {
	if m != nil {
		return m.Association
	}
	return nil
}

type ReadProductAssociationsRequest struct {
	ShopId string `protobuf:"bytes,1,opt,name=shop_id,json=shopId" json:"shop_id,omitempty"`
	Spu    string `protobuf:"bytes,2,opt,name=spu" json:"spu,omitempty"`
}

func (m *ReadProductAssociationsRequest) Reset()                    { *m = ReadProductAssociationsRequest{} }
func (m *ReadProductAssociationsRequest) String() string            { return proto.CompactTextString(m) }
func (*ReadProductAssociationsRequest) ProtoMessage()               {}
func (*ReadProductAssociationsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{50} }

func (m *ReadProductAssociationsRequest) GetShopId() string {
	if m != nil {
		return m.ShopId
	}
	return ""
}

func (m *ReadProductAssociationsRequest) GetSpu() string {
	if m != nil {
		return m.Spu
	}
	return ""
}

type ReadProductAssociationsResponse struct {
	Association []*ProductAssociation `protobuf:"bytes,1,rep,name=association" json:"association,omitempty"`
}

func (m *ReadProductAssociationsResponse) Reset()         { *m = ReadProductAssociationsResponse{} }
func (m *ReadProductAssociationsResponse) String() string { return proto.CompactTextString(m) }
func (*ReadProductAssociationsResponse) ProtoMessage()    {}
func (*ReadProductAssociationsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{51}
}

func (m *ReadProductAssociationsResponse) GetAssociation() []*ProductAssociation {
	if m != nil {
		return m.Association
	}
	return nil
}

type UpdateProductAssociationRequest struct {
	ShopId      string              `protobuf:"bytes,1,opt,name=shop_id,json=shopId" json:"shop_id,omitempty"`
	Spu         string              `protobuf:"bytes,2,opt,name=spu" json:"spu,omitempty"`
	Code        string              `protobuf:"bytes,3,opt,name=code" json:"code,omitempty"`
	Association *ProductAssociation `protobuf:"bytes,4,opt,name=association" json:"association,omitempty"`
}

func (m *UpdateProductAssociationRequest) Reset()         { *m = UpdateProductAssociationRequest{} }
func (m *UpdateProductAssociationRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateProductAssociationRequest) ProtoMessage()    {}
func (*UpdateProductAssociationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{52}
}

func (m *UpdateProductAssociationRequest) GetShopId() string {
	if m != nil {
		return m.ShopId
	}
	return ""
}

func (m *UpdateProductAssociationRequest) GetSpu() string {
	if m != nil {
		return m.Spu
	}
	return ""
}

func (m *UpdateProductAssociationRequest) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *UpdateProductAssociationRequest) GetAssociation() *ProductAssociation {
	if m != nil {
		return m.Association
	}
	return nil
}

type UpdateProductAssociationResponse struct {
	Association *ProductAssociation `protobuf:"bytes,1,opt,name=association" json:"association,omitempty"`
}

func (m *UpdateProductAssociationResponse) Reset()         { *m = UpdateProductAssociationResponse{} }
func (m *UpdateProductAssociationResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateProductAssociationResponse) ProtoMessage()    {}
func (*UpdateProductAssociationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{53}
}

func (m *UpdateProductAssociationResponse) GetAssociation() *ProductAssociation {
	if m != nil {
		return m.Association
	}
	return nil
}

type DeleteProductAssociationRequest struct {
	ShopId string `protobuf:"bytes,1,opt,name=shop_id,json=shopId" json:"shop_id,omitempty"`
	Spu    string `protobuf:"bytes,2,opt,name=spu" json:"spu,omitempty"`
	Code   string `protobuf:"bytes,3,opt,name=code" json:"code,omitempty"`
}

func (m *DeleteProductAssociationRequest) Reset()         { *m = DeleteProductAssociationRequest{} }
func (m *DeleteProductAssociationRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteProductAssociationRequest) ProtoMessage()    {}
func (*DeleteProductAssociationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{54}
}

func (m *DeleteProductAssociationRequest) GetShopId() string {
	if m != nil {
		return m.ShopId
	}
	return ""
}

func (m *DeleteProductAssociationRequest) GetSpu() string {
	if m != nil {
		return m.Spu
	}
	return ""
}

func (m *DeleteProductAssociationRequest) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

type DeleteProductAssociationResponse struct {
}

func (m *DeleteProductAssociationResponse) Reset()         { *m = DeleteProductAssociationResponse{} }
func (m *DeleteProductAssociationResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteProductAssociationResponse) ProtoMessage()    {}
func (*DeleteProductAssociationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor0, []int{55}
}

type ProductAssociation struct {
	Code string   `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Spus []string `protobuf:"bytes,2,rep,name=spus" json:"spus,omitempty"`
}

func (m *ProductAssociation) Reset()                    { *m = ProductAssociation{} }
func (m *ProductAssociation) String() string            { return proto.CompactTextString(m) }
func (*ProductAssociation) ProtoMessage()               {}
func (*ProductAssociation) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{56} }

func (m *ProductAssociation) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *ProductAssociation) GetSpus() []string {
	if m != nil {
		return m.Spus
	}
	return nil
}

type CreateProductImageRequest struct {
	ShopId string `protobuf:"bytes,1,opt,name=shop_id,json=shopId" json:"shop_id,omitempty"`
	Spu    string `protobuf:"bytes,2,opt,name=spu" json:"spu,omitempty"`
	Image  *Image `protobuf:"bytes,3,opt,name=image" json:"image,omitempty"`
}

func (m *CreateProductImageRequest) Reset()                    { *m = CreateProductImageRequest{} }
func (m *CreateProductImageRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateProductImageRequest) ProtoMessage()               {}
func (*CreateProductImageRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{57} }

func (m *CreateProductImageRequest) GetShopId() string {
	if m != nil {
		return m.ShopId
	}
	return ""
}

func (m *CreateProductImageRequest) GetSpu() string {
	if m != nil {
		return m.Spu
	}
	return ""
}

func (m *CreateProductImageRequest) GetImage() *Image {
	if m != nil {
		return m.Image
	}
	return nil
}

type CreateProductImageResponse struct {
	Image *Image `protobuf:"bytes,1,opt,name=image" json:"image,omitempty"`
}

func (m *CreateProductImageResponse) Reset()                    { *m = CreateProductImageResponse{} }
func (m *CreateProductImageResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateProductImageResponse) ProtoMessage()               {}
func (*CreateProductImageResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{58} }

func (m *CreateProductImageResponse) GetImage() *Image {
	if m != nil {
		return m.Image
	}
	return nil
}

type ReadProductImagesRequest struct {
	ShopId string `protobuf:"bytes,1,opt,name=shop_id,json=shopId" json:"shop_id,omitempty"`
	Spu    string `protobuf:"bytes,2,opt,name=spu" json:"spu,omitempty"`
}

func (m *ReadProductImagesRequest) Reset()                    { *m = ReadProductImagesRequest{} }
func (m *ReadProductImagesRequest) String() string            { return proto.CompactTextString(m) }
func (*ReadProductImagesRequest) ProtoMessage()               {}
func (*ReadProductImagesRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{59} }

func (m *ReadProductImagesRequest) GetShopId() string {
	if m != nil {
		return m.ShopId
	}
	return ""
}

func (m *ReadProductImagesRequest) GetSpu() string {
	if m != nil {
		return m.Spu
	}
	return ""
}

type ReadProductImagesResponse struct {
	Images []*Image `protobuf:"bytes,1,rep,name=images" json:"images,omitempty"`
}

func (m *ReadProductImagesResponse) Reset()                    { *m = ReadProductImagesResponse{} }
func (m *ReadProductImagesResponse) String() string            { return proto.CompactTextString(m) }
func (*ReadProductImagesResponse) ProtoMessage()               {}
func (*ReadProductImagesResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{60} }

func (m *ReadProductImagesResponse) GetImages() []*Image {
	if m != nil {
		return m.Images
	}
	return nil
}

type UpdateProductImageRequest struct {
	ShopId string `protobuf:"bytes,1,opt,name=shop_id,json=shopId" json:"shop_id,omitempty"`
	Spu    string `protobuf:"bytes,2,opt,name=spu" json:"spu,omitempty"`
	Image  *Image `protobuf:"bytes,3,opt,name=image" json:"image,omitempty"`
}

func (m *UpdateProductImageRequest) Reset()                    { *m = UpdateProductImageRequest{} }
func (m *UpdateProductImageRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateProductImageRequest) ProtoMessage()               {}
func (*UpdateProductImageRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{61} }

func (m *UpdateProductImageRequest) GetShopId() string {
	if m != nil {
		return m.ShopId
	}
	return ""
}

func (m *UpdateProductImageRequest) GetSpu() string {
	if m != nil {
		return m.Spu
	}
	return ""
}

func (m *UpdateProductImageRequest) GetImage() *Image {
	if m != nil {
		return m.Image
	}
	return nil
}

type UpdateProductImageResponse struct {
	Image *Image `protobuf:"bytes,1,opt,name=image" json:"image,omitempty"`
}

func (m *UpdateProductImageResponse) Reset()                    { *m = UpdateProductImageResponse{} }
func (m *UpdateProductImageResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateProductImageResponse) ProtoMessage()               {}
func (*UpdateProductImageResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{62} }

func (m *UpdateProductImageResponse) GetImage() *Image {
	if m != nil {
		return m.Image
	}
	return nil
}

type DeleteProductImageRequest struct {
	ShopId string `protobuf:"bytes,1,opt,name=shop_id,json=shopId" json:"shop_id,omitempty"`
	Spu    string `protobuf:"bytes,2,opt,name=spu" json:"spu,omitempty"`
	Type   string `protobuf:"bytes,3,opt,name=type" json:"type,omitempty"`
}

func (m *DeleteProductImageRequest) Reset()                    { *m = DeleteProductImageRequest{} }
func (m *DeleteProductImageRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteProductImageRequest) ProtoMessage()               {}
func (*DeleteProductImageRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{63} }

func (m *DeleteProductImageRequest) GetShopId() string {
	if m != nil {
		return m.ShopId
	}
	return ""
}

func (m *DeleteProductImageRequest) GetSpu() string {
	if m != nil {
		return m.Spu
	}
	return ""
}

func (m *DeleteProductImageRequest) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

type DeleteProductImageResponse struct {
}

func (m *DeleteProductImageResponse) Reset()                    { *m = DeleteProductImageResponse{} }
func (m *DeleteProductImageResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteProductImageResponse) ProtoMessage()               {}
func (*DeleteProductImageResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{64} }

type CreateProductReviewRequest struct {
	ShopId string         `protobuf:"bytes,1,opt,name=shop_id,json=shopId" json:"shop_id,omitempty"`
	Spu    string         `protobuf:"bytes,2,opt,name=spu" json:"spu,omitempty"`
	Record *ReviewsRecord `protobuf:"bytes,3,opt,name=record" json:"record,omitempty"`
}

func (m *CreateProductReviewRequest) Reset()                    { *m = CreateProductReviewRequest{} }
func (m *CreateProductReviewRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateProductReviewRequest) ProtoMessage()               {}
func (*CreateProductReviewRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{65} }

func (m *CreateProductReviewRequest) GetShopId() string {
	if m != nil {
		return m.ShopId
	}
	return ""
}

func (m *CreateProductReviewRequest) GetSpu() string {
	if m != nil {
		return m.Spu
	}
	return ""
}

func (m *CreateProductReviewRequest) GetRecord() *ReviewsRecord {
	if m != nil {
		return m.Record
	}
	return nil
}

type CreateProductReviewResponse struct {
	Record *ReviewsRecord `protobuf:"bytes,1,opt,name=record" json:"record,omitempty"`
}

func (m *CreateProductReviewResponse) Reset()                    { *m = CreateProductReviewResponse{} }
func (m *CreateProductReviewResponse) String() string            { return proto.CompactTextString(m) }
func (*CreateProductReviewResponse) ProtoMessage()               {}
func (*CreateProductReviewResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{66} }

func (m *CreateProductReviewResponse) GetRecord() *ReviewsRecord {
	if m != nil {
		return m.Record
	}
	return nil
}

type ReadProductReviewsRequest struct {
	ShopId string `protobuf:"bytes,1,opt,name=shop_id,json=shopId" json:"shop_id,omitempty"`
	Spu    string `protobuf:"bytes,2,opt,name=spu" json:"spu,omitempty"`
	Offset int32  `protobuf:"varint,3,opt,name=offset" json:"offset,omitempty"`
	Limit  int32  `protobuf:"varint,4,opt,name=limit" json:"limit,omitempty"`
}

func (m *ReadProductReviewsRequest) Reset()                    { *m = ReadProductReviewsRequest{} }
func (m *ReadProductReviewsRequest) String() string            { return proto.CompactTextString(m) }
func (*ReadProductReviewsRequest) ProtoMessage()               {}
func (*ReadProductReviewsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{67} }

func (m *ReadProductReviewsRequest) GetShopId() string {
	if m != nil {
		return m.ShopId
	}
	return ""
}

func (m *ReadProductReviewsRequest) GetSpu() string {
	if m != nil {
		return m.Spu
	}
	return ""
}

func (m *ReadProductReviewsRequest) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *ReadProductReviewsRequest) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type ReadProductReviewsResponse struct {
	Offset  int32            `protobuf:"varint,1,opt,name=offset" json:"offset,omitempty"`
	Limit   int32            `protobuf:"varint,2,opt,name=limit" json:"limit,omitempty"`
	Total   int32            `protobuf:"varint,3,opt,name=total" json:"total,omitempty"`
	Records []*ReviewsRecord `protobuf:"bytes,4,rep,name=records" json:"records,omitempty"`
}

func (m *ReadProductReviewsResponse) Reset()                    { *m = ReadProductReviewsResponse{} }
func (m *ReadProductReviewsResponse) String() string            { return proto.CompactTextString(m) }
func (*ReadProductReviewsResponse) ProtoMessage()               {}
func (*ReadProductReviewsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{68} }

func (m *ReadProductReviewsResponse) GetOffset() int32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *ReadProductReviewsResponse) GetLimit() int32 {
	if m != nil {
		return m.Limit
	}
	return 0
}

func (m *ReadProductReviewsResponse) GetTotal() int32 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *ReadProductReviewsResponse) GetRecords() []*ReviewsRecord {
	if m != nil {
		return m.Records
	}
	return nil
}

type ReadProductReviewRequest struct {
	ShopId string `protobuf:"bytes,1,opt,name=shop_id,json=shopId" json:"shop_id,omitempty"`
	Spu    string `protobuf:"bytes,2,opt,name=spu" json:"spu,omitempty"`
	Id     string `protobuf:"bytes,3,opt,name=id" json:"id,omitempty"`
}

func (m *ReadProductReviewRequest) Reset()                    { *m = ReadProductReviewRequest{} }
func (m *ReadProductReviewRequest) String() string            { return proto.CompactTextString(m) }
func (*ReadProductReviewRequest) ProtoMessage()               {}
func (*ReadProductReviewRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{69} }

func (m *ReadProductReviewRequest) GetShopId() string {
	if m != nil {
		return m.ShopId
	}
	return ""
}

func (m *ReadProductReviewRequest) GetSpu() string {
	if m != nil {
		return m.Spu
	}
	return ""
}

func (m *ReadProductReviewRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type ReadProductReviewResponse struct {
	Record *ReviewsRecord `protobuf:"bytes,1,opt,name=record" json:"record,omitempty"`
}

func (m *ReadProductReviewResponse) Reset()                    { *m = ReadProductReviewResponse{} }
func (m *ReadProductReviewResponse) String() string            { return proto.CompactTextString(m) }
func (*ReadProductReviewResponse) ProtoMessage()               {}
func (*ReadProductReviewResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{70} }

func (m *ReadProductReviewResponse) GetRecord() *ReviewsRecord {
	if m != nil {
		return m.Record
	}
	return nil
}

type UpdateProductReviewRequest struct {
	ShopId string         `protobuf:"bytes,1,opt,name=shop_id,json=shopId" json:"shop_id,omitempty"`
	Spu    string         `protobuf:"bytes,2,opt,name=spu" json:"spu,omitempty"`
	Id     string         `protobuf:"bytes,3,opt,name=id" json:"id,omitempty"`
	Record *ReviewsRecord `protobuf:"bytes,4,opt,name=record" json:"record,omitempty"`
}

func (m *UpdateProductReviewRequest) Reset()                    { *m = UpdateProductReviewRequest{} }
func (m *UpdateProductReviewRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateProductReviewRequest) ProtoMessage()               {}
func (*UpdateProductReviewRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{71} }

func (m *UpdateProductReviewRequest) GetShopId() string {
	if m != nil {
		return m.ShopId
	}
	return ""
}

func (m *UpdateProductReviewRequest) GetSpu() string {
	if m != nil {
		return m.Spu
	}
	return ""
}

func (m *UpdateProductReviewRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateProductReviewRequest) GetRecord() *ReviewsRecord {
	if m != nil {
		return m.Record
	}
	return nil
}

type UpdateProductReviewResponse struct {
	Record *ReviewsRecord `protobuf:"bytes,1,opt,name=record" json:"record,omitempty"`
}

func (m *UpdateProductReviewResponse) Reset()                    { *m = UpdateProductReviewResponse{} }
func (m *UpdateProductReviewResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateProductReviewResponse) ProtoMessage()               {}
func (*UpdateProductReviewResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{72} }

func (m *UpdateProductReviewResponse) GetRecord() *ReviewsRecord {
	if m != nil {
		return m.Record
	}
	return nil
}

type DeleteProductReviewRequest struct {
	ShopId string `protobuf:"bytes,1,opt,name=shop_id,json=shopId" json:"shop_id,omitempty"`
	Spu    string `protobuf:"bytes,2,opt,name=spu" json:"spu,omitempty"`
	Id     string `protobuf:"bytes,3,opt,name=id" json:"id,omitempty"`
}

func (m *DeleteProductReviewRequest) Reset()                    { *m = DeleteProductReviewRequest{} }
func (m *DeleteProductReviewRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteProductReviewRequest) ProtoMessage()               {}
func (*DeleteProductReviewRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{73} }

func (m *DeleteProductReviewRequest) GetShopId() string {
	if m != nil {
		return m.ShopId
	}
	return ""
}

func (m *DeleteProductReviewRequest) GetSpu() string {
	if m != nil {
		return m.Spu
	}
	return ""
}

func (m *DeleteProductReviewRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type DeleteProductReviewResponse struct {
}

func (m *DeleteProductReviewResponse) Reset()                    { *m = DeleteProductReviewResponse{} }
func (m *DeleteProductReviewResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteProductReviewResponse) ProtoMessage()               {}
func (*DeleteProductReviewResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{74} }

type AcceptProductReviewRequest struct {
	ShopId string `protobuf:"bytes,1,opt,name=shop_id,json=shopId" json:"shop_id,omitempty"`
	Spu    string `protobuf:"bytes,2,opt,name=spu" json:"spu,omitempty"`
	Id     string `protobuf:"bytes,3,opt,name=id" json:"id,omitempty"`
}

func (m *AcceptProductReviewRequest) Reset()                    { *m = AcceptProductReviewRequest{} }
func (m *AcceptProductReviewRequest) String() string            { return proto.CompactTextString(m) }
func (*AcceptProductReviewRequest) ProtoMessage()               {}
func (*AcceptProductReviewRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{75} }

func (m *AcceptProductReviewRequest) GetShopId() string {
	if m != nil {
		return m.ShopId
	}
	return ""
}

func (m *AcceptProductReviewRequest) GetSpu() string {
	if m != nil {
		return m.Spu
	}
	return ""
}

func (m *AcceptProductReviewRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type AcceptProductReviewResponse struct {
}

func (m *AcceptProductReviewResponse) Reset()                    { *m = AcceptProductReviewResponse{} }
func (m *AcceptProductReviewResponse) String() string            { return proto.CompactTextString(m) }
func (*AcceptProductReviewResponse) ProtoMessage()               {}
func (*AcceptProductReviewResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{76} }

type RejectProductReviewRequest struct {
	ShopId string `protobuf:"bytes,1,opt,name=shop_id,json=shopId" json:"shop_id,omitempty"`
	Spu    string `protobuf:"bytes,2,opt,name=spu" json:"spu,omitempty"`
	Id     string `protobuf:"bytes,3,opt,name=id" json:"id,omitempty"`
}

func (m *RejectProductReviewRequest) Reset()                    { *m = RejectProductReviewRequest{} }
func (m *RejectProductReviewRequest) String() string            { return proto.CompactTextString(m) }
func (*RejectProductReviewRequest) ProtoMessage()               {}
func (*RejectProductReviewRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{77} }

func (m *RejectProductReviewRequest) GetShopId() string {
	if m != nil {
		return m.ShopId
	}
	return ""
}

func (m *RejectProductReviewRequest) GetSpu() string {
	if m != nil {
		return m.Spu
	}
	return ""
}

func (m *RejectProductReviewRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type RejectProductReviewResponse struct {
}

func (m *RejectProductReviewResponse) Reset()                    { *m = RejectProductReviewResponse{} }
func (m *RejectProductReviewResponse) String() string            { return proto.CompactTextString(m) }
func (*RejectProductReviewResponse) ProtoMessage()               {}
func (*RejectProductReviewResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{78} }

type CreateProductOptionRequest struct {
	ShopId string         `protobuf:"bytes,1,opt,name=shop_id,json=shopId" json:"shop_id,omitempty"`
	Spu    string         `protobuf:"bytes,2,opt,name=spu" json:"spu,omitempty"`
	Option *ProductOption `protobuf:"bytes,3,opt,name=option" json:"option,omitempty"`
}

func (m *CreateProductOptionRequest) Reset()                    { *m = CreateProductOptionRequest{} }
func (m *CreateProductOptionRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateProductOptionRequest) ProtoMessage()               {}
func (*CreateProductOptionRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{79} }

func (m *CreateProductOptionRequest) GetShopId() string {
	if m != nil {
		return m.ShopId
	}
	return ""
}

func (m *CreateProductOptionRequest) GetSpu() string {
	if m != nil {
		return m.Spu
	}
	return ""
}

func (m *CreateProductOptionRequest) GetOption() *ProductOption {
	if m != nil {
		return m.Option
	}
	return nil
}

type ProductOption struct {
	Code  string `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *ProductOption) Reset()                    { *m = ProductOption{} }
func (m *ProductOption) String() string            { return proto.CompactTextString(m) }
func (*ProductOption) ProtoMessage()               {}
func (*ProductOption) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{80} }

func (m *ProductOption) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *ProductOption) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type CreateProductOptionesponse struct {
	Option *ProductOption `protobuf:"bytes,1,opt,name=option" json:"option,omitempty"`
}

func (m *CreateProductOptionesponse) Reset()                    { *m = CreateProductOptionesponse{} }
func (m *CreateProductOptionesponse) String() string            { return proto.CompactTextString(m) }
func (*CreateProductOptionesponse) ProtoMessage()               {}
func (*CreateProductOptionesponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{81} }

func (m *CreateProductOptionesponse) GetOption() *ProductOption {
	if m != nil {
		return m.Option
	}
	return nil
}

type ReadProductOptionsRequest struct {
	ShopId string `protobuf:"bytes,1,opt,name=shop_id,json=shopId" json:"shop_id,omitempty"`
	Spu    string `protobuf:"bytes,2,opt,name=spu" json:"spu,omitempty"`
}

func (m *ReadProductOptionsRequest) Reset()                    { *m = ReadProductOptionsRequest{} }
func (m *ReadProductOptionsRequest) String() string            { return proto.CompactTextString(m) }
func (*ReadProductOptionsRequest) ProtoMessage()               {}
func (*ReadProductOptionsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{82} }

func (m *ReadProductOptionsRequest) GetShopId() string {
	if m != nil {
		return m.ShopId
	}
	return ""
}

func (m *ReadProductOptionsRequest) GetSpu() string {
	if m != nil {
		return m.Spu
	}
	return ""
}

type ReadProductOptionsResponse struct {
	Options []*ProductRecord_OptionRecord `protobuf:"bytes,1,rep,name=options" json:"options,omitempty"`
}

func (m *ReadProductOptionsResponse) Reset()                    { *m = ReadProductOptionsResponse{} }
func (m *ReadProductOptionsResponse) String() string            { return proto.CompactTextString(m) }
func (*ReadProductOptionsResponse) ProtoMessage()               {}
func (*ReadProductOptionsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{83} }

func (m *ReadProductOptionsResponse) GetOptions() []*ProductRecord_OptionRecord {
	if m != nil {
		return m.Options
	}
	return nil
}

type UpdateProductOptionRequest struct {
	ShopId string         `protobuf:"bytes,1,opt,name=shop_id,json=shopId" json:"shop_id,omitempty"`
	Spu    string         `protobuf:"bytes,2,opt,name=spu" json:"spu,omitempty"`
	Option *ProductOption `protobuf:"bytes,3,opt,name=option" json:"option,omitempty"`
}

func (m *UpdateProductOptionRequest) Reset()                    { *m = UpdateProductOptionRequest{} }
func (m *UpdateProductOptionRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateProductOptionRequest) ProtoMessage()               {}
func (*UpdateProductOptionRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{84} }

func (m *UpdateProductOptionRequest) GetShopId() string {
	if m != nil {
		return m.ShopId
	}
	return ""
}

func (m *UpdateProductOptionRequest) GetSpu() string {
	if m != nil {
		return m.Spu
	}
	return ""
}

func (m *UpdateProductOptionRequest) GetOption() *ProductOption {
	if m != nil {
		return m.Option
	}
	return nil
}

type UpdateProductOptionResponse struct {
	Option *ProductOption `protobuf:"bytes,1,opt,name=option" json:"option,omitempty"`
}

func (m *UpdateProductOptionResponse) Reset()                    { *m = UpdateProductOptionResponse{} }
func (m *UpdateProductOptionResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateProductOptionResponse) ProtoMessage()               {}
func (*UpdateProductOptionResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{85} }

func (m *UpdateProductOptionResponse) GetOption() *ProductOption {
	if m != nil {
		return m.Option
	}
	return nil
}

type DeleteProductOptionRequest struct {
	ShopId string `protobuf:"bytes,1,opt,name=shop_id,json=shopId" json:"shop_id,omitempty"`
	Spu    string `protobuf:"bytes,2,opt,name=spu" json:"spu,omitempty"`
	Code   string `protobuf:"bytes,3,opt,name=code" json:"code,omitempty"`
}

func (m *DeleteProductOptionRequest) Reset()                    { *m = DeleteProductOptionRequest{} }
func (m *DeleteProductOptionRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteProductOptionRequest) ProtoMessage()               {}
func (*DeleteProductOptionRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{86} }

func (m *DeleteProductOptionRequest) GetShopId() string {
	if m != nil {
		return m.ShopId
	}
	return ""
}

func (m *DeleteProductOptionRequest) GetSpu() string {
	if m != nil {
		return m.Spu
	}
	return ""
}

func (m *DeleteProductOptionRequest) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

type DeleteProductOptionResponse struct {
}

func (m *DeleteProductOptionResponse) Reset()                    { *m = DeleteProductOptionResponse{} }
func (m *DeleteProductOptionResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteProductOptionResponse) ProtoMessage()               {}
func (*DeleteProductOptionResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{87} }

type CreateProductVariantRequest struct {
	ShopId string         `protobuf:"bytes,1,opt,name=shop_id,json=shopId" json:"shop_id,omitempty"`
	Spu    string         `protobuf:"bytes,2,opt,name=spu" json:"spu,omitempty"`
	Record *VariantRecord `protobuf:"bytes,3,opt,name=record" json:"record,omitempty"`
}

func (m *CreateProductVariantRequest) Reset()                    { *m = CreateProductVariantRequest{} }
func (m *CreateProductVariantRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateProductVariantRequest) ProtoMessage()               {}
func (*CreateProductVariantRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{88} }

func (m *CreateProductVariantRequest) GetShopId() string {
	if m != nil {
		return m.ShopId
	}
	return ""
}

func (m *CreateProductVariantRequest) GetSpu() string {
	if m != nil {
		return m.Spu
	}
	return ""
}

func (m *CreateProductVariantRequest) GetRecord() *VariantRecord {
	if m != nil {
		return m.Record
	}
	return nil
}

type CreateProductVariantReponse struct {
	Record *VariantRecord `protobuf:"bytes,1,opt,name=record" json:"record,omitempty"`
}

func (m *CreateProductVariantReponse) Reset()                    { *m = CreateProductVariantReponse{} }
func (m *CreateProductVariantReponse) String() string            { return proto.CompactTextString(m) }
func (*CreateProductVariantReponse) ProtoMessage()               {}
func (*CreateProductVariantReponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{89} }

func (m *CreateProductVariantReponse) GetRecord() *VariantRecord {
	if m != nil {
		return m.Record
	}
	return nil
}

type ReadProductVariantsRequest struct {
	ShopId string `protobuf:"bytes,1,opt,name=shop_id,json=shopId" json:"shop_id,omitempty"`
	Spu    string `protobuf:"bytes,2,opt,name=spu" json:"spu,omitempty"`
}

func (m *ReadProductVariantsRequest) Reset()                    { *m = ReadProductVariantsRequest{} }
func (m *ReadProductVariantsRequest) String() string            { return proto.CompactTextString(m) }
func (*ReadProductVariantsRequest) ProtoMessage()               {}
func (*ReadProductVariantsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{90} }

func (m *ReadProductVariantsRequest) GetShopId() string {
	if m != nil {
		return m.ShopId
	}
	return ""
}

func (m *ReadProductVariantsRequest) GetSpu() string {
	if m != nil {
		return m.Spu
	}
	return ""
}

type ReadProductVariantsResponse struct {
	Records []*VariantRecord `protobuf:"bytes,1,rep,name=records" json:"records,omitempty"`
}

func (m *ReadProductVariantsResponse) Reset()                    { *m = ReadProductVariantsResponse{} }
func (m *ReadProductVariantsResponse) String() string            { return proto.CompactTextString(m) }
func (*ReadProductVariantsResponse) ProtoMessage()               {}
func (*ReadProductVariantsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{91} }

func (m *ReadProductVariantsResponse) GetRecords() []*VariantRecord {
	if m != nil {
		return m.Records
	}
	return nil
}

type ReadProductVariantRequest struct {
	ShopId string `protobuf:"bytes,1,opt,name=shop_id,json=shopId" json:"shop_id,omitempty"`
	Spu    string `protobuf:"bytes,2,opt,name=spu" json:"spu,omitempty"`
	Sku    string `protobuf:"bytes,3,opt,name=sku" json:"sku,omitempty"`
}

func (m *ReadProductVariantRequest) Reset()                    { *m = ReadProductVariantRequest{} }
func (m *ReadProductVariantRequest) String() string            { return proto.CompactTextString(m) }
func (*ReadProductVariantRequest) ProtoMessage()               {}
func (*ReadProductVariantRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{92} }

func (m *ReadProductVariantRequest) GetShopId() string {
	if m != nil {
		return m.ShopId
	}
	return ""
}

func (m *ReadProductVariantRequest) GetSpu() string {
	if m != nil {
		return m.Spu
	}
	return ""
}

func (m *ReadProductVariantRequest) GetSku() string {
	if m != nil {
		return m.Sku
	}
	return ""
}

type ReadProductVariantResponse struct {
	Record *VariantRecord `protobuf:"bytes,1,opt,name=record" json:"record,omitempty"`
}

func (m *ReadProductVariantResponse) Reset()                    { *m = ReadProductVariantResponse{} }
func (m *ReadProductVariantResponse) String() string            { return proto.CompactTextString(m) }
func (*ReadProductVariantResponse) ProtoMessage()               {}
func (*ReadProductVariantResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{93} }

func (m *ReadProductVariantResponse) GetRecord() *VariantRecord {
	if m != nil {
		return m.Record
	}
	return nil
}

type UpdateProductVariantRequest struct {
	ShopId string         `protobuf:"bytes,1,opt,name=shop_id,json=shopId" json:"shop_id,omitempty"`
	Spu    string         `protobuf:"bytes,2,opt,name=spu" json:"spu,omitempty"`
	Sku    string         `protobuf:"bytes,3,opt,name=sku" json:"sku,omitempty"`
	Record *VariantRecord `protobuf:"bytes,4,opt,name=record" json:"record,omitempty"`
}

func (m *UpdateProductVariantRequest) Reset()                    { *m = UpdateProductVariantRequest{} }
func (m *UpdateProductVariantRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateProductVariantRequest) ProtoMessage()               {}
func (*UpdateProductVariantRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{94} }

func (m *UpdateProductVariantRequest) GetShopId() string {
	if m != nil {
		return m.ShopId
	}
	return ""
}

func (m *UpdateProductVariantRequest) GetSpu() string {
	if m != nil {
		return m.Spu
	}
	return ""
}

func (m *UpdateProductVariantRequest) GetSku() string {
	if m != nil {
		return m.Sku
	}
	return ""
}

func (m *UpdateProductVariantRequest) GetRecord() *VariantRecord {
	if m != nil {
		return m.Record
	}
	return nil
}

type UpdateProductVariantResponse struct {
	Record *VariantRecord `protobuf:"bytes,1,opt,name=record" json:"record,omitempty"`
}

func (m *UpdateProductVariantResponse) Reset()                    { *m = UpdateProductVariantResponse{} }
func (m *UpdateProductVariantResponse) String() string            { return proto.CompactTextString(m) }
func (*UpdateProductVariantResponse) ProtoMessage()               {}
func (*UpdateProductVariantResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{95} }

func (m *UpdateProductVariantResponse) GetRecord() *VariantRecord {
	if m != nil {
		return m.Record
	}
	return nil
}

type DeleteProductVariantRequest struct {
	ShopId string `protobuf:"bytes,1,opt,name=shop_id,json=shopId" json:"shop_id,omitempty"`
	Spu    string `protobuf:"bytes,2,opt,name=spu" json:"spu,omitempty"`
	Sku    string `protobuf:"bytes,3,opt,name=sku" json:"sku,omitempty"`
}

func (m *DeleteProductVariantRequest) Reset()                    { *m = DeleteProductVariantRequest{} }
func (m *DeleteProductVariantRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteProductVariantRequest) ProtoMessage()               {}
func (*DeleteProductVariantRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{96} }

func (m *DeleteProductVariantRequest) GetShopId() string {
	if m != nil {
		return m.ShopId
	}
	return ""
}

func (m *DeleteProductVariantRequest) GetSpu() string {
	if m != nil {
		return m.Spu
	}
	return ""
}

func (m *DeleteProductVariantRequest) GetSku() string {
	if m != nil {
		return m.Sku
	}
	return ""
}

type DeleteProductVariantResponse struct {
}

func (m *DeleteProductVariantResponse) Reset()                    { *m = DeleteProductVariantResponse{} }
func (m *DeleteProductVariantResponse) String() string            { return proto.CompactTextString(m) }
func (*DeleteProductVariantResponse) ProtoMessage()               {}
func (*DeleteProductVariantResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{97} }

func init() {
	proto.RegisterType((*CreateAttributeRequest)(nil), "com.btdxcx.micro.srv.product.CreateAttributeRequest")
	proto.RegisterType((*CreateAttributeResponse)(nil), "com.btdxcx.micro.srv.product.CreateAttributeResponse")
	proto.RegisterType((*ReadAttributesRequest)(nil), "com.btdxcx.micro.srv.product.ReadAttributesRequest")
	proto.RegisterType((*ReadAttributesResponse)(nil), "com.btdxcx.micro.srv.product.ReadAttributesResponse")
	proto.RegisterType((*ReadAttributeRequest)(nil), "com.btdxcx.micro.srv.product.ReadAttributeRequest")
	proto.RegisterType((*ReadAttributeResponse)(nil), "com.btdxcx.micro.srv.product.ReadAttributeResponse")
	proto.RegisterType((*UpdateAttributeRequest)(nil), "com.btdxcx.micro.srv.product.UpdateAttributeRequest")
	proto.RegisterType((*UpdateAttributeResponse)(nil), "com.btdxcx.micro.srv.product.UpdateAttributeResponse")
	proto.RegisterType((*DeleteAttributeRequest)(nil), "com.btdxcx.micro.srv.product.DeleteAttributeRequest")
	proto.RegisterType((*DeleteAttributeResponse)(nil), "com.btdxcx.micro.srv.product.DeleteAttributeResponse")
	proto.RegisterType((*AttributesRecord)(nil), "com.btdxcx.micro.srv.product.AttributesRecord")
	proto.RegisterType((*CreateOptionRequest)(nil), "com.btdxcx.micro.srv.product.CreateOptionRequest")
	proto.RegisterType((*CreateOptionResponse)(nil), "com.btdxcx.micro.srv.product.CreateOptionResponse")
	proto.RegisterType((*ReadOptionsRequest)(nil), "com.btdxcx.micro.srv.product.ReadOptionsRequest")
	proto.RegisterType((*ReadOptionsResponse)(nil), "com.btdxcx.micro.srv.product.ReadOptionsResponse")
	proto.RegisterType((*ReadOptionequest)(nil), "com.btdxcx.micro.srv.product.ReadOptionequest")
	proto.RegisterType((*ReadOptionResponse)(nil), "com.btdxcx.micro.srv.product.ReadOptionResponse")
	proto.RegisterType((*UpdateOptionRequest)(nil), "com.btdxcx.micro.srv.product.UpdateOptionRequest")
	proto.RegisterType((*UpdateOptionResponse)(nil), "com.btdxcx.micro.srv.product.UpdateOptionResponse")
	proto.RegisterType((*DeleteOptionRequest)(nil), "com.btdxcx.micro.srv.product.DeleteOptionRequest")
	proto.RegisterType((*DeleteOptionResponse)(nil), "com.btdxcx.micro.srv.product.DeleteOptionResponse")
	proto.RegisterType((*OptionRecord)(nil), "com.btdxcx.micro.srv.product.OptionRecord")
	proto.RegisterType((*OptionRecord_OptionValue)(nil), "com.btdxcx.micro.srv.product.OptionRecord.OptionValue")
	proto.RegisterType((*CreateProductRequest)(nil), "com.btdxcx.micro.srv.product.CreateProductRequest")
	proto.RegisterType((*CreateProductResponse)(nil), "com.btdxcx.micro.srv.product.CreateProductResponse")
	proto.RegisterType((*ReadProductsRequest)(nil), "com.btdxcx.micro.srv.product.ReadProductsRequest")
	proto.RegisterType((*ReadProductsResponse)(nil), "com.btdxcx.micro.srv.product.ReadProductsResponse")
	proto.RegisterType((*ReadProductRequest)(nil), "com.btdxcx.micro.srv.product.ReadProductRequest")
	proto.RegisterType((*ReadProductResponse)(nil), "com.btdxcx.micro.srv.product.ReadProductResponse")
	proto.RegisterType((*UpdateProductRequest)(nil), "com.btdxcx.micro.srv.product.UpdateProductRequest")
	proto.RegisterType((*UpdateProductResponse)(nil), "com.btdxcx.micro.srv.product.UpdateProductResponse")
	proto.RegisterType((*DeleteProductRequest)(nil), "com.btdxcx.micro.srv.product.DeleteProductRequest")
	proto.RegisterType((*DeleteProductResponse)(nil), "com.btdxcx.micro.srv.product.DeleteProductResponse")
	proto.RegisterType((*ProductRecord)(nil), "com.btdxcx.micro.srv.product.ProductRecord")
	proto.RegisterType((*ProductRecord_AttributesRecord)(nil), "com.btdxcx.micro.srv.product.ProductRecord.AttributesRecord")
	proto.RegisterType((*ProductRecord_Association)(nil), "com.btdxcx.micro.srv.product.ProductRecord.Association")
	proto.RegisterType((*ProductRecord_OptionRecord)(nil), "com.btdxcx.micro.srv.product.ProductRecord.OptionRecord")
	proto.RegisterType((*ProductRecord_OptionRecord_OptionValue)(nil), "com.btdxcx.micro.srv.product.ProductRecord.OptionRecord.OptionValue")
	proto.RegisterType((*Image)(nil), "com.btdxcx.micro.srv.product.Image")
	proto.RegisterType((*ReviewsRecord)(nil), "com.btdxcx.micro.srv.product.ReviewsRecord")
	proto.RegisterType((*ReviewsRecord_Author)(nil), "com.btdxcx.micro.srv.product.ReviewsRecord.Author")
	proto.RegisterType((*VariantRecord)(nil), "com.btdxcx.micro.srv.product.VariantRecord")
	proto.RegisterType((*VariantRecord_Pricing)(nil), "com.btdxcx.micro.srv.product.VariantRecord.Pricing")
	proto.RegisterType((*ModifyTaxonsRequest)(nil), "com.btdxcx.micro.srv.product.ModifyTaxonsRequest")
	proto.RegisterType((*ProductTaxon)(nil), "com.btdxcx.micro.srv.product.ProductTaxon")
	proto.RegisterType((*ModifyTaxonsResponse)(nil), "com.btdxcx.micro.srv.product.ModifyTaxonsResponse")
	proto.RegisterType((*CreateProductAttributeRequest)(nil), "com.btdxcx.micro.srv.product.CreateProductAttributeRequest")
	proto.RegisterType((*CreateProductAttributeResponse)(nil), "com.btdxcx.micro.srv.product.CreateProductAttributeResponse")
	proto.RegisterType((*ReadProductAttributesRequest)(nil), "com.btdxcx.micro.srv.product.ReadProductAttributesRequest")
	proto.RegisterType((*ReadProductAttributesResponse)(nil), "com.btdxcx.micro.srv.product.ReadProductAttributesResponse")
	proto.RegisterType((*UpdateProductAttributeRequest)(nil), "com.btdxcx.micro.srv.product.UpdateProductAttributeRequest")
	proto.RegisterType((*UpdateProductAttributeResponse)(nil), "com.btdxcx.micro.srv.product.UpdateProductAttributeResponse")
	proto.RegisterType((*DeleteProductAttributeRequest)(nil), "com.btdxcx.micro.srv.product.DeleteProductAttributeRequest")
	proto.RegisterType((*DeleteProductAttributeResponse)(nil), "com.btdxcx.micro.srv.product.DeleteProductAttributeResponse")
	proto.RegisterType((*ProductAttribute)(nil), "com.btdxcx.micro.srv.product.ProductAttribute")
	proto.RegisterType((*CreateProductAssociationRequest)(nil), "com.btdxcx.micro.srv.product.CreateProductAssociationRequest")
	proto.RegisterType((*CreateProductAssociationResponse)(nil), "com.btdxcx.micro.srv.product.CreateProductAssociationResponse")
	proto.RegisterType((*ReadProductAssociationsRequest)(nil), "com.btdxcx.micro.srv.product.ReadProductAssociationsRequest")
	proto.RegisterType((*ReadProductAssociationsResponse)(nil), "com.btdxcx.micro.srv.product.ReadProductAssociationsResponse")
	proto.RegisterType((*UpdateProductAssociationRequest)(nil), "com.btdxcx.micro.srv.product.UpdateProductAssociationRequest")
	proto.RegisterType((*UpdateProductAssociationResponse)(nil), "com.btdxcx.micro.srv.product.UpdateProductAssociationResponse")
	proto.RegisterType((*DeleteProductAssociationRequest)(nil), "com.btdxcx.micro.srv.product.DeleteProductAssociationRequest")
	proto.RegisterType((*DeleteProductAssociationResponse)(nil), "com.btdxcx.micro.srv.product.DeleteProductAssociationResponse")
	proto.RegisterType((*ProductAssociation)(nil), "com.btdxcx.micro.srv.product.ProductAssociation")
	proto.RegisterType((*CreateProductImageRequest)(nil), "com.btdxcx.micro.srv.product.CreateProductImageRequest")
	proto.RegisterType((*CreateProductImageResponse)(nil), "com.btdxcx.micro.srv.product.CreateProductImageResponse")
	proto.RegisterType((*ReadProductImagesRequest)(nil), "com.btdxcx.micro.srv.product.ReadProductImagesRequest")
	proto.RegisterType((*ReadProductImagesResponse)(nil), "com.btdxcx.micro.srv.product.ReadProductImagesResponse")
	proto.RegisterType((*UpdateProductImageRequest)(nil), "com.btdxcx.micro.srv.product.UpdateProductImageRequest")
	proto.RegisterType((*UpdateProductImageResponse)(nil), "com.btdxcx.micro.srv.product.UpdateProductImageResponse")
	proto.RegisterType((*DeleteProductImageRequest)(nil), "com.btdxcx.micro.srv.product.DeleteProductImageRequest")
	proto.RegisterType((*DeleteProductImageResponse)(nil), "com.btdxcx.micro.srv.product.DeleteProductImageResponse")
	proto.RegisterType((*CreateProductReviewRequest)(nil), "com.btdxcx.micro.srv.product.CreateProductReviewRequest")
	proto.RegisterType((*CreateProductReviewResponse)(nil), "com.btdxcx.micro.srv.product.CreateProductReviewResponse")
	proto.RegisterType((*ReadProductReviewsRequest)(nil), "com.btdxcx.micro.srv.product.ReadProductReviewsRequest")
	proto.RegisterType((*ReadProductReviewsResponse)(nil), "com.btdxcx.micro.srv.product.ReadProductReviewsResponse")
	proto.RegisterType((*ReadProductReviewRequest)(nil), "com.btdxcx.micro.srv.product.ReadProductReviewRequest")
	proto.RegisterType((*ReadProductReviewResponse)(nil), "com.btdxcx.micro.srv.product.ReadProductReviewResponse")
	proto.RegisterType((*UpdateProductReviewRequest)(nil), "com.btdxcx.micro.srv.product.UpdateProductReviewRequest")
	proto.RegisterType((*UpdateProductReviewResponse)(nil), "com.btdxcx.micro.srv.product.UpdateProductReviewResponse")
	proto.RegisterType((*DeleteProductReviewRequest)(nil), "com.btdxcx.micro.srv.product.DeleteProductReviewRequest")
	proto.RegisterType((*DeleteProductReviewResponse)(nil), "com.btdxcx.micro.srv.product.DeleteProductReviewResponse")
	proto.RegisterType((*AcceptProductReviewRequest)(nil), "com.btdxcx.micro.srv.product.AcceptProductReviewRequest")
	proto.RegisterType((*AcceptProductReviewResponse)(nil), "com.btdxcx.micro.srv.product.AcceptProductReviewResponse")
	proto.RegisterType((*RejectProductReviewRequest)(nil), "com.btdxcx.micro.srv.product.RejectProductReviewRequest")
	proto.RegisterType((*RejectProductReviewResponse)(nil), "com.btdxcx.micro.srv.product.RejectProductReviewResponse")
	proto.RegisterType((*CreateProductOptionRequest)(nil), "com.btdxcx.micro.srv.product.CreateProductOptionRequest")
	proto.RegisterType((*ProductOption)(nil), "com.btdxcx.micro.srv.product.ProductOption")
	proto.RegisterType((*CreateProductOptionesponse)(nil), "com.btdxcx.micro.srv.product.CreateProductOptionesponse")
	proto.RegisterType((*ReadProductOptionsRequest)(nil), "com.btdxcx.micro.srv.product.ReadProductOptionsRequest")
	proto.RegisterType((*ReadProductOptionsResponse)(nil), "com.btdxcx.micro.srv.product.ReadProductOptionsResponse")
	proto.RegisterType((*UpdateProductOptionRequest)(nil), "com.btdxcx.micro.srv.product.UpdateProductOptionRequest")
	proto.RegisterType((*UpdateProductOptionResponse)(nil), "com.btdxcx.micro.srv.product.UpdateProductOptionResponse")
	proto.RegisterType((*DeleteProductOptionRequest)(nil), "com.btdxcx.micro.srv.product.DeleteProductOptionRequest")
	proto.RegisterType((*DeleteProductOptionResponse)(nil), "com.btdxcx.micro.srv.product.DeleteProductOptionResponse")
	proto.RegisterType((*CreateProductVariantRequest)(nil), "com.btdxcx.micro.srv.product.CreateProductVariantRequest")
	proto.RegisterType((*CreateProductVariantReponse)(nil), "com.btdxcx.micro.srv.product.CreateProductVariantReponse")
	proto.RegisterType((*ReadProductVariantsRequest)(nil), "com.btdxcx.micro.srv.product.ReadProductVariantsRequest")
	proto.RegisterType((*ReadProductVariantsResponse)(nil), "com.btdxcx.micro.srv.product.ReadProductVariantsResponse")
	proto.RegisterType((*ReadProductVariantRequest)(nil), "com.btdxcx.micro.srv.product.ReadProductVariantRequest")
	proto.RegisterType((*ReadProductVariantResponse)(nil), "com.btdxcx.micro.srv.product.ReadProductVariantResponse")
	proto.RegisterType((*UpdateProductVariantRequest)(nil), "com.btdxcx.micro.srv.product.UpdateProductVariantRequest")
	proto.RegisterType((*UpdateProductVariantResponse)(nil), "com.btdxcx.micro.srv.product.UpdateProductVariantResponse")
	proto.RegisterType((*DeleteProductVariantRequest)(nil), "com.btdxcx.micro.srv.product.DeleteProductVariantRequest")
	proto.RegisterType((*DeleteProductVariantResponse)(nil), "com.btdxcx.micro.srv.product.DeleteProductVariantResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for Attribute service

type AttributeClient interface {
	CreateAttribute(ctx context.Context, in *CreateAttributeRequest, opts ...client.CallOption) (*CreateAttributeResponse, error)
	ReadAttributes(ctx context.Context, in *ReadAttributesRequest, opts ...client.CallOption) (*ReadAttributesResponse, error)
	ReadAttribute(ctx context.Context, in *ReadAttributeRequest, opts ...client.CallOption) (*ReadAttributeResponse, error)
	UpdateAttribute(ctx context.Context, in *UpdateAttributeRequest, opts ...client.CallOption) (*UpdateAttributeResponse, error)
	DeleteAttribute(ctx context.Context, in *DeleteAttributeRequest, opts ...client.CallOption) (*DeleteAttributeResponse, error)
}

type attributeClient struct {
	c           client.Client
	serviceName string
}

func NewAttributeClient(serviceName string, c client.Client) AttributeClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "com.btdxcx.micro.srv.product"
	}
	return &attributeClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *attributeClient) CreateAttribute(ctx context.Context, in *CreateAttributeRequest, opts ...client.CallOption) (*CreateAttributeResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Attribute.CreateAttribute", in)
	out := new(CreateAttributeResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *attributeClient) ReadAttributes(ctx context.Context, in *ReadAttributesRequest, opts ...client.CallOption) (*ReadAttributesResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Attribute.ReadAttributes", in)
	out := new(ReadAttributesResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *attributeClient) ReadAttribute(ctx context.Context, in *ReadAttributeRequest, opts ...client.CallOption) (*ReadAttributeResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Attribute.ReadAttribute", in)
	out := new(ReadAttributeResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *attributeClient) UpdateAttribute(ctx context.Context, in *UpdateAttributeRequest, opts ...client.CallOption) (*UpdateAttributeResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Attribute.UpdateAttribute", in)
	out := new(UpdateAttributeResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *attributeClient) DeleteAttribute(ctx context.Context, in *DeleteAttributeRequest, opts ...client.CallOption) (*DeleteAttributeResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Attribute.DeleteAttribute", in)
	out := new(DeleteAttributeResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Attribute service

type AttributeHandler interface {
	CreateAttribute(context.Context, *CreateAttributeRequest, *CreateAttributeResponse) error
	ReadAttributes(context.Context, *ReadAttributesRequest, *ReadAttributesResponse) error
	ReadAttribute(context.Context, *ReadAttributeRequest, *ReadAttributeResponse) error
	UpdateAttribute(context.Context, *UpdateAttributeRequest, *UpdateAttributeResponse) error
	DeleteAttribute(context.Context, *DeleteAttributeRequest, *DeleteAttributeResponse) error
}

func RegisterAttributeHandler(s server.Server, hdlr AttributeHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&Attribute{hdlr}, opts...))
}

type Attribute struct {
	AttributeHandler
}

func (h *Attribute) CreateAttribute(ctx context.Context, in *CreateAttributeRequest, out *CreateAttributeResponse) error {
	return h.AttributeHandler.CreateAttribute(ctx, in, out)
}

func (h *Attribute) ReadAttributes(ctx context.Context, in *ReadAttributesRequest, out *ReadAttributesResponse) error {
	return h.AttributeHandler.ReadAttributes(ctx, in, out)
}

func (h *Attribute) ReadAttribute(ctx context.Context, in *ReadAttributeRequest, out *ReadAttributeResponse) error {
	return h.AttributeHandler.ReadAttribute(ctx, in, out)
}

func (h *Attribute) UpdateAttribute(ctx context.Context, in *UpdateAttributeRequest, out *UpdateAttributeResponse) error {
	return h.AttributeHandler.UpdateAttribute(ctx, in, out)
}

func (h *Attribute) DeleteAttribute(ctx context.Context, in *DeleteAttributeRequest, out *DeleteAttributeResponse) error {
	return h.AttributeHandler.DeleteAttribute(ctx, in, out)
}

// Client API for Option service

type OptionClient interface {
	CreateOption(ctx context.Context, in *CreateOptionRequest, opts ...client.CallOption) (*CreateOptionResponse, error)
	ReadOptions(ctx context.Context, in *ReadOptionsRequest, opts ...client.CallOption) (*ReadOptionsResponse, error)
	ReadOption(ctx context.Context, in *ReadOptionequest, opts ...client.CallOption) (*ReadOptionResponse, error)
	UpdateOption(ctx context.Context, in *UpdateOptionRequest, opts ...client.CallOption) (*UpdateOptionResponse, error)
	DeleteOption(ctx context.Context, in *DeleteOptionRequest, opts ...client.CallOption) (*DeleteOptionResponse, error)
}

type optionClient struct {
	c           client.Client
	serviceName string
}

func NewOptionClient(serviceName string, c client.Client) OptionClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "com.btdxcx.micro.srv.product"
	}
	return &optionClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *optionClient) CreateOption(ctx context.Context, in *CreateOptionRequest, opts ...client.CallOption) (*CreateOptionResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Option.CreateOption", in)
	out := new(CreateOptionResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *optionClient) ReadOptions(ctx context.Context, in *ReadOptionsRequest, opts ...client.CallOption) (*ReadOptionsResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Option.ReadOptions", in)
	out := new(ReadOptionsResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *optionClient) ReadOption(ctx context.Context, in *ReadOptionequest, opts ...client.CallOption) (*ReadOptionResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Option.ReadOption", in)
	out := new(ReadOptionResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *optionClient) UpdateOption(ctx context.Context, in *UpdateOptionRequest, opts ...client.CallOption) (*UpdateOptionResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Option.UpdateOption", in)
	out := new(UpdateOptionResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *optionClient) DeleteOption(ctx context.Context, in *DeleteOptionRequest, opts ...client.CallOption) (*DeleteOptionResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Option.DeleteOption", in)
	out := new(DeleteOptionResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Option service

type OptionHandler interface {
	CreateOption(context.Context, *CreateOptionRequest, *CreateOptionResponse) error
	ReadOptions(context.Context, *ReadOptionsRequest, *ReadOptionsResponse) error
	ReadOption(context.Context, *ReadOptionequest, *ReadOptionResponse) error
	UpdateOption(context.Context, *UpdateOptionRequest, *UpdateOptionResponse) error
	DeleteOption(context.Context, *DeleteOptionRequest, *DeleteOptionResponse) error
}

func RegisterOptionHandler(s server.Server, hdlr OptionHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&Option{hdlr}, opts...))
}

type Option struct {
	OptionHandler
}

func (h *Option) CreateOption(ctx context.Context, in *CreateOptionRequest, out *CreateOptionResponse) error {
	return h.OptionHandler.CreateOption(ctx, in, out)
}

func (h *Option) ReadOptions(ctx context.Context, in *ReadOptionsRequest, out *ReadOptionsResponse) error {
	return h.OptionHandler.ReadOptions(ctx, in, out)
}

func (h *Option) ReadOption(ctx context.Context, in *ReadOptionequest, out *ReadOptionResponse) error {
	return h.OptionHandler.ReadOption(ctx, in, out)
}

func (h *Option) UpdateOption(ctx context.Context, in *UpdateOptionRequest, out *UpdateOptionResponse) error {
	return h.OptionHandler.UpdateOption(ctx, in, out)
}

func (h *Option) DeleteOption(ctx context.Context, in *DeleteOptionRequest, out *DeleteOptionResponse) error {
	return h.OptionHandler.DeleteOption(ctx, in, out)
}

// Client API for Product service

type ProductClient interface {
	CreateProduct(ctx context.Context, in *CreateProductRequest, opts ...client.CallOption) (*CreateProductResponse, error)
	ReadProducts(ctx context.Context, in *ReadProductsRequest, opts ...client.CallOption) (*ReadProductsResponse, error)
	ReadProduct(ctx context.Context, in *ReadProductRequest, opts ...client.CallOption) (*ReadProductResponse, error)
	UpdateProduct(ctx context.Context, in *UpdateProductRequest, opts ...client.CallOption) (*UpdateProductResponse, error)
	DeleteProduct(ctx context.Context, in *DeleteProductRequest, opts ...client.CallOption) (*DeleteProductResponse, error)
	ModifyProductTaxons(ctx context.Context, in *ModifyTaxonsRequest, opts ...client.CallOption) (*ModifyTaxonsResponse, error)
	CreateProductAttribute(ctx context.Context, in *CreateProductAttributeRequest, opts ...client.CallOption) (*CreateProductAttributeResponse, error)
	ReadProductAttributes(ctx context.Context, in *ReadProductAttributesRequest, opts ...client.CallOption) (*ReadProductAttributesResponse, error)
	UpdateProductAttribute(ctx context.Context, in *UpdateProductAttributeRequest, opts ...client.CallOption) (*UpdateProductAttributeResponse, error)
	DeleteProductAttribute(ctx context.Context, in *DeleteProductAttributeRequest, opts ...client.CallOption) (*DeleteProductAttributeResponse, error)
	CreateProductAssociation(ctx context.Context, in *CreateProductAssociationRequest, opts ...client.CallOption) (*CreateProductAssociationResponse, error)
	ReadProductAssociations(ctx context.Context, in *ReadProductAssociationsRequest, opts ...client.CallOption) (*ReadProductAssociationsResponse, error)
	UpdateProductAssociation(ctx context.Context, in *UpdateProductAssociationRequest, opts ...client.CallOption) (*UpdateProductAssociationResponse, error)
	DeleteProductAssociation(ctx context.Context, in *DeleteProductAssociationRequest, opts ...client.CallOption) (*DeleteProductAssociationResponse, error)
	CreateProductImage(ctx context.Context, in *CreateProductImageRequest, opts ...client.CallOption) (*CreateProductImageResponse, error)
	ReadProductImages(ctx context.Context, in *ReadProductImagesRequest, opts ...client.CallOption) (*ReadProductImagesResponse, error)
	UpdateProductImage(ctx context.Context, in *UpdateProductImageRequest, opts ...client.CallOption) (*UpdateProductImageResponse, error)
	DeleteProductImage(ctx context.Context, in *DeleteProductImageRequest, opts ...client.CallOption) (*DeleteProductImageResponse, error)
	CreateProductReview(ctx context.Context, in *CreateProductReviewRequest, opts ...client.CallOption) (*CreateProductReviewResponse, error)
	ReadProductReviews(ctx context.Context, in *ReadProductReviewsRequest, opts ...client.CallOption) (*ReadProductReviewsResponse, error)
	ReadProductReview(ctx context.Context, in *ReadProductReviewRequest, opts ...client.CallOption) (*ReadProductReviewResponse, error)
	UpdateProductReview(ctx context.Context, in *UpdateProductReviewRequest, opts ...client.CallOption) (*UpdateProductReviewResponse, error)
	DeleteProductReview(ctx context.Context, in *DeleteProductReviewRequest, opts ...client.CallOption) (*DeleteProductReviewResponse, error)
	AcceptProductReview(ctx context.Context, in *AcceptProductReviewRequest, opts ...client.CallOption) (*AcceptProductReviewResponse, error)
	RejectProductReview(ctx context.Context, in *RejectProductReviewRequest, opts ...client.CallOption) (*RejectProductReviewResponse, error)
	CreateProductOption(ctx context.Context, in *CreateProductOptionRequest, opts ...client.CallOption) (*CreateProductOptionesponse, error)
	ReadProductOptions(ctx context.Context, in *ReadProductOptionsRequest, opts ...client.CallOption) (*ReadProductOptionsResponse, error)
	UpdateProductOption(ctx context.Context, in *UpdateProductOptionRequest, opts ...client.CallOption) (*UpdateProductOptionResponse, error)
	DeleteProductOption(ctx context.Context, in *DeleteProductOptionRequest, opts ...client.CallOption) (*DeleteProductOptionResponse, error)
	CreateProductVariant(ctx context.Context, in *CreateProductVariantRequest, opts ...client.CallOption) (*CreateProductVariantReponse, error)
	ReadProductVariants(ctx context.Context, in *ReadProductVariantsRequest, opts ...client.CallOption) (*ReadProductVariantsResponse, error)
	ReadProductVariant(ctx context.Context, in *ReadProductVariantRequest, opts ...client.CallOption) (*ReadProductVariantResponse, error)
	UpdateProductVariant(ctx context.Context, in *UpdateProductVariantRequest, opts ...client.CallOption) (*UpdateProductVariantResponse, error)
	DeleteProductVariant(ctx context.Context, in *DeleteProductVariantRequest, opts ...client.CallOption) (*DeleteProductVariantResponse, error)
}

type productClient struct {
	c           client.Client
	serviceName string
}

func NewProductClient(serviceName string, c client.Client) ProductClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "com.btdxcx.micro.srv.product"
	}
	return &productClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *productClient) CreateProduct(ctx context.Context, in *CreateProductRequest, opts ...client.CallOption) (*CreateProductResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Product.CreateProduct", in)
	out := new(CreateProductResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productClient) ReadProducts(ctx context.Context, in *ReadProductsRequest, opts ...client.CallOption) (*ReadProductsResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Product.ReadProducts", in)
	out := new(ReadProductsResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productClient) ReadProduct(ctx context.Context, in *ReadProductRequest, opts ...client.CallOption) (*ReadProductResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Product.ReadProduct", in)
	out := new(ReadProductResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productClient) UpdateProduct(ctx context.Context, in *UpdateProductRequest, opts ...client.CallOption) (*UpdateProductResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Product.UpdateProduct", in)
	out := new(UpdateProductResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productClient) DeleteProduct(ctx context.Context, in *DeleteProductRequest, opts ...client.CallOption) (*DeleteProductResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Product.DeleteProduct", in)
	out := new(DeleteProductResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productClient) ModifyProductTaxons(ctx context.Context, in *ModifyTaxonsRequest, opts ...client.CallOption) (*ModifyTaxonsResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Product.ModifyProductTaxons", in)
	out := new(ModifyTaxonsResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productClient) CreateProductAttribute(ctx context.Context, in *CreateProductAttributeRequest, opts ...client.CallOption) (*CreateProductAttributeResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Product.CreateProductAttribute", in)
	out := new(CreateProductAttributeResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productClient) ReadProductAttributes(ctx context.Context, in *ReadProductAttributesRequest, opts ...client.CallOption) (*ReadProductAttributesResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Product.ReadProductAttributes", in)
	out := new(ReadProductAttributesResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productClient) UpdateProductAttribute(ctx context.Context, in *UpdateProductAttributeRequest, opts ...client.CallOption) (*UpdateProductAttributeResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Product.UpdateProductAttribute", in)
	out := new(UpdateProductAttributeResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productClient) DeleteProductAttribute(ctx context.Context, in *DeleteProductAttributeRequest, opts ...client.CallOption) (*DeleteProductAttributeResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Product.DeleteProductAttribute", in)
	out := new(DeleteProductAttributeResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productClient) CreateProductAssociation(ctx context.Context, in *CreateProductAssociationRequest, opts ...client.CallOption) (*CreateProductAssociationResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Product.CreateProductAssociation", in)
	out := new(CreateProductAssociationResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productClient) ReadProductAssociations(ctx context.Context, in *ReadProductAssociationsRequest, opts ...client.CallOption) (*ReadProductAssociationsResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Product.ReadProductAssociations", in)
	out := new(ReadProductAssociationsResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productClient) UpdateProductAssociation(ctx context.Context, in *UpdateProductAssociationRequest, opts ...client.CallOption) (*UpdateProductAssociationResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Product.UpdateProductAssociation", in)
	out := new(UpdateProductAssociationResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productClient) DeleteProductAssociation(ctx context.Context, in *DeleteProductAssociationRequest, opts ...client.CallOption) (*DeleteProductAssociationResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Product.DeleteProductAssociation", in)
	out := new(DeleteProductAssociationResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productClient) CreateProductImage(ctx context.Context, in *CreateProductImageRequest, opts ...client.CallOption) (*CreateProductImageResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Product.CreateProductImage", in)
	out := new(CreateProductImageResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productClient) ReadProductImages(ctx context.Context, in *ReadProductImagesRequest, opts ...client.CallOption) (*ReadProductImagesResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Product.ReadProductImages", in)
	out := new(ReadProductImagesResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productClient) UpdateProductImage(ctx context.Context, in *UpdateProductImageRequest, opts ...client.CallOption) (*UpdateProductImageResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Product.UpdateProductImage", in)
	out := new(UpdateProductImageResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productClient) DeleteProductImage(ctx context.Context, in *DeleteProductImageRequest, opts ...client.CallOption) (*DeleteProductImageResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Product.DeleteProductImage", in)
	out := new(DeleteProductImageResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productClient) CreateProductReview(ctx context.Context, in *CreateProductReviewRequest, opts ...client.CallOption) (*CreateProductReviewResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Product.CreateProductReview", in)
	out := new(CreateProductReviewResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productClient) ReadProductReviews(ctx context.Context, in *ReadProductReviewsRequest, opts ...client.CallOption) (*ReadProductReviewsResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Product.ReadProductReviews", in)
	out := new(ReadProductReviewsResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productClient) ReadProductReview(ctx context.Context, in *ReadProductReviewRequest, opts ...client.CallOption) (*ReadProductReviewResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Product.ReadProductReview", in)
	out := new(ReadProductReviewResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productClient) UpdateProductReview(ctx context.Context, in *UpdateProductReviewRequest, opts ...client.CallOption) (*UpdateProductReviewResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Product.UpdateProductReview", in)
	out := new(UpdateProductReviewResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productClient) DeleteProductReview(ctx context.Context, in *DeleteProductReviewRequest, opts ...client.CallOption) (*DeleteProductReviewResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Product.DeleteProductReview", in)
	out := new(DeleteProductReviewResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productClient) AcceptProductReview(ctx context.Context, in *AcceptProductReviewRequest, opts ...client.CallOption) (*AcceptProductReviewResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Product.AcceptProductReview", in)
	out := new(AcceptProductReviewResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productClient) RejectProductReview(ctx context.Context, in *RejectProductReviewRequest, opts ...client.CallOption) (*RejectProductReviewResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Product.RejectProductReview", in)
	out := new(RejectProductReviewResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productClient) CreateProductOption(ctx context.Context, in *CreateProductOptionRequest, opts ...client.CallOption) (*CreateProductOptionesponse, error) {
	req := c.c.NewRequest(c.serviceName, "Product.CreateProductOption", in)
	out := new(CreateProductOptionesponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productClient) ReadProductOptions(ctx context.Context, in *ReadProductOptionsRequest, opts ...client.CallOption) (*ReadProductOptionsResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Product.ReadProductOptions", in)
	out := new(ReadProductOptionsResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productClient) UpdateProductOption(ctx context.Context, in *UpdateProductOptionRequest, opts ...client.CallOption) (*UpdateProductOptionResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Product.UpdateProductOption", in)
	out := new(UpdateProductOptionResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productClient) DeleteProductOption(ctx context.Context, in *DeleteProductOptionRequest, opts ...client.CallOption) (*DeleteProductOptionResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Product.DeleteProductOption", in)
	out := new(DeleteProductOptionResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productClient) CreateProductVariant(ctx context.Context, in *CreateProductVariantRequest, opts ...client.CallOption) (*CreateProductVariantReponse, error) {
	req := c.c.NewRequest(c.serviceName, "Product.CreateProductVariant", in)
	out := new(CreateProductVariantReponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productClient) ReadProductVariants(ctx context.Context, in *ReadProductVariantsRequest, opts ...client.CallOption) (*ReadProductVariantsResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Product.ReadProductVariants", in)
	out := new(ReadProductVariantsResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productClient) ReadProductVariant(ctx context.Context, in *ReadProductVariantRequest, opts ...client.CallOption) (*ReadProductVariantResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Product.ReadProductVariant", in)
	out := new(ReadProductVariantResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productClient) UpdateProductVariant(ctx context.Context, in *UpdateProductVariantRequest, opts ...client.CallOption) (*UpdateProductVariantResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Product.UpdateProductVariant", in)
	out := new(UpdateProductVariantResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *productClient) DeleteProductVariant(ctx context.Context, in *DeleteProductVariantRequest, opts ...client.CallOption) (*DeleteProductVariantResponse, error) {
	req := c.c.NewRequest(c.serviceName, "Product.DeleteProductVariant", in)
	out := new(DeleteProductVariantResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Product service

type ProductHandler interface {
	CreateProduct(context.Context, *CreateProductRequest, *CreateProductResponse) error
	ReadProducts(context.Context, *ReadProductsRequest, *ReadProductsResponse) error
	ReadProduct(context.Context, *ReadProductRequest, *ReadProductResponse) error
	UpdateProduct(context.Context, *UpdateProductRequest, *UpdateProductResponse) error
	DeleteProduct(context.Context, *DeleteProductRequest, *DeleteProductResponse) error
	ModifyProductTaxons(context.Context, *ModifyTaxonsRequest, *ModifyTaxonsResponse) error
	CreateProductAttribute(context.Context, *CreateProductAttributeRequest, *CreateProductAttributeResponse) error
	ReadProductAttributes(context.Context, *ReadProductAttributesRequest, *ReadProductAttributesResponse) error
	UpdateProductAttribute(context.Context, *UpdateProductAttributeRequest, *UpdateProductAttributeResponse) error
	DeleteProductAttribute(context.Context, *DeleteProductAttributeRequest, *DeleteProductAttributeResponse) error
	CreateProductAssociation(context.Context, *CreateProductAssociationRequest, *CreateProductAssociationResponse) error
	ReadProductAssociations(context.Context, *ReadProductAssociationsRequest, *ReadProductAssociationsResponse) error
	UpdateProductAssociation(context.Context, *UpdateProductAssociationRequest, *UpdateProductAssociationResponse) error
	DeleteProductAssociation(context.Context, *DeleteProductAssociationRequest, *DeleteProductAssociationResponse) error
	CreateProductImage(context.Context, *CreateProductImageRequest, *CreateProductImageResponse) error
	ReadProductImages(context.Context, *ReadProductImagesRequest, *ReadProductImagesResponse) error
	UpdateProductImage(context.Context, *UpdateProductImageRequest, *UpdateProductImageResponse) error
	DeleteProductImage(context.Context, *DeleteProductImageRequest, *DeleteProductImageResponse) error
	CreateProductReview(context.Context, *CreateProductReviewRequest, *CreateProductReviewResponse) error
	ReadProductReviews(context.Context, *ReadProductReviewsRequest, *ReadProductReviewsResponse) error
	ReadProductReview(context.Context, *ReadProductReviewRequest, *ReadProductReviewResponse) error
	UpdateProductReview(context.Context, *UpdateProductReviewRequest, *UpdateProductReviewResponse) error
	DeleteProductReview(context.Context, *DeleteProductReviewRequest, *DeleteProductReviewResponse) error
	AcceptProductReview(context.Context, *AcceptProductReviewRequest, *AcceptProductReviewResponse) error
	RejectProductReview(context.Context, *RejectProductReviewRequest, *RejectProductReviewResponse) error
	CreateProductOption(context.Context, *CreateProductOptionRequest, *CreateProductOptionesponse) error
	ReadProductOptions(context.Context, *ReadProductOptionsRequest, *ReadProductOptionsResponse) error
	UpdateProductOption(context.Context, *UpdateProductOptionRequest, *UpdateProductOptionResponse) error
	DeleteProductOption(context.Context, *DeleteProductOptionRequest, *DeleteProductOptionResponse) error
	CreateProductVariant(context.Context, *CreateProductVariantRequest, *CreateProductVariantReponse) error
	ReadProductVariants(context.Context, *ReadProductVariantsRequest, *ReadProductVariantsResponse) error
	ReadProductVariant(context.Context, *ReadProductVariantRequest, *ReadProductVariantResponse) error
	UpdateProductVariant(context.Context, *UpdateProductVariantRequest, *UpdateProductVariantResponse) error
	DeleteProductVariant(context.Context, *DeleteProductVariantRequest, *DeleteProductVariantResponse) error
}

func RegisterProductHandler(s server.Server, hdlr ProductHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&Product{hdlr}, opts...))
}

type Product struct {
	ProductHandler
}

func (h *Product) CreateProduct(ctx context.Context, in *CreateProductRequest, out *CreateProductResponse) error {
	return h.ProductHandler.CreateProduct(ctx, in, out)
}

func (h *Product) ReadProducts(ctx context.Context, in *ReadProductsRequest, out *ReadProductsResponse) error {
	return h.ProductHandler.ReadProducts(ctx, in, out)
}

func (h *Product) ReadProduct(ctx context.Context, in *ReadProductRequest, out *ReadProductResponse) error {
	return h.ProductHandler.ReadProduct(ctx, in, out)
}

func (h *Product) UpdateProduct(ctx context.Context, in *UpdateProductRequest, out *UpdateProductResponse) error {
	return h.ProductHandler.UpdateProduct(ctx, in, out)
}

func (h *Product) DeleteProduct(ctx context.Context, in *DeleteProductRequest, out *DeleteProductResponse) error {
	return h.ProductHandler.DeleteProduct(ctx, in, out)
}

func (h *Product) ModifyProductTaxons(ctx context.Context, in *ModifyTaxonsRequest, out *ModifyTaxonsResponse) error {
	return h.ProductHandler.ModifyProductTaxons(ctx, in, out)
}

func (h *Product) CreateProductAttribute(ctx context.Context, in *CreateProductAttributeRequest, out *CreateProductAttributeResponse) error {
	return h.ProductHandler.CreateProductAttribute(ctx, in, out)
}

func (h *Product) ReadProductAttributes(ctx context.Context, in *ReadProductAttributesRequest, out *ReadProductAttributesResponse) error {
	return h.ProductHandler.ReadProductAttributes(ctx, in, out)
}

func (h *Product) UpdateProductAttribute(ctx context.Context, in *UpdateProductAttributeRequest, out *UpdateProductAttributeResponse) error {
	return h.ProductHandler.UpdateProductAttribute(ctx, in, out)
}

func (h *Product) DeleteProductAttribute(ctx context.Context, in *DeleteProductAttributeRequest, out *DeleteProductAttributeResponse) error {
	return h.ProductHandler.DeleteProductAttribute(ctx, in, out)
}

func (h *Product) CreateProductAssociation(ctx context.Context, in *CreateProductAssociationRequest, out *CreateProductAssociationResponse) error {
	return h.ProductHandler.CreateProductAssociation(ctx, in, out)
}

func (h *Product) ReadProductAssociations(ctx context.Context, in *ReadProductAssociationsRequest, out *ReadProductAssociationsResponse) error {
	return h.ProductHandler.ReadProductAssociations(ctx, in, out)
}

func (h *Product) UpdateProductAssociation(ctx context.Context, in *UpdateProductAssociationRequest, out *UpdateProductAssociationResponse) error {
	return h.ProductHandler.UpdateProductAssociation(ctx, in, out)
}

func (h *Product) DeleteProductAssociation(ctx context.Context, in *DeleteProductAssociationRequest, out *DeleteProductAssociationResponse) error {
	return h.ProductHandler.DeleteProductAssociation(ctx, in, out)
}

func (h *Product) CreateProductImage(ctx context.Context, in *CreateProductImageRequest, out *CreateProductImageResponse) error {
	return h.ProductHandler.CreateProductImage(ctx, in, out)
}

func (h *Product) ReadProductImages(ctx context.Context, in *ReadProductImagesRequest, out *ReadProductImagesResponse) error {
	return h.ProductHandler.ReadProductImages(ctx, in, out)
}

func (h *Product) UpdateProductImage(ctx context.Context, in *UpdateProductImageRequest, out *UpdateProductImageResponse) error {
	return h.ProductHandler.UpdateProductImage(ctx, in, out)
}

func (h *Product) DeleteProductImage(ctx context.Context, in *DeleteProductImageRequest, out *DeleteProductImageResponse) error {
	return h.ProductHandler.DeleteProductImage(ctx, in, out)
}

func (h *Product) CreateProductReview(ctx context.Context, in *CreateProductReviewRequest, out *CreateProductReviewResponse) error {
	return h.ProductHandler.CreateProductReview(ctx, in, out)
}

func (h *Product) ReadProductReviews(ctx context.Context, in *ReadProductReviewsRequest, out *ReadProductReviewsResponse) error {
	return h.ProductHandler.ReadProductReviews(ctx, in, out)
}

func (h *Product) ReadProductReview(ctx context.Context, in *ReadProductReviewRequest, out *ReadProductReviewResponse) error {
	return h.ProductHandler.ReadProductReview(ctx, in, out)
}

func (h *Product) UpdateProductReview(ctx context.Context, in *UpdateProductReviewRequest, out *UpdateProductReviewResponse) error {
	return h.ProductHandler.UpdateProductReview(ctx, in, out)
}

func (h *Product) DeleteProductReview(ctx context.Context, in *DeleteProductReviewRequest, out *DeleteProductReviewResponse) error {
	return h.ProductHandler.DeleteProductReview(ctx, in, out)
}

func (h *Product) AcceptProductReview(ctx context.Context, in *AcceptProductReviewRequest, out *AcceptProductReviewResponse) error {
	return h.ProductHandler.AcceptProductReview(ctx, in, out)
}

func (h *Product) RejectProductReview(ctx context.Context, in *RejectProductReviewRequest, out *RejectProductReviewResponse) error {
	return h.ProductHandler.RejectProductReview(ctx, in, out)
}

func (h *Product) CreateProductOption(ctx context.Context, in *CreateProductOptionRequest, out *CreateProductOptionesponse) error {
	return h.ProductHandler.CreateProductOption(ctx, in, out)
}

func (h *Product) ReadProductOptions(ctx context.Context, in *ReadProductOptionsRequest, out *ReadProductOptionsResponse) error {
	return h.ProductHandler.ReadProductOptions(ctx, in, out)
}

func (h *Product) UpdateProductOption(ctx context.Context, in *UpdateProductOptionRequest, out *UpdateProductOptionResponse) error {
	return h.ProductHandler.UpdateProductOption(ctx, in, out)
}

func (h *Product) DeleteProductOption(ctx context.Context, in *DeleteProductOptionRequest, out *DeleteProductOptionResponse) error {
	return h.ProductHandler.DeleteProductOption(ctx, in, out)
}

func (h *Product) CreateProductVariant(ctx context.Context, in *CreateProductVariantRequest, out *CreateProductVariantReponse) error {
	return h.ProductHandler.CreateProductVariant(ctx, in, out)
}

func (h *Product) ReadProductVariants(ctx context.Context, in *ReadProductVariantsRequest, out *ReadProductVariantsResponse) error {
	return h.ProductHandler.ReadProductVariants(ctx, in, out)
}

func (h *Product) ReadProductVariant(ctx context.Context, in *ReadProductVariantRequest, out *ReadProductVariantResponse) error {
	return h.ProductHandler.ReadProductVariant(ctx, in, out)
}

func (h *Product) UpdateProductVariant(ctx context.Context, in *UpdateProductVariantRequest, out *UpdateProductVariantResponse) error {
	return h.ProductHandler.UpdateProductVariant(ctx, in, out)
}

func (h *Product) DeleteProductVariant(ctx context.Context, in *DeleteProductVariantRequest, out *DeleteProductVariantResponse) error {
	return h.ProductHandler.DeleteProductVariant(ctx, in, out)
}

func init() {
	proto.RegisterFile("btdxcx.com/micro/product-srv/proto/product/product.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 2654 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xc4, 0x5c, 0x5b, 0x6f, 0xdc, 0xc6,
	0x15, 0xde, 0xd1, 0x5e, 0xa4, 0x3d, 0x92, 0x5c, 0x77, 0x64, 0xcb, 0x6b, 0x46, 0xb2, 0x05, 0xa6,
	0x05, 0x8c, 0x14, 0xdd, 0xd8, 0x72, 0x62, 0xcb, 0x97, 0xb4, 0x90, 0x2f, 0x49, 0xdd, 0x0b, 0x62,
	0x10, 0x4d, 0x1c, 0xd8, 0x81, 0x1d, 0x9a, 0x4b, 0xcb, 0xac, 0xac, 0xe5, 0x96, 0xe4, 0xca, 0x76,
	0xd0, 0x00, 0x2d, 0x50, 0x18, 0x68, 0xeb, 0x36, 0x40, 0x81, 0x02, 0x01, 0x5a, 0x34, 0xed, 0x4b,
	0xfa, 0x07, 0xfa, 0x0f, 0x0a, 0xf4, 0xad, 0xbf, 0xa0, 0x0f, 0xfd, 0x1d, 0x7d, 0x0b, 0x38, 0x1c,
	0x92, 0x33, 0xc3, 0xe1, 0x0e, 0x87, 0xa2, 0xe0, 0x27, 0x71, 0x48, 0x9e, 0xcb, 0x9c, 0xcb, 0x37,
	0x87, 0x73, 0x66, 0x05, 0x5b, 0x0f, 0xa3, 0xd1, 0x33, 0xe7, 0xd9, 0xd0, 0xf1, 0xf7, 0xde, 0xdc,
	0xf3, 0x9c, 0xc0, 0x7f, 0x73, 0x12, 0xf8, 0xa3, 0xa9, 0x13, 0x7d, 0x37, 0x0c, 0xf6, 0xe3, 0xeb,
	0x28, 0xbb, 0x93, 0xfe, 0x1d, 0x92, 0xbb, 0x78, 0xcd, 0xf1, 0xf7, 0x86, 0x94, 0x9a, 0x50, 0x0e,
	0xc3, 0x60, 0x7f, 0x48, 0xdf, 0x31, 0x9f, 0xc3, 0xea, 0xf5, 0xc0, 0xb5, 0x23, 0x77, 0x3b, 0x8a,
	0x02, 0xef, 0xe1, 0x34, 0x72, 0x2d, 0xf7, 0xe7, 0x53, 0x37, 0x8c, 0xf0, 0x09, 0x98, 0x0f, 0x1f,
	0xfb, 0x93, 0x07, 0xde, 0x68, 0x80, 0x36, 0xd0, 0x99, 0xbe, 0xd5, 0x8b, 0x87, 0xb7, 0x46, 0xf8,
	0x5d, 0xe8, 0x05, 0xae, 0xe3, 0x07, 0xa3, 0xc1, 0xdc, 0x06, 0x3a, 0xb3, 0xb8, 0x39, 0x1c, 0xce,
	0x92, 0x30, 0xcc, 0x18, 0x87, 0x16, 0xa1, 0xb2, 0x28, 0xb5, 0x69, 0xc3, 0x89, 0x82, 0xe8, 0x70,
	0xe2, 0x8f, 0x43, 0x97, 0x11, 0x81, 0x0e, 0x24, 0xe2, 0x3e, 0x1c, 0xb7, 0x5c, 0x7b, 0xc4, 0x3e,
	0x57, 0x4c, 0x6e, 0x15, 0x7a, 0xfe, 0xa3, 0x47, 0xa1, 0x1b, 0x91, 0xc9, 0x75, 0x2d, 0x3a, 0xc2,
	0xc7, 0xa0, 0xfb, 0xc4, 0xdb, 0xf3, 0xa2, 0x41, 0x9b, 0xdc, 0x4e, 0x06, 0xe6, 0x57, 0x08, 0x56,
	0x45, 0x01, 0x74, 0x0a, 0x39, 0x23, 0x24, 0x67, 0x34, 0xc7, 0x30, 0x8a, 0xef, 0x46, 0x7e, 0x64,
	0x3f, 0x49, 0xd9, 0x93, 0x01, 0xfe, 0x01, 0xcc, 0x27, 0x13, 0x09, 0x07, 0x9d, 0x8d, 0x76, 0x0d,
	0x3b, 0xa4, 0xe4, 0xe6, 0x75, 0x38, 0xc6, 0xe9, 0xa9, 0xb4, 0x03, 0x86, 0x8e, 0xe3, 0x8f, 0x5c,
	0xa2, 0x65, 0xdf, 0x22, 0xd7, 0xe6, 0x03, 0xc1, 0x9a, 0x8d, 0xbb, 0xeb, 0x39, 0xac, 0x7e, 0x30,
	0x19, 0xbd, 0xaa, 0x60, 0x2c, 0x88, 0x6e, 0x78, 0x76, 0x37, 0x61, 0xf5, 0x86, 0xfb, 0xc4, 0xd5,
	0x99, 0x9d, 0xcc, 0x0b, 0x27, 0xe1, 0x44, 0x81, 0x4d, 0xa2, 0xa9, 0xf9, 0x57, 0x04, 0x47, 0x45,
	0xf1, 0x19, 0x0f, 0x94, 0xf3, 0x88, 0xef, 0x45, 0xcf, 0x27, 0x19, 0xdf, 0xf8, 0x1a, 0x7f, 0x0b,
	0x96, 0x1d, 0x7f, 0xfc, 0xc8, 0xdb, 0x99, 0x06, 0x76, 0xe4, 0xf9, 0xe3, 0x41, 0x7b, 0xa3, 0x7d,
	0xa6, 0x6f, 0xf1, 0x37, 0xf1, 0x3a, 0xc0, 0x94, 0xd8, 0x69, 0xf4, 0xc0, 0x8e, 0x06, 0x9d, 0x0d,
	0x74, 0xa6, 0x6d, 0xf5, 0xe9, 0x9d, 0xed, 0x28, 0x7e, 0xec, 0x90, 0x9c, 0x26, 0x8f, 0xbb, 0xc9,
	0x63, 0x7a, 0x67, 0x3b, 0x32, 0x03, 0x58, 0x49, 0x52, 0xfe, 0xfd, 0x49, 0xcc, 0x4d, 0x39, 0xff,
	0x6b, 0x82, 0x77, 0xdf, 0x98, 0x6d, 0xfa, 0x94, 0x2b, 0x67, 0xf6, 0xbb, 0x70, 0x8c, 0x97, 0x49,
	0xdd, 0x7a, 0x4d, 0x70, 0x6b, 0x1d, 0xde, 0xf7, 0x00, 0xc7, 0x19, 0x91, 0x3c, 0x6b, 0x1a, 0x5c,
	0xbe, 0x44, 0xb0, 0xc2, 0x71, 0x6f, 0x10, 0x59, 0x6e, 0x88, 0xc8, 0xa2, 0x33, 0xfb, 0x0c, 0x55,
	0xbe, 0x0f, 0x47, 0x73, 0x05, 0xeb, 0xc4, 0xf2, 0x47, 0xac, 0xfd, 0x1a, 0xf5, 0xcc, 0x0b, 0x04,
	0x2b, 0x49, 0x42, 0x57, 0x0c, 0x35, 0x89, 0x7a, 0x8c, 0x22, 0xed, 0x83, 0x84, 0x1f, 0xaf, 0x47,
	0x83, 0x93, 0xbc, 0x06, 0x2b, 0x09, 0x14, 0xd4, 0x9f, 0xa3, 0xb9, 0x0a, 0xc7, 0x78, 0x1e, 0x14,
	0x4b, 0xfe, 0x8f, 0x60, 0x89, 0x15, 0x2a, 0xc5, 0x91, 0xdb, 0x30, 0xef, 0x27, 0xd1, 0x39, 0x98,
	0x23, 0x61, 0x74, 0xa1, 0xfa, 0x2c, 0xe8, 0xe0, 0x43, 0xfb, 0xc9, 0xd4, 0xb5, 0x52, 0x36, 0x02,
	0xbe, 0xb4, 0x67, 0xe3, 0x4b, 0x47, 0xc0, 0x17, 0xe3, 0x26, 0x2c, 0x32, 0x5c, 0xe3, 0xd8, 0xdf,
	0x8f, 0x2f, 0xa8, 0xce, 0xc9, 0x00, 0x6f, 0xc0, 0xe2, 0xc8, 0x0d, 0x9d, 0xc0, 0x23, 0x6f, 0x52,
	0x63, 0xb0, 0xb7, 0xcc, 0x28, 0x85, 0x8c, 0xdb, 0x89, 0xde, 0x4a, 0xc3, 0x5e, 0x17, 0x70, 0xea,
	0x3b, 0xb3, 0xcd, 0x90, 0xb1, 0xe5, 0xbc, 0xf9, 0x31, 0x1c, 0x17, 0xa4, 0xd2, 0x50, 0xb9, 0x2e,
	0x84, 0x4a, 0x4d, 0xee, 0x04, 0x4c, 0xe8, 0xc3, 0xa6, 0xb1, 0xea, 0xef, 0x28, 0x29, 0x30, 0x72,
	0xf6, 0x0d, 0x82, 0xd5, 0x4d, 0x11, 0xac, 0xb4, 0x0c, 0xc0, 0xa0, 0x15, 0x66, 0x54, 0x54, 0x1a,
	0xe0, 0x28, 0xb4, 0xc3, 0xc9, 0x94, 0x86, 0x47, 0x7c, 0x69, 0xde, 0xe5, 0x4c, 0xd8, 0xac, 0x7b,
	0x5e, 0xa0, 0x14, 0x27, 0x6a, 0xeb, 0xc7, 0x28, 0xd2, 0x3e, 0x50, 0x14, 0x0a, 0x7a, 0x34, 0x39,
	0xcd, 0xed, 0x14, 0x6d, 0xea, 0x7b, 0xe1, 0x04, 0x1c, 0x17, 0x58, 0x50, 0xc4, 0xfa, 0xf7, 0x02,
	0x2c, 0x73, 0x52, 0x53, 0x62, 0x94, 0x9b, 0x08, 0x43, 0x67, 0x6c, 0xef, 0x65, 0x08, 0x18, 0x5f,
	0x8b, 0x78, 0xd0, 0x2e, 0xe0, 0x01, 0x5e, 0x83, 0xfe, 0x9e, 0xed, 0x8d, 0x7f, 0x6a, 0x3f, 0xf3,
	0xc7, 0x04, 0x74, 0xfa, 0x56, 0x7e, 0x23, 0x2e, 0x9c, 0xe8, 0xa4, 0xc9, 0x38, 0x1c, 0x74, 0x93,
	0xc2, 0x89, 0xbb, 0x29, 0x00, 0x5b, 0x6f, 0x36, 0xb0, 0xcd, 0x0b, 0xc0, 0x86, 0xef, 0xc1, 0x92,
	0x1d, 0x86, 0xbe, 0xe3, 0xd9, 0x09, 0xda, 0xf6, 0x49, 0x1e, 0x5c, 0xd4, 0x70, 0xc1, 0x70, 0x3b,
	0xa7, 0xb7, 0x38, 0x66, 0xf8, 0x0a, 0xf4, 0xbc, 0x3d, 0x7b, 0xc7, 0x0d, 0x07, 0x40, 0xd8, 0xbe,
	0x3e, 0x9b, 0xed, 0xad, 0xf8, 0x5d, 0x8b, 0x92, 0xe0, 0x8f, 0x01, 0xec, 0xac, 0xe4, 0x1c, 0x2c,
	0x12, 0x06, 0x57, 0xb5, 0xf4, 0x12, 0xeb, 0x65, 0x86, 0x1f, 0xb6, 0xf2, 0x05, 0x66, 0x89, 0xb0,
	0xde, 0xd2, 0x61, 0xcd, 0x57, 0x2d, 0xe9, 0x12, 0xf3, 0x1e, 0x2c, 0xec, 0xdb, 0x81, 0x67, 0x8f,
	0xa3, 0x70, 0xb0, 0x5c, 0x05, 0x4f, 0x3e, 0x4c, 0xde, 0xa6, 0x7c, 0x32, 0xe2, 0x04, 0x97, 0xf6,
	0x3d, 0xf7, 0x69, 0x38, 0x38, 0x52, 0x85, 0x8f, 0x95, 0xbc, 0x9c, 0xe3, 0x12, 0x19, 0x1a, 0xfb,
	0x87, 0x5e, 0xb4, 0x67, 0xeb, 0x60, 0x87, 0x59, 0x07, 0x8d, 0xb7, 0x61, 0x91, 0x89, 0x89, 0x32,
	0x91, 0xe1, 0x64, 0x9a, 0x2c, 0xee, 0x7d, 0x8b, 0x5c, 0x1b, 0xff, 0xab, 0x52, 0x18, 0xdc, 0x17,
	0x0b, 0x83, 0x1b, 0x75, 0xfd, 0x26, 0x2f, 0x13, 0xb2, 0x19, 0xb5, 0xd9, 0x19, 0x35, 0xb4, 0xfc,
	0x9f, 0x83, 0x2e, 0x89, 0x71, 0xa9, 0xc5, 0x8f, 0x41, 0x77, 0x62, 0x47, 0x8f, 0x43, 0x6a, 0xe9,
	0x64, 0x60, 0xfe, 0x6b, 0x0e, 0x96, 0x39, 0xf7, 0xe2, 0x23, 0x30, 0x97, 0x81, 0xd9, 0x9c, 0x37,
	0x22, 0x4b, 0x9b, 0x17, 0x3d, 0x49, 0x99, 0x25, 0x03, 0x3c, 0x80, 0x79, 0xc7, 0xdf, 0xdb, 0x73,
	0xc7, 0x11, 0x9d, 0x49, 0x3a, 0x8c, 0x17, 0xce, 0xd8, 0x7b, 0xe3, 0x1d, 0xe2, 0xb4, 0xae, 0x45,
	0x47, 0xf8, 0x87, 0xd0, 0xb3, 0xa7, 0xd1, 0x63, 0x3f, 0x20, 0x5f, 0x57, 0x8b, 0x9b, 0x9b, 0x1a,
	0x31, 0x37, 0xdc, 0x26, 0x94, 0x16, 0xe5, 0x10, 0xcb, 0x08, 0x23, 0x3b, 0x9a, 0x86, 0x04, 0x8f,
	0x62, 0xd0, 0x25, 0x23, 0x01, 0xab, 0xe6, 0x67, 0x63, 0xd5, 0x82, 0x58, 0x84, 0x6d, 0x41, 0x2f,
	0x91, 0x83, 0x0d, 0x58, 0x98, 0x86, 0x6e, 0x40, 0x10, 0x37, 0xb1, 0x44, 0x36, 0x26, 0x48, 0xec,
	0x39, 0xbb, 0x19, 0x12, 0x7b, 0xce, 0xae, 0xf9, 0x55, 0x1b, 0x96, 0xb9, 0x64, 0x23, 0x08, 0xbe,
	0x9b, 0x23, 0xf8, 0xae, 0x1c, 0xc1, 0xdf, 0x87, 0x85, 0x49, 0xe0, 0x39, 0xde, 0x78, 0x27, 0xa4,
	0x4b, 0xdf, 0x79, 0x8d, 0x8c, 0x1e, 0xde, 0x4e, 0x68, 0xad, 0x8c, 0x49, 0xec, 0x96, 0x28, 0xb0,
	0x9d, 0x5d, 0x77, 0x44, 0xac, 0xbf, 0x60, 0xa5, 0x43, 0xfc, 0x06, 0x1c, 0x0d, 0x1f, 0x7b, 0x93,
	0x89, 0x37, 0xde, 0xb9, 0x6e, 0x47, 0xee, 0x8e, 0x1f, 0x3c, 0x27, 0x8e, 0xe8, 0x5b, 0x85, 0xfb,
	0xd8, 0x84, 0x25, 0x3f, 0x0f, 0xc7, 0xd8, 0xc8, 0x71, 0xc4, 0x70, 0xf7, 0xe2, 0xb0, 0x08, 0x23,
	0xdf, 0xd9, 0x25, 0x56, 0xee, 0x5a, 0xc9, 0x80, 0x41, 0xe4, 0x05, 0x7d, 0x44, 0xe6, 0xbd, 0xd7,
	0x9f, 0xed, 0x3d, 0x10, 0xbd, 0xf7, 0x3a, 0xcc, 0x53, 0x7b, 0x90, 0xe0, 0x9c, 0x06, 0x41, 0x1c,
	0x9c, 0x49, 0xf1, 0x96, 0x0e, 0xcd, 0x5f, 0x23, 0x58, 0xf9, 0x89, 0x3f, 0xf2, 0x1e, 0x3d, 0x4f,
	0x56, 0xb7, 0x1a, 0xc5, 0xca, 0x35, 0xe8, 0x45, 0xc9, 0x72, 0x59, 0xe9, 0xdb, 0xea, 0x36, 0xb3,
	0x98, 0x5a, 0x94, 0xd2, 0xbc, 0x0c, 0x4b, 0xec, 0xfd, 0x38, 0x36, 0xe2, 0x65, 0x39, 0x45, 0xa2,
	0xf8, 0x9a, 0x14, 0xa0, 0xd1, 0x63, 0x37, 0x48, 0x41, 0x8c, 0x8e, 0xe2, 0xef, 0x32, 0x7e, 0x06,
	0xf9, 0x77, 0x19, 0xd5, 0x0b, 0xd5, 0xd6, 0xeb, 0x0b, 0x04, 0xeb, 0x5c, 0x29, 0x5f, 0x7d, 0xc7,
	0xa7, 0x68, 0xa8, 0x1f, 0x43, 0x3f, 0x5b, 0x10, 0xa9, 0xad, 0x86, 0x95, 0x74, 0xca, 0x85, 0xe6,
	0x0c, 0xcc, 0x31, 0x9c, 0x2a, 0xd3, 0x8c, 0x1a, 0x80, 0x93, 0x87, 0x0e, 0x2a, 0xef, 0x16, 0xac,
	0x31, 0x35, 0xb3, 0xc6, 0x46, 0x6c, 0xb1, 0xf0, 0xfb, 0x0c, 0xd6, 0x4b, 0x58, 0x51, 0xcd, 0xf9,
	0x52, 0x04, 0x35, 0x5b, 0x8a, 0x98, 0x11, 0xac, 0x73, 0x85, 0xf1, 0x41, 0x7c, 0x9a, 0x2e, 0x99,
	0x6d, 0x66, 0xc9, 0x94, 0x2e, 0xd2, 0xb1, 0xbf, 0xca, 0xa4, 0x1e, 0x8a, 0xbf, 0xee, 0xc3, 0x3a,
	0x57, 0x5d, 0x37, 0x3c, 0x4b, 0x73, 0x03, 0x4e, 0x95, 0xf1, 0xa7, 0x65, 0xfc, 0x55, 0x38, 0x2a,
	0x3e, 0x93, 0x96, 0x18, 0x99, 0xbd, 0xe6, 0x58, 0x7b, 0xfd, 0x0d, 0xc1, 0x69, 0x3e, 0xc0, 0x99,
	0xb2, 0x57, 0x7f, 0x0a, 0x16, 0x2c, 0x32, 0xa5, 0x32, 0x4d, 0xbf, 0xb3, 0xd5, 0xcc, 0xcb, 0x08,
	0x66, 0x99, 0x98, 0xfb, 0xb0, 0x51, 0xae, 0x21, 0x75, 0xaa, 0x20, 0x17, 0x35, 0x21, 0xf7, 0x47,
	0x70, 0x8a, 0xcd, 0x1f, 0xe6, 0x0b, 0xa0, 0x46, 0x32, 0x4e, 0xe1, 0x74, 0x29, 0xb3, 0xb2, 0x39,
	0xb4, 0x0f, 0x3e, 0x87, 0x7f, 0x22, 0x38, 0xcd, 0xe7, 0xc3, 0x81, 0xdc, 0x2b, 0xcb, 0x43, 0x41,
	0xed, 0x4e, 0x43, 0x2e, 0x2f, 0xd7, 0xfa, 0x10, 0x5d, 0xfe, 0x09, 0x9c, 0xe6, 0xb3, 0xad, 0x69,
	0x6b, 0x99, 0x26, 0x6c, 0x94, 0x4b, 0xc8, 0x32, 0x1a, 0x17, 0x9f, 0x56, 0xfd, 0xde, 0x30, 0x7f,
	0x85, 0xe0, 0x24, 0x97, 0x2f, 0x49, 0xb5, 0xa3, 0xaf, 0xfe, 0x25, 0xe8, 0x92, 0x0a, 0x89, 0x66,
	0x71, 0xa5, 0x9a, 0x2a, 0xa1, 0x30, 0xef, 0x80, 0x21, 0x53, 0x81, 0x7a, 0x2e, 0x63, 0x8c, 0xb4,
	0x19, 0xdf, 0x84, 0x01, 0x93, 0x46, 0xe4, 0x51, 0x9d, 0x6c, 0xfc, 0x08, 0x4e, 0x4a, 0xd8, 0x50,
	0xf5, 0xf2, 0x62, 0x12, 0x69, 0x17, 0x93, 0xc4, 0xfa, 0x5c, 0xe8, 0xbe, 0x1a, 0xeb, 0xcb, 0x54,
	0x38, 0xb8, 0xf5, 0xef, 0xc2, 0x49, 0x2e, 0x78, 0xeb, 0xce, 0x2d, 0xfd, 0x4e, 0x6c, 0xe7, 0xdf,
	0x89, 0xe6, 0x1a, 0x18, 0x32, 0xde, 0x34, 0x25, 0x5e, 0x22, 0x21, 0xa2, 0x92, 0xef, 0xb4, 0xc3,
	0xdf, 0xf4, 0xe3, 0xf7, 0x20, 0xd2, 0x6d, 0xb9, 0x87, 0xf0, 0x9a, 0x54, 0x9b, 0x7a, 0x5b, 0x7f,
	0x72, 0x19, 0x11, 0x17, 0xa3, 0xd9, 0x3b, 0xda, 0x13, 0xce, 0x77, 0x94, 0xdb, 0xf2, 0x1d, 0xe5,
	0x0e, 0xbb, 0x31, 0xfd, 0x0f, 0x04, 0x86, 0x4c, 0xec, 0x2b, 0xdc, 0x9e, 0x2e, 0x6c, 0x03, 0x25,
	0xdb, 0xd3, 0x1f, 0x70, 0x50, 0x50, 0x3b, 0x1e, 0x92, 0x7d, 0x87, 0x76, 0xba, 0xef, 0x60, 0x7e,
	0x22, 0x31, 0x7b, 0xb3, 0x8e, 0xfd, 0x0b, 0x12, 0xf2, 0xb3, 0x29, 0xdd, 0x19, 0xf5, 0x3a, 0x07,
	0x8a, 0x6d, 0xa9, 0x76, 0x4d, 0x9a, 0xe0, 0x8e, 0x90, 0xec, 0x8d, 0x79, 0x6f, 0x1d, 0x5e, 0x93,
	0x32, 0xa6, 0x30, 0x72, 0x07, 0x8c, 0x6d, 0xc7, 0x71, 0x27, 0xd1, 0x21, 0xc8, 0x95, 0x32, 0xce,
	0xe5, 0x5a, 0xee, 0xcf, 0x5c, 0xe7, 0x30, 0xe4, 0x4a, 0x19, 0x97, 0xc1, 0x66, 0xc5, 0xc6, 0xa7,
	0x14, 0x36, 0xfd, 0x09, 0x53, 0xd3, 0x57, 0xeb, 0x66, 0x50, 0x71, 0x94, 0xd4, 0xbc, 0x94, 0x35,
	0x1c, 0x92, 0x07, 0x1a, 0xdf, 0x29, 0xb6, 0x74, 0x22, 0x4c, 0x50, 0x52, 0xed, 0x50, 0x7d, 0xed,
	0xde, 0xe5, 0x32, 0xbf, 0xea, 0x19, 0x85, 0x62, 0x71, 0x31, 0xe1, 0x10, 0x54, 0x3c, 0x8d, 0xc0,
	0xec, 0xd0, 0xa3, 0x86, 0x76, 0xe8, 0x89, 0x9b, 0xb9, 0x9c, 0x7d, 0xb5, 0x6e, 0x16, 0x11, 0x44,
	0xe8, 0xe4, 0x37, 0xe2, 0xac, 0x7b, 0x02, 0x82, 0xd4, 0x9e, 0xb1, 0xac, 0x48, 0x17, 0x51, 0x44,
	0x68, 0xf5, 0xff, 0x1e, 0x09, 0xcb, 0x7f, 0xb6, 0x3d, 0x7a, 0xd8, 0xd5, 0x08, 0xdf, 0x59, 0x29,
	0xab, 0x46, 0xb2, 0xb7, 0x6a, 0x21, 0xb6, 0x5c, 0xc6, 0x7b, 0x5c, 0x50, 0xd3, 0x77, 0xea, 0x64,
	0xc7, 0x28, 0x46, 0x2c, 0x09, 0x23, 0x1a, 0x1c, 0x4c, 0x71, 0x80, 0xf4, 0x7b, 0x4d, 0x59, 0x71,
	0xc0, 0x17, 0xf8, 0xf5, 0xfd, 0x43, 0xf7, 0xd3, 0xdb, 0xd9, 0x7e, 0x7a, 0x0c, 0x44, 0x32, 0xce,
	0x61, 0x83, 0xb6, 0xfe, 0x12, 0x09, 0x09, 0xd4, 0xa0, 0xfe, 0xba, 0x35, 0x82, 0x5c, 0x43, 0x07,
	0xd6, 0xe4, 0x0a, 0x36, 0x69, 0x86, 0xbb, 0x42, 0x16, 0x36, 0xe9, 0xc5, 0x53, 0xb0, 0x26, 0xe7,
	0x9d, 0x4c, 0x60, 0xf3, 0xf3, 0x2e, 0xf4, 0xf3, 0xed, 0xb4, 0x5f, 0x22, 0xf8, 0x86, 0x70, 0xf4,
	0x16, 0xbf, 0x35, 0x7b, 0x4a, 0xf2, 0x43, 0xc2, 0xc6, 0xdb, 0x9a, 0x54, 0x14, 0x71, 0x5a, 0xf8,
	0x33, 0x38, 0xc2, 0x1f, 0x9c, 0xc5, 0xe7, 0x55, 0x85, 0x97, 0xe4, 0x1c, 0xaf, 0xf1, 0x96, 0x1e,
	0x51, 0x26, 0xfe, 0x53, 0x58, 0xe6, 0x9e, 0xe1, 0x4d, 0x0d, 0x46, 0xa9, 0xf0, 0xf3, 0x5a, 0x34,
	0x99, 0xec, 0xd8, 0xfa, 0xc2, 0x59, 0x53, 0x95, 0xf5, 0xe5, 0xa7, 0x62, 0x55, 0xd6, 0x2f, 0x39,
	0xd0, 0x4a, 0x55, 0x10, 0x0e, 0x91, 0xaa, 0x54, 0x90, 0x1f, 0x5d, 0x55, 0xa9, 0x50, 0x76, 0x52,
	0xb5, 0xb5, 0xf9, 0xdf, 0x0e, 0xf4, 0x68, 0xd5, 0xf4, 0x14, 0x96, 0xd8, 0x13, 0x9a, 0xf8, 0x5c,
	0x95, 0xa0, 0xe2, 0x16, 0x48, 0x63, 0x53, 0x87, 0x24, 0x33, 0x43, 0x04, 0x8b, 0xcc, 0x01, 0x4b,
	0x7c, 0x56, 0xed, 0x4f, 0xbe, 0x8a, 0x32, 0xce, 0x69, 0x50, 0x64, 0x52, 0x27, 0x00, 0xf9, 0x03,
	0x3c, 0xac, 0xca, 0x82, 0x8a, 0xac, 0xac, 0x24, 0x23, 0xf1, 0x29, 0x2c, 0xb1, 0x67, 0x10, 0x55,
	0x06, 0x96, 0x9c, 0x9b, 0x54, 0x19, 0x58, 0x76, 0xc4, 0x31, 0x11, 0xcc, 0x1e, 0x2e, 0x54, 0x09,
	0x96, 0x1c, 0x66, 0x54, 0x09, 0x96, 0x9e, 0x5d, 0x6c, 0x6d, 0xfe, 0xe7, 0xdb, 0x30, 0x4f, 0xa1,
	0x30, 0xce, 0x75, 0xae, 0x9c, 0xc0, 0x95, 0x82, 0x85, 0x3f, 0xa0, 0xa4, 0xca, 0x75, 0xe9, 0xc1,
	0xbd, 0xc4, 0x00, 0xec, 0xb1, 0x38, 0x5c, 0x21, 0x60, 0x84, 0x13, 0x7a, 0xc6, 0xa6, 0x0e, 0x89,
	0x18, 0xda, 0xe9, 0x94, 0xcf, 0x56, 0x66, 0xa2, 0x11, 0xda, 0xc5, 0xe9, 0x7e, 0x0a, 0xcb, 0xdc,
	0x3a, 0x8a, 0x2b, 0x85, 0x8d, 0x9e, 0xa9, 0xa5, 0xa7, 0xd3, 0x12, 0xd9, 0xdc, 0x12, 0x88, 0x2b,
	0x45, 0x8e, 0x9e, 0x6c, 0xf9, 0xc1, 0xb3, 0x16, 0xfe, 0x45, 0xda, 0x0e, 0xbf, 0xcd, 0x9d, 0xf9,
	0x52, 0xd8, 0x50, 0xd2, 0x41, 0x57, 0x79, 0x5b, 0xda, 0xb2, 0xfe, 0x13, 0x4a, 0x7f, 0xc4, 0x53,
	0x68, 0x9c, 0x5d, 0xd1, 0x08, 0xdb, 0x02, 0xb6, 0x5f, 0xad, 0x47, 0x9c, 0x59, 0xe5, 0x8f, 0x28,
	0xf9, 0xc1, 0x48, 0xa1, 0x63, 0x8b, 0x2f, 0x57, 0x0e, 0xae, 0xe2, 0x92, 0x7f, 0xa5, 0x16, 0x6d,
	0xa6, 0x54, 0x6c, 0x2c, 0x79, 0x47, 0x55, 0x65, 0xac, 0x99, 0xdd, 0x5f, 0x95, 0xb1, 0x66, 0x37,
	0x71, 0xa9, 0x5e, 0xf2, 0xce, 0xa8, 0x4a, 0xaf, 0x99, 0xfd, 0x5a, 0x95, 0x5e, 0x8a, 0x66, 0x6c,
	0x0b, 0xff, 0x19, 0xc1, 0xa0, 0xac, 0x5d, 0x89, 0xdf, 0xd1, 0x89, 0x90, 0x42, 0xef, 0xc9, 0xf8,
	0x5e, 0x5d, 0xf2, 0x4c, 0xbb, 0x2f, 0x10, 0x9c, 0x28, 0xe9, 0x43, 0xe2, 0xab, 0xd5, 0x03, 0xa5,
	0xd8, 0x0b, 0x35, 0xde, 0xa9, 0x49, 0xcd, 0x19, 0xae, 0xac, 0xe9, 0xa7, 0x32, 0x9c, 0xa2, 0xc5,
	0xa9, 0x32, 0x9c, 0xaa, 0xd7, 0x48, 0xb5, 0x2b, 0x6b, 0xdc, 0xa9, 0xb4, 0x53, 0xb4, 0x14, 0x55,
	0xda, 0x29, 0xfb, 0x85, 0x2d, 0xfc, 0x1b, 0x04, 0xb8, 0xd8, 0x70, 0xc3, 0x17, 0x35, 0xe2, 0x85,
	0xed, 0xe5, 0x18, 0x5b, 0xfa, 0x84, 0x99, 0x2e, 0x2f, 0x10, 0x7c, 0xb3, 0xd0, 0x5c, 0xc3, 0x17,
	0x2a, 0x87, 0x07, 0xd7, 0xd4, 0x33, 0x2e, 0x6a, 0xd3, 0x71, 0x46, 0x29, 0xf6, 0xc1, 0x54, 0x46,
	0x29, 0x6d, 0xde, 0xa9, 0x8c, 0x52, 0xde, 0x72, 0xa3, 0xba, 0x14, 0xdb, 0x5b, 0x2a, 0x5d, 0x4a,
	0x9b, 0x6d, 0x2a, 0x5d, 0x66, 0x74, 0xd2, 0x5a, 0xf8, 0x25, 0x4a, 0x7f, 0x55, 0xc6, 0x6d, 0x1a,
	0xe3, 0x2d, 0xad, 0x92, 0x8d, 0xd9, 0xc0, 0x36, 0x2e, 0xd5, 0xa0, 0xe4, 0x4c, 0x53, 0xec, 0x38,
	0xe1, 0x8b, 0x1a, 0xf5, 0x14, 0xdb, 0x1a, 0x53, 0x99, 0xa6, 0xbc, 0xb9, 0x55, 0x8c, 0x5d, 0x6a,
	0x98, 0x0b, 0x9a, 0x1c, 0xf5, 0x63, 0xb7, 0x60, 0x94, 0x97, 0xd9, 0xcf, 0xb1, 0xb4, 0x7c, 0x54,
	0xde, 0x56, 0x52, 0xf9, 0x68, 0x46, 0xcb, 0x87, 0xaa, 0x23, 0xe9, 0xab, 0xe0, 0x2d, 0xad, 0xf2,
	0x4f, 0x43, 0x9d, 0x59, 0x4d, 0x9c, 0x16, 0xfe, 0x2d, 0x82, 0x15, 0x49, 0xbb, 0x45, 0xa5, 0x4e,
	0x79, 0xeb, 0x47, 0xa5, 0xce, 0x8c, 0xde, 0x0e, 0x51, 0x46, 0xd2, 0x83, 0xc1, 0xca, 0x38, 0x2c,
	0xeb, 0x07, 0xa9, 0x94, 0x99, 0xd1, 0xf0, 0xc1, 0xbf, 0x13, 0x73, 0x9b, 0x7e, 0x48, 0xea, 0xe4,
	0x36, 0xff, 0x3d, 0xa9, 0x4f, 0x59, 0x9a, 0xda, 0xe9, 0xbe, 0x41, 0xf5, 0xbc, 0x10, 0xb6, 0x0f,
	0xb6, 0xf4, 0x09, 0xcb, 0x33, 0xaa, 0x9a, 0x65, 0xca, 0xdb, 0x2a, 0x5a, 0x19, 0x55, 0xf8, 0xd2,
	0x2f, 0x64, 0x54, 0x35, 0x75, 0xca, 0x7b, 0x1e, 0x5a, 0x19, 0x55, 0x50, 0xe7, 0x0f, 0x48, 0xf8,
	0x09, 0x1f, 0xdd, 0x10, 0xc5, 0x3a, 0xd0, 0xce, 0x6f, 0xd0, 0x1a, 0xb5, 0x48, 0x59, 0xfb, 0x48,
	0xfa, 0x04, 0xb8, 0x7a, 0x08, 0x08, 0x3d, 0x0a, 0x75, 0x56, 0x95, 0x36, 0x25, 0x8a, 0x91, 0x9c,
	0x5a, 0xe7, 0xa2, 0x2e, 0x4f, 0xfd, 0x48, 0x16, 0x76, 0xa6, 0xcd, 0x16, 0xfe, 0x5c, 0xfc, 0xe9,
	0x5b, 0x45, 0x5f, 0xcd, 0x68, 0x29, 0x18, 0x97, 0xeb, 0x90, 0x72, 0x1a, 0xc9, 0xb6, 0xd3, 0xb1,
	0x4e, 0x4c, 0xea, 0x69, 0x34, 0x6b, 0xf7, 0xde, 0x6c, 0x3d, 0xec, 0x91, 0xff, 0xe5, 0x71, 0xfe,
	0xeb, 0x00, 0x00, 0x00, 0xff, 0xff, 0x18, 0x64, 0x87, 0x62, 0x07, 0x44, 0x00, 0x00,
}
