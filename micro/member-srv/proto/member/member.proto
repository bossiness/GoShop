syntax = "proto3";

package com.btdxcx.micro.srv.member;

service Customer {
	rpc CreateCustomer(CreateCustomerRequest) returns (CustomerResponse) {}
	rpc ReadCustomers(ReadCustomersRequest) returns (ReadCustomersResponse) {}
	rpc ReadCustomer (ReadCustomerRequest) returns (CustomerResponse);
	rpc ReadCustomerFormName (ReadCustomerFormNameRequest) returns (CustomerResponse);
	rpc UpdateCustomer (UpdateCustomerRequest) returns (CustomerResponse);
	rpc DeleteCustomer (DeleteCustomerRequest) returns (DeleteCustomerResponse);
}

message CreateCustomerRequest {
	string shop_id = 1;
	CustomerRecord record = 2;
}

message CustomerResponse {
	CustomerRecord record = 1;
}

message ReadCustomersRequest {
	string shop_id = 1;
	int32 offset = 2;
	int32 limit = 3;
}

message ReadCustomersResponse {
	int32 offset = 1;
	int32 limit = 2;
	int32 total = 3;

	repeated CustomerRecord records = 4;
}

message ReadCustomerRequest {
	string shop_id = 1;
	string id = 2;
}

message ReadCustomerFormNameRequest {
	string shop_id = 1;
	string name = 2;
}

message UpdateCustomerRequest {
	string shop_id = 1;
	string id = 2;
	CustomerRecord record = 3;
}

message DeleteCustomerRequest {
	string shop_id = 1;
	string id = 2;
}

message DeleteCustomerResponse {
}

message CustomerRecord {
	string id = 1;
	string username = 2;
	string firstName = 3;
	string lastName = 4;
	string phone = 5;
	string email = 6;
	string portrait = 7;
	string gender = 8;
	int64 birthday = 9;
	repeated string groups = 10;
	int64 registered_at = 11;
	int64 access_at = 12;
	int64 integral = 13;
	int64 buy_number = 14;
	int64 totalPurchaseAmount = 15;
	repeated string role = 16;
	string superior = 17;
}

service AdminUser {
	rpc CreateAdminUser(CreateAdminUserRequest) returns (AdminUserResponse) {}
	rpc ReadAdminUsers(ReadAdminUsersRequest) returns (ReadAdminUsersResponse) {}
	rpc ReadAdminUser (ReadAdminUserRequest) returns (AdminUserResponse);
	rpc ReadAdminUserFormName (ReadAdminUserFormNameRequest) returns (AdminUserResponse);
	rpc UpdateAdminUser (UpdateAdminUserRequest) returns (AdminUserResponse);
	rpc DeleteAdminUser (DeleteAdminUserRequest) returns (DeleteAdminUserResponse);
}

message CreateAdminUserRequest {
	string shop_id = 1;
	AdminUserRecord record = 2;
}

message AdminUserResponse {
	AdminUserRecord record = 1;
}

message ReadAdminUsersRequest {
	string shop_id = 1;
	int32 offset = 2;
	int32 limit = 3;
}

message ReadAdminUsersResponse {
	int32 offset = 1;
	int32 limit = 2;
	int32 total = 3;

	repeated AdminUserRecord records = 4;
}

message ReadAdminUserRequest {
	string shop_id = 1;
	string id = 2;
}

message ReadAdminUserFormNameRequest {
	string shop_id = 1;
	string name = 2;
}

message UpdateAdminUserRequest {
	string shop_id = 1;
	string id = 2;
	AdminUserRecord record = 3;
}

message DeleteAdminUserRequest {
	string shop_id = 1;
	string id = 2;
}

message DeleteAdminUserResponse {
}

message AdminUserRecord {
	string id = 1;
	string username = 2;
	string firstName = 3;
	string lastName = 4;
	string phone = 5;
	string email = 6;
	string portrait = 7;
	int64 registered_at = 8;
	int64 access_at = 9;
	bool enable = 10;
	repeated string role = 11;
}